{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nexport var NotFoundError = function (_Error) {\n  _inherits(NotFoundError, _Error);\n\n  var _super = _createSuper(NotFoundError);\n\n  function NotFoundError(message) {\n    var _this;\n\n    _classCallCheck(this, NotFoundError);\n\n    _this = _super.call(this, `Not Found! Params: ${message}`);\n    _this.name = 'NotFoundError';\n    _this.stack = new Error().stack;\n    return _this;\n  }\n\n  return _createClass(NotFoundError);\n}(_wrapNativeSuper(Error));\nexport var ExpiredError = function (_Error2) {\n  _inherits(ExpiredError, _Error2);\n\n  var _super2 = _createSuper(ExpiredError);\n\n  function ExpiredError(message) {\n    var _this2;\n\n    _classCallCheck(this, ExpiredError);\n\n    _this2 = _super2.call(this, `Expired! Params: ${message}`);\n    _this2.name = 'ExpiredError';\n    _this2.stack = new Error().stack;\n    return _this2;\n  }\n\n  return _createClass(ExpiredError);\n}(_wrapNativeSuper(Error));","map":{"version":3,"names":["NotFoundError","message","name","stack","Error","ExpiredError"],"sources":["/Users/atsushi/Dev/baby/node_modules/react-native-storage/error.js"],"sourcesContent":["/**\n * Created by sunny on 9/1/16.\n */\n\nexport class NotFoundError extends Error {\n  constructor(message) {\n    super(`Not Found! Params: ${message}`);\n    this.name = 'NotFoundError';\n    this.stack = new Error().stack; // Optional\n  }\n}\n// NotFoundError.prototype = Object.create(Error.prototype);\n\nexport class ExpiredError extends Error {\n  constructor(message) {\n    super(`Expired! Params: ${message}`);\n    this.name = 'ExpiredError';\n    this.stack = new Error().stack; // Optional\n  }\n}\n// ExpiredError.prototype = Object.create(Error.prototype);\n"],"mappings":";;;;;;;;;;;AAIA,WAAaA,aAAb;EAAA;;EAAA;;EACE,uBAAYC,OAAZ,EAAqB;IAAA;;IAAA;;IACnB,0BAAO,sBAAqBA,OAAQ,EAApC;IACA,MAAKC,IAAL,GAAY,eAAZ;IACA,MAAKC,KAAL,GAAa,IAAIC,KAAJ,GAAYD,KAAzB;IAHmB;EAIpB;;EALH;AAAA,mBAAmCC,KAAnC;AASA,WAAaC,YAAb;EAAA;;EAAA;;EACE,sBAAYJ,OAAZ,EAAqB;IAAA;;IAAA;;IACnB,4BAAO,oBAAmBA,OAAQ,EAAlC;IACA,OAAKC,IAAL,GAAY,cAAZ;IACA,OAAKC,KAAL,GAAa,IAAIC,KAAJ,GAAYD,KAAzB;IAHmB;EAIpB;;EALH;AAAA,mBAAkCC,KAAlC"},"metadata":{},"sourceType":"module"}
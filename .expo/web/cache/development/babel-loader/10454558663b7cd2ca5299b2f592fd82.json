{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect, useMemo } from 'react';\nimport firebase from 'firebase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar BabyContext = createContext();\nexport function useBabyContext() {\n  return useContext(BabyContext);\n}\nexport function BabyProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      baby = _useState2[0],\n      setBaby = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentBaby = _useState4[0],\n      setCurrentBaby = _useState4[1];\n\n  var unsubscribedCurrentBaby;\n  var initialState = useMemo(function () {\n    return {\n      baby: baby,\n      currentBaby: currentBaby\n    };\n  }, [baby, currentBaby]);\n  useEffect(function () {\n    var db = firebase.firestore();\n    var unsubscribedBaby = firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        var babyRef = db.collection(\"users/\" + user.uid + \"/babyData\");\n        var currentBabyRef = db.collection(\"users/\" + user.uid + \"/currentBaby\");\n        unsubscribedBaby = babyRef.onSnapshot(function (babySnapshot) {\n          setBaby(babySnapshot);\n          unsubscribedCurrentBaby = currentBabyRef.onSnapshot(function (currentBabySnapshot) {\n            setCurrentBaby(currentBabySnapshot);\n          }, function (currentBabyError) {\n            console.log(currentBabyError);\n            Alert.alert('currentBabyデータの読み込みに失敗しました。');\n          });\n        }, function (babyError) {\n          console.log(babyError);\n          Alert.alert('babyデータの読み込みに失敗しました。');\n        });\n      }\n    });\n    return function () {\n      unsubscribedBaby();\n\n      if (unsubscribedCurrentBaby) {\n        unsubscribedCurrentBaby();\n      }\n    };\n  }, []);\n  return _jsx(BabyContext.Provider, {\n    value: initialState,\n    children: children\n  });\n}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useMemo","firebase","BabyContext","useBabyContext","BabyProvider","children","baby","setBaby","currentBaby","setCurrentBaby","unsubscribedCurrentBaby","initialState","db","firestore","unsubscribedBaby","auth","onAuthStateChanged","user","babyRef","collection","uid","currentBabyRef","onSnapshot","babySnapshot","currentBabySnapshot","currentBabyError","console","log","Alert","alert","babyError"],"sources":["/Users/atsushi/Dev/baby/src/context/BabyContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useMemo } from 'react';\nimport firebase from 'firebase';\n\n//＝＝＝＝＝＝＝＝\n// Context\n//＝＝＝＝＝＝＝＝\nconst BabyContext = createContext();\n\nexport function useBabyContext() {\n    return useContext(BabyContext);\n}\n\nexport function BabyProvider({ children }) {\n    const [baby, setBaby] = useState('');\n    const [currentBaby, setCurrentBaby] = useState('');\n\n    // unsubscribedCurrentBaby を定義\n    let unsubscribedCurrentBaby;\n\n    // initialStateをuseMemoでキャッシュ\n    const initialState = useMemo(() => {\n        return {\n            baby: baby,\n            currentBaby: currentBaby,\n        };\n    }, [baby, currentBaby]);\n\n    useEffect(() => {\n        const db = firebase.firestore();\n        let unsubscribedBaby = firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                const babyRef = db.collection(`users/${user.uid}/babyData`);\n                const currentBabyRef = db.collection(`users/${user.uid}/currentBaby`);\n\n                unsubscribedBaby = babyRef.onSnapshot((babySnapshot) => {\n                    setBaby(babySnapshot);\n\n                    // currentBabyコレクションも監視\n                    // unsubscribedCurrentBaby の初期化\n                    unsubscribedCurrentBaby = currentBabyRef.onSnapshot((currentBabySnapshot) => {\n                        setCurrentBaby(currentBabySnapshot);\n                    }, (currentBabyError) => {\n                        console.log(currentBabyError);\n                        Alert.alert('currentBabyデータの読み込みに失敗しました。');\n                    });\n                }, (babyError) => {\n                    console.log(babyError);\n                    Alert.alert('babyデータの読み込みに失敗しました。');\n                });\n            }\n        });\n        return () => {\n            unsubscribedBaby();\n            \n            // クリーンアップ時にunsubscribedCurrentBabyも呼び出す\n            if (unsubscribedCurrentBaby) {\n                unsubscribedCurrentBaby();\n            }\n        };\n    }, []);\n\n    return (\n        <BabyContext.Provider value={initialState}>\n            {children}\n        </BabyContext.Provider>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,SAArD,EAAgEC,OAAhE,QAA+E,OAA/E;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAKA,IAAMC,WAAW,GAAGN,aAAa,EAAjC;AAEA,OAAO,SAASO,cAAT,GAA0B;EAC7B,OAAON,UAAU,CAACK,WAAD,CAAjB;AACH;AAED,OAAO,SAASE,YAAT,OAAoC;EAAA,IAAZC,QAAY,QAAZA,QAAY;;EACvC,gBAAwBP,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOQ,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAsCT,QAAQ,CAAC,EAAD,CAA9C;EAAA;EAAA,IAAOU,WAAP;EAAA,IAAoBC,cAApB;;EAGA,IAAIC,uBAAJ;EAGA,IAAMC,YAAY,GAAGX,OAAO,CAAC,YAAM;IAC/B,OAAO;MACHM,IAAI,EAAEA,IADH;MAEHE,WAAW,EAAEA;IAFV,CAAP;EAIH,CAL2B,EAKzB,CAACF,IAAD,EAAOE,WAAP,CALyB,CAA5B;EAOAT,SAAS,CAAC,YAAM;IACZ,IAAMa,EAAE,GAAGX,QAAQ,CAACY,SAAT,EAAX;IACA,IAAIC,gBAAgB,GAAGb,QAAQ,CAACc,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,IAAD,EAAU;MAChE,IAAIA,IAAJ,EAAU;QACN,IAAMC,OAAO,GAAGN,EAAE,CAACO,UAAH,YAAuBF,IAAI,CAACG,GAA5B,eAAhB;QACA,IAAMC,cAAc,GAAGT,EAAE,CAACO,UAAH,YAAuBF,IAAI,CAACG,GAA5B,kBAAvB;QAEAN,gBAAgB,GAAGI,OAAO,CAACI,UAAR,CAAmB,UAACC,YAAD,EAAkB;UACpDhB,OAAO,CAACgB,YAAD,CAAP;UAIAb,uBAAuB,GAAGW,cAAc,CAACC,UAAf,CAA0B,UAACE,mBAAD,EAAyB;YACzEf,cAAc,CAACe,mBAAD,CAAd;UACH,CAFyB,EAEvB,UAACC,gBAAD,EAAsB;YACrBC,OAAO,CAACC,GAAR,CAAYF,gBAAZ;YACAG,KAAK,CAACC,KAAN,CAAY,6BAAZ;UACH,CALyB,CAA1B;QAMH,CAXkB,EAWhB,UAACC,SAAD,EAAe;UACdJ,OAAO,CAACC,GAAR,CAAYG,SAAZ;UACAF,KAAK,CAACC,KAAN,CAAY,sBAAZ;QACH,CAdkB,CAAnB;MAeH;IACJ,CArBsB,CAAvB;IAsBA,OAAO,YAAM;MACTf,gBAAgB;;MAGhB,IAAIJ,uBAAJ,EAA6B;QACzBA,uBAAuB;MAC1B;IACJ,CAPD;EAQH,CAhCQ,EAgCN,EAhCM,CAAT;EAkCA,OACI,KAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,YAA7B;IAAA,UACKN;EADL,EADJ;AAKH"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"label\", \"accessibilityLabel\", \"accessibilityState\", \"animated\", \"color\", \"disabled\", \"onPress\", \"onLongPress\", \"delayLongPress\", \"theme\", \"style\", \"visible\", \"uppercase\", \"loading\", \"testID\", \"size\", \"customSize\", \"mode\", \"variant\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withInternalTheme } from \"../../core/theming\";\nimport ActivityIndicator from \"../ActivityIndicator\";\nimport CrossFadeIcon from \"../CrossFadeIcon\";\nimport Icon from \"../Icon\";\nimport Surface from \"../Surface\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { getExtendedFabStyle, getFABColors, getFabStyle } from \"./utils\";\nvar FAB = React.forwardRef(function (_ref, ref) {\n  var icon = _ref.icon,\n      label = _ref.label,\n      _ref$accessibilityLab = _ref.accessibilityLabel,\n      accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,\n      accessibilityState = _ref.accessibilityState,\n      _ref$animated = _ref.animated,\n      animated = _ref$animated === void 0 ? true : _ref$animated,\n      customColor = _ref.color,\n      disabled = _ref.disabled,\n      onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      delayLongPress = _ref.delayLongPress,\n      theme = _ref.theme,\n      style = _ref.style,\n      _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? true : _ref$visible,\n      _ref$uppercase = _ref.uppercase,\n      uppercase = _ref$uppercase === void 0 ? !theme.isV3 : _ref$uppercase,\n      loading = _ref.loading,\n      _ref$testID = _ref.testID,\n      testID = _ref$testID === void 0 ? 'fab' : _ref$testID,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'medium' : _ref$size,\n      customSize = _ref.customSize,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'elevated' : _ref$mode,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n      visibility = _React$useRef.current;\n\n  var isV3 = theme.isV3,\n      animation = theme.animation;\n  var scale = animation.scale;\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n  var IconComponent = animated ? CrossFadeIcon : Icon;\n  var fabStyle = getFabStyle({\n    customSize: customSize,\n    size: size,\n    theme: theme\n  });\n\n  var _ref2 = StyleSheet.flatten(style) || {},\n      _ref2$borderRadius = _ref2.borderRadius,\n      borderRadius = _ref2$borderRadius === void 0 ? fabStyle.borderRadius : _ref2$borderRadius,\n      customBackgroundColor = _ref2.backgroundColor;\n\n  var _getFABColors = getFABColors({\n    theme: theme,\n    variant: variant,\n    disabled: disabled,\n    customColor: customColor,\n    customBackgroundColor: customBackgroundColor\n  }),\n      backgroundColor = _getFABColors.backgroundColor,\n      foregroundColor = _getFABColors.foregroundColor,\n      rippleColor = _getFABColors.rippleColor;\n\n  var isLargeSize = size === 'large';\n  var isFlatMode = mode === 'flat';\n  var iconSize = isLargeSize ? 36 : 24;\n  var loadingIndicatorSize = isLargeSize ? 24 : 18;\n  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  var extendedStyle = getExtendedFabStyle({\n    customSize: customSize,\n    theme: theme\n  });\n\n  var textStyle = _objectSpread({\n    color: foregroundColor\n  }, font);\n\n  var md3Elevation = isFlatMode || disabled ? 0 : 3;\n\n  var newAccessibilityState = _objectSpread(_objectSpread({}, accessibilityState), {}, {\n    disabled: disabled\n  });\n\n  return React.createElement(Surface, _extends({\n    ref: ref\n  }, rest, {\n    style: [{\n      borderRadius: borderRadius,\n      backgroundColor: backgroundColor,\n      opacity: visibility,\n      transform: [{\n        scale: visibility\n      }]\n    }, styles.container, !isV3 && styles.elevated, !isV3 && disabled && styles.disabled, style],\n    pointerEvents: visible ? 'auto' : 'none',\n    testID: testID + \"-container\"\n  }, isV3 && {\n    elevation: md3Elevation\n  }), React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    rippleColor: rippleColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: newAccessibilityState,\n    testID: testID\n  }, React.createElement(View, {\n    style: [styles.content, label ? extendedStyle : fabStyle],\n    testID: testID + \"-content\",\n    pointerEvents: \"none\"\n  }, icon && loading !== true ? React.createElement(IconComponent, {\n    source: icon,\n    size: customSize ? customSize / 2 : iconSize,\n    color: foregroundColor\n  }) : null, loading ? React.createElement(ActivityIndicator, {\n    size: customSize ? customSize / 2 : loadingIndicatorSize,\n    color: foregroundColor\n  }) : null, label ? React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    style: [styles.label, uppercase && styles.uppercaseLabel, textStyle]\n  }, label) : null)));\n});\nvar styles = StyleSheet.create({\n  elevated: {\n    elevation: 6\n  },\n  container: {\n    overflow: 'hidden'\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginHorizontal: 8\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  disabled: {\n    elevation: 0\n  }\n});\nexport default withInternalTheme(FAB);\nvar FABWithTheme = withInternalTheme(FAB);\nexport { FABWithTheme as FAB };","map":{"version":3,"sources":["FAB.tsx"],"names":["React","withInternalTheme","ActivityIndicator","CrossFadeIcon","Icon","Surface","TouchableRipple","Text","getExtendedFabStyle","getFABColors","getFabStyle","FAB","forwardRef","icon","label","accessibilityLabel","accessibilityState","animated","color","customColor","disabled","onPress","onLongPress","delayLongPress","theme","style","visible","uppercase","isV3","loading","testID","size","customSize","mode","variant","rest","ref","current","visibility","useRef","Animated","Value","animation","scale","useEffect","timing","toValue","duration","useNativeDriver","start","IconComponent","fabStyle","borderRadius","backgroundColor","customBackgroundColor","StyleSheet","flatten","foregroundColor","rippleColor","isLargeSize","isFlatMode","iconSize","loadingIndicatorSize","font","fonts","labelLarge","medium","extendedStyle","textStyle","md3Elevation","newAccessibilityState","opacity","transform","styles","container","elevated","elevation","content","uppercaseLabel","create","overflow","flexDirection","alignItems","justifyContent","marginHorizontal","textTransform","FABWithTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityState,\n  Animated,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport ActivityIndicator from '../ActivityIndicator';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { getExtendedFabStyle, getFABColors, getFabStyle } from './utils';\n\ntype FABSize = 'small' | 'medium' | 'large';\n\ntype FABMode = 'flat' | 'elevated';\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   *  @deprecated Deprecated in v.3x - use prop size=\"small\".\n   *\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Size of the `FAB`.\n   * - `small` - FAB with small height (40).\n   * - `medium` - FAB with default medium height (56).\n   * - `large` - FAB with large height (96).\n   */\n  size?: FABSize;\n  /**\n   * Custom size for the `FAB`. This prop takes precedence over size prop\n   */\n  customSize?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Mode of the `FAB`. You can change the mode to adjust the the shadow:\n   * - `flat` - button without a shadow.\n   * - `elevated` - button with a shadow.\n   */\n  mode?: FABMode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  testID?: string;\n  ref?: React.RefObject<View>;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/fab-1.png\" />\n *   <img class=\"small\" src=\"screenshots/fab-2.png\" />\n *   <img class=\"small\" src=\"screenshots/fab-3.png\" />\n *   <img class=\"small\" src=\"screenshots/fab-4.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     icon=\"plus\"\n *     style={styles.fab}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst FAB = React.forwardRef<View, Props>(\n  (\n    {\n      icon,\n      label,\n      accessibilityLabel = label,\n      accessibilityState,\n      animated = true,\n      color: customColor,\n      disabled,\n      onPress,\n      onLongPress,\n      delayLongPress,\n      theme,\n      style,\n      visible = true,\n      uppercase = !theme.isV3,\n      loading,\n      testID = 'fab',\n      size = 'medium',\n      customSize,\n      mode = 'elevated',\n      variant = 'primary',\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const { current: visibility } = React.useRef<Animated.Value>(\n      new Animated.Value(visible ? 1 : 0)\n    );\n    const { isV3, animation } = theme;\n    const { scale } = animation;\n\n    React.useEffect(() => {\n      if (visible) {\n        Animated.timing(visibility, {\n          toValue: 1,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }).start();\n      } else {\n        Animated.timing(visibility, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true,\n        }).start();\n      }\n    }, [visible, scale, visibility]);\n\n    const IconComponent = animated ? CrossFadeIcon : Icon;\n\n    const fabStyle = getFabStyle({ customSize, size, theme });\n\n    const {\n      borderRadius = fabStyle.borderRadius,\n      backgroundColor: customBackgroundColor,\n    } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n    const { backgroundColor, foregroundColor, rippleColor } = getFABColors({\n      theme,\n      variant,\n      disabled,\n      customColor,\n      customBackgroundColor,\n    });\n\n    const isLargeSize = size === 'large';\n    const isFlatMode = mode === 'flat';\n    const iconSize = isLargeSize ? 36 : 24;\n    const loadingIndicatorSize = isLargeSize ? 24 : 18;\n    const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n    const extendedStyle = getExtendedFabStyle({ customSize, theme });\n    const textStyle = {\n      color: foregroundColor,\n      ...font,\n    };\n\n    const md3Elevation = isFlatMode || disabled ? 0 : 3;\n\n    const newAccessibilityState = { ...accessibilityState, disabled };\n\n    return (\n      <Surface\n        ref={ref}\n        {...rest}\n        style={\n          [\n            {\n              borderRadius,\n              backgroundColor,\n              opacity: visibility,\n              transform: [\n                {\n                  scale: visibility,\n                },\n              ],\n            },\n            styles.container,\n            !isV3 && styles.elevated,\n            !isV3 && disabled && styles.disabled,\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n        testID={`${testID}-container`}\n        {...(isV3 && { elevation: md3Elevation })}\n      >\n        <TouchableRipple\n          borderless\n          onPress={onPress}\n          onLongPress={onLongPress}\n          delayLongPress={delayLongPress}\n          rippleColor={rippleColor}\n          disabled={disabled}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={newAccessibilityState}\n          testID={testID}\n        >\n          <View\n            style={[styles.content, label ? extendedStyle : fabStyle]}\n            testID={`${testID}-content`}\n            pointerEvents=\"none\"\n          >\n            {icon && loading !== true ? (\n              <IconComponent\n                source={icon}\n                size={customSize ? customSize / 2 : iconSize}\n                color={foregroundColor}\n              />\n            ) : null}\n            {loading ? (\n              <ActivityIndicator\n                size={customSize ? customSize / 2 : loadingIndicatorSize}\n                color={foregroundColor}\n              />\n            ) : null}\n            {label ? (\n              <Text\n                variant=\"labelLarge\"\n                selectable={false}\n                style={[\n                  styles.label,\n                  uppercase && styles.uppercaseLabel,\n                  textStyle,\n                ]}\n              >\n                {label}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  elevated: {\n    elevation: 6,\n  },\n  container: {\n    overflow: 'hidden',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withInternalTheme(FAB);\n\n// @component-docs ignore-next-line\nconst FABWithTheme = withInternalTheme(FAB);\n// @component-docs ignore-next-line\nexport { FABWithTheme as FAB };\n"]},"metadata":{},"sourceType":"module"}
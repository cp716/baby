{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport firebase from 'firebase';\nimport { useBabyContext } from \"../../context/BabyContext\";\nimport { CheckBox } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ToiletInputForm(props) {\n  var selectTime = props.selectTime;\n  var toggleModal = props.toggleModal;\n\n  var _useBabyContext = useBabyContext(),\n      currentBaby = _useBabyContext.currentBaby;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      babyIdData = _useState2[0],\n      setBabyIdData = _useState2[1];\n\n  useEffect(function () {\n    var currentBabyData = [];\n\n    if (currentBaby !== \"\") {\n      currentBaby.forEach(function (doc) {\n        var data = doc.data();\n        setBabyIdData(data.babyId);\n      });\n    }\n  }, []);\n  var date = new Date(selectTime);\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      oshikko = _useState4[0],\n      setOshikko = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      unchi = _useState6[0],\n      setUnchi = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      bodyText = _useState8[0],\n      setBodyText = _useState8[1];\n\n  function handlePress() {\n    var db = firebase.firestore();\n\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n\n    var ref = db.collection(\"users/\" + currentUser.uid + \"/babyData\").doc(babyIdData).collection(year + \"_\" + month);\n\n    if (oshikko || unchi) {\n      ref.add({\n        'category': 'TOILET',\n        updatedAt: selectTime,\n        day: day,\n        bodyText: bodyText,\n        toilet: {\n          oshikko: oshikko,\n          unchi: unchi\n        }\n      }).then(function (docRef) {\n        console.log('書き込みました', docRef.id);\n      }).catch(function (error) {\n        console.log('失敗しました', error);\n      });\n      toggleModal();\n    } else {\n      Alert.alert(\"未入力です\");\n    }\n  }\n\n  return _jsxs(ScrollView, {\n    scrollEnabled: false,\n    children: [_jsx(View, {\n      style: styles.inputTypeContainer,\n      children: _jsxs(View, {\n        style: styles.radioButton,\n        children: [_jsx(CheckBox, {\n          title: \"\\u304A\\u3057\\u3063\\u3053\",\n          checked: oshikko,\n          onPress: function onPress() {\n            return setOshikko(!oshikko);\n          }\n        }), _jsx(CheckBox, {\n          title: \"\\u3046\\u3093\\u3061\",\n          checked: unchi,\n          onPress: function onPress() {\n            return setUnchi(!unchi);\n          }\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        children: \"\\u30E1\\u30E2\"\n      }), _jsx(TextInput, {\n        keyboardType: \"web-search\",\n        value: bodyText,\n        multiline: true,\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          setBodyText(text);\n        },\n        placeholder: \"\\u30E1\\u30E2\\u3092\\u5165\\u529B\"\n      })]\n    }), _jsxs(View, {\n      style: modalStyles.container,\n      children: [_jsx(TouchableOpacity, {\n        style: modalStyles.confirmButton,\n        onPress: toggleModal,\n        children: _jsx(Text, {\n          style: modalStyles.confirmButtonText,\n          children: \"close\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: modalStyles.confirmButton,\n        onPress: handlePress,\n        children: _jsx(Text, {\n          style: modalStyles.confirmButtonText,\n          children: \"\\u767B\\u9332\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.advertisement,\n      children: _jsx(Image, {\n        style: {\n          width: '100%'\n        },\n        resizeMode: \"contain\",\n        source: require(\"../../img/IMG_3641.jpg\")\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  inputTypeContainer: {\n    paddingHorizontal: 27,\n    paddingVertical: 10\n  },\n  inputContainer: {\n    paddingHorizontal: 27,\n    paddingVertical: 10,\n    height: 125,\n    backgroundColor: '#859602'\n  },\n  input: {\n    flex: 1,\n    textAlignVertical: 'top',\n    fontSize: 16,\n    lineHeight: 25,\n    backgroundColor: '#ffffff'\n  },\n  radioButton: {\n    justifyContent: 'space-around'\n  },\n  advertisement: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    alignItems: 'center'\n  }\n});\nvar modalStyles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  confirmButton: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: '5%',\n    backgroundColor: '#FFF',\n    borderColor: '#36C1A7',\n    borderWidth: 1,\n    borderRadius: 10,\n    width: \"40%\"\n  },\n  confirmButtonText: {\n    color: '#36C1A7',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    padding: 10,\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","firebase","useBabyContext","CheckBox","ToiletInputForm","props","selectTime","toggleModal","currentBaby","babyIdData","setBabyIdData","currentBabyData","forEach","doc","data","babyId","date","Date","year","getFullYear","month","getMonth","day","getDate","oshikko","setOshikko","unchi","setUnchi","bodyText","setBodyText","handlePress","db","firestore","auth","currentUser","ref","collection","uid","add","updatedAt","toilet","then","docRef","console","log","id","catch","error","Alert","alert","styles","inputTypeContainer","radioButton","inputContainer","input","text","modalStyles","container","confirmButton","confirmButtonText","advertisement","width","require","StyleSheet","create","paddingHorizontal","paddingVertical","height","backgroundColor","flex","textAlignVertical","fontSize","lineHeight","justifyContent","paddingTop","paddingBottom","alignItems","flexDirection","marginLeft","marginRight","marginTop","borderColor","borderWidth","borderRadius","color","fontWeight","textAlign","padding"],"sources":["/Users/atsushi/Dev/baby/src/components/AddButton/ToiletInputForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, StyleSheet, Alert, TouchableOpacity, ScrollView, Image } from 'react-native';\nimport firebase from 'firebase';\nimport { useBabyContext } from '../../context/BabyContext';\n\nimport { CheckBox } from 'react-native-elements'\n\nexport default function ToiletInputForm(props) {\n    const { selectTime } = props;\n    const { toggleModal } = props;\n\n    const { currentBaby } = useBabyContext();\n    const [babyIdData, setBabyIdData] = useState('');\n\n    useEffect(() => {\n        const currentBabyData = [];\n        if(currentBaby !== \"\") {\n            currentBaby.forEach((doc) => {\n                const data = doc.data();\n                setBabyIdData(data.babyId)\n                //setBabyNameData(data.babyName)\n                //setBabyBirthdayData(data.birthday)\n            });\n        }\n    }, []);\n\n    const date = new Date(selectTime);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    \n    const [oshikko, setOshikko] = useState(false);\n    const [unchi, setUnchi] = useState(false);\n    const [bodyText, setBodyText] = useState('');\n    \n    function handlePress() {\n        const db = firebase.firestore();\n        const { currentUser } = firebase.auth();\n        const ref = db.collection(`users/${currentUser.uid}/babyData`).doc(babyIdData)\n        .collection(`${year}_${month}`)\n\n        if( oshikko || unchi ) {\n            ref.add({\n                'category':'TOILET',\n                updatedAt: selectTime,\n                day: day,\n                bodyText,\n                toilet: {\n                    oshikko: oshikko,\n                    unchi: unchi,\n                },\n            })\n            .then((docRef) => {\n                console.log('書き込みました', docRef.id);\n            })\n            .catch((error) => {\n                console.log('失敗しました', error);\n            });\n            toggleModal()\n        } else {\n            Alert.alert(\"未入力です\");\n        }\n    }\n\n    return (\n        <ScrollView scrollEnabled={false}>\n            <View style={styles.inputTypeContainer}>\n                <View style={styles.radioButton}>\n                    <CheckBox\n                        title='おしっこ'\n                        checked={oshikko}\n                        onPress={() => setOshikko(!oshikko)}\n                    />\n                    <CheckBox\n                        title='うんち'\n                        checked={unchi}\n                        onPress={() => setUnchi(!unchi)}\n                    />\n                </View>\n            </View>\n            <View style={styles.inputContainer}>\n                <Text>メモ</Text>\n                <TextInput\n                        keyboardType=\"web-search\"\n                        value={bodyText}\n                        multiline\n                        style={styles.input}\n                        onChangeText={(text) => { setBodyText(text); }}\n                        //autoFocus\n                        placeholder = \"メモを入力\"\n                />\n            </View>\n            <View style={modalStyles.container}>\n                <TouchableOpacity style={modalStyles.confirmButton} onPress={toggleModal} >\n                    <Text style={modalStyles.confirmButtonText}>close</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={modalStyles.confirmButton} onPress={handlePress} >\n                    <Text style={modalStyles.confirmButtonText}>登録</Text>\n                </TouchableOpacity>\n            </View>\n            <View style={styles.advertisement}>\n                <Image style={{width: '100%'}}\n                    resizeMode='contain'\n                    source={require('../../img/IMG_3641.jpg')}\n                />\n            </View>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    inputTypeContainer: {\n        paddingHorizontal: 27,\n        paddingVertical: 10,\n        //height: 50,\n        //backgroundColor: '#987652',\n        //flex: 1,\n        //flexDirection: 'row',\n        //width: 350 ,\n    },\n    inputContainer: {\n        paddingHorizontal: 27,\n        paddingVertical: 10,\n        height: 125,\n        backgroundColor: '#859602'\n        //flex: 1,\n    },\n    input: {\n        flex: 1,\n        textAlignVertical: 'top',\n        fontSize: 16,\n        lineHeight: 25,\n        backgroundColor: '#ffffff'\n    },\n    radioButton: {\n        //flexDirection: 'row',\n        //paddingLeft: 'auto',\n        //paddingRight: 'auto',\n        //marginLeft: 'auto',\n        //marginRight: 'auto',\n        justifyContent: 'space-around',//横並び均等配置\n    },\n    advertisement: {\n        //marginTop: 'auto',\n        //marginBottom: 'auto',\n        paddingTop: 10,\n        paddingBottom: 10,\n        //height: '15%',\n        //width: '50%',\n        alignItems:'center',\n        //backgroundColor: '#464876',\n    },\n});\n\nconst modalStyles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n    },\n    confirmButton : {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop : '5%',\n        backgroundColor : '#FFF',\n        borderColor : '#36C1A7',\n        borderWidth : 1,\n        borderRadius : 10,\n        width: \"40%\",\n    },\n    confirmButtonText : {\n        color : '#36C1A7',\n        fontWeight : 'bold',\n        textAlign : 'center',\n        padding: 10,\n        fontSize: 16,\n    },\n});"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,cAAT;AAEA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAC3C,IAAQC,UAAR,GAAuBD,KAAvB,CAAQC,UAAR;EACA,IAAQC,WAAR,GAAwBF,KAAxB,CAAQE,WAAR;;EAEA,sBAAwBL,cAAc,EAAtC;EAAA,IAAQM,WAAR,mBAAQA,WAAR;;EACA,gBAAoCT,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOU,UAAP;EAAA,IAAmBC,aAAnB;;EAEAV,SAAS,CAAC,YAAM;IACZ,IAAMW,eAAe,GAAG,EAAxB;;IACA,IAAGH,WAAW,KAAK,EAAnB,EAAuB;MACnBA,WAAW,CAACI,OAAZ,CAAoB,UAACC,GAAD,EAAS;QACzB,IAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;QACAJ,aAAa,CAACI,IAAI,CAACC,MAAN,CAAb;MAGH,CALD;IAMH;EACJ,CAVQ,EAUN,EAVM,CAAT;EAYA,IAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASX,UAAT,CAAb;EACA,IAAMY,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAb;EACA,IAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAL,KAAkB,CAAhC;EACA,IAAMC,GAAG,GAAGN,IAAI,CAACO,OAAL,EAAZ;;EAEA,iBAA8BxB,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOyB,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAA0B1B,QAAQ,CAAC,KAAD,CAAlC;EAAA;EAAA,IAAO2B,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAgC5B,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAO6B,QAAP;EAAA,IAAiBC,WAAjB;;EAEA,SAASC,WAAT,GAAuB;IACnB,IAAMC,EAAE,GAAG9B,QAAQ,CAAC+B,SAAT,EAAX;;IACA,qBAAwB/B,QAAQ,CAACgC,IAAT,EAAxB;IAAA,IAAQC,WAAR,kBAAQA,WAAR;;IACA,IAAMC,GAAG,GAAGJ,EAAE,CAACK,UAAH,YAAuBF,WAAW,CAACG,GAAnC,gBAAmDxB,GAAnD,CAAuDJ,UAAvD,EACX2B,UADW,CACGlB,IADH,SACWE,KADX,CAAZ;;IAGA,IAAII,OAAO,IAAIE,KAAf,EAAuB;MACnBS,GAAG,CAACG,GAAJ,CAAQ;QACJ,YAAW,QADP;QAEJC,SAAS,EAAEjC,UAFP;QAGJgB,GAAG,EAAEA,GAHD;QAIJM,QAAQ,EAARA,QAJI;QAKJY,MAAM,EAAE;UACJhB,OAAO,EAAEA,OADL;UAEJE,KAAK,EAAEA;QAFH;MALJ,CAAR,EAUCe,IAVD,CAUM,UAACC,MAAD,EAAY;QACdC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAM,CAACG,EAA9B;MACH,CAZD,EAaCC,KAbD,CAaO,UAACC,KAAD,EAAW;QACdJ,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,KAAtB;MACH,CAfD;MAgBAxC,WAAW;IACd,CAlBD,MAkBO;MACHyC,KAAK,CAACC,KAAN,CAAY,OAAZ;IACH;EACJ;;EAED,OACI,MAAC,UAAD;IAAY,aAAa,EAAE,KAA3B;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACC,kBAApB;MAAA,UACI,MAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,WAApB;QAAA,WACI,KAAC,QAAD;UACI,KAAK,EAAC,0BADV;UAEI,OAAO,EAAE5B,OAFb;UAGI,OAAO,EAAE;YAAA,OAAMC,UAAU,CAAC,CAACD,OAAF,CAAhB;UAAA;QAHb,EADJ,EAMI,KAAC,QAAD;UACI,KAAK,EAAC,oBADV;UAEI,OAAO,EAAEE,KAFb;UAGI,OAAO,EAAE;YAAA,OAAMC,QAAQ,CAAC,CAACD,KAAF,CAAd;UAAA;QAHb,EANJ;MAAA;IADJ,EADJ,EAeI,MAAC,IAAD;MAAM,KAAK,EAAEwB,MAAM,CAACG,cAApB;MAAA,WACI,KAAC,IAAD;QAAA,UAAM;MAAN,EADJ,EAEI,KAAC,SAAD;QACQ,YAAY,EAAC,YADrB;QAEQ,KAAK,EAAEzB,QAFf;QAGQ,SAAS,MAHjB;QAIQ,KAAK,EAAEsB,MAAM,CAACI,KAJtB;QAKQ,YAAY,EAAE,sBAACC,IAAD,EAAU;UAAE1B,WAAW,CAAC0B,IAAD,CAAX;QAAoB,CALtD;QAOQ,WAAW,EAAG;MAPtB,EAFJ;IAAA,EAfJ,EA2BI,MAAC,IAAD;MAAM,KAAK,EAAEC,WAAW,CAACC,SAAzB;MAAA,WACI,KAAC,gBAAD;QAAkB,KAAK,EAAED,WAAW,CAACE,aAArC;QAAoD,OAAO,EAAEnD,WAA7D;QAAA,UACI,KAAC,IAAD;UAAM,KAAK,EAAEiD,WAAW,CAACG,iBAAzB;UAAA,UAA4C;QAA5C;MADJ,EADJ,EAII,KAAC,gBAAD;QAAkB,KAAK,EAAEH,WAAW,CAACE,aAArC;QAAoD,OAAO,EAAE5B,WAA7D;QAAA,UACI,KAAC,IAAD;UAAM,KAAK,EAAE0B,WAAW,CAACG,iBAAzB;UAAA,UAA4C;QAA5C;MADJ,EAJJ;IAAA,EA3BJ,EAmCI,KAAC,IAAD;MAAM,KAAK,EAAET,MAAM,CAACU,aAApB;MAAA,UACI,KAAC,KAAD;QAAO,KAAK,EAAE;UAACC,KAAK,EAAE;QAAR,CAAd;QACI,UAAU,EAAC,SADf;QAEI,MAAM,EAAEC,OAAO;MAFnB;IADJ,EAnCJ;EAAA,EADJ;AA4CH;AAED,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;EAC7Bb,kBAAkB,EAAE;IAChBc,iBAAiB,EAAE,EADH;IAEhBC,eAAe,EAAE;EAFD,CADS;EAU7Bb,cAAc,EAAE;IACZY,iBAAiB,EAAE,EADP;IAEZC,eAAe,EAAE,EAFL;IAGZC,MAAM,EAAE,GAHI;IAIZC,eAAe,EAAE;EAJL,CAVa;EAiB7Bd,KAAK,EAAE;IACHe,IAAI,EAAE,CADH;IAEHC,iBAAiB,EAAE,KAFhB;IAGHC,QAAQ,EAAE,EAHP;IAIHC,UAAU,EAAE,EAJT;IAKHJ,eAAe,EAAE;EALd,CAjBsB;EAwB7BhB,WAAW,EAAE;IAMTqB,cAAc,EAAE;EANP,CAxBgB;EAgC7Bb,aAAa,EAAE;IAGXc,UAAU,EAAE,EAHD;IAIXC,aAAa,EAAE,EAJJ;IAOXC,UAAU,EAAC;EAPA;AAhCc,CAAlB,CAAf;AA4CA,IAAMpB,WAAW,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAClCP,SAAS,EAAE;IACPoB,aAAa,EAAE;EADR,CADuB;EAIlCnB,aAAa,EAAG;IACZoB,UAAU,EAAE,MADA;IAEZC,WAAW,EAAE,MAFD;IAGZC,SAAS,EAAG,IAHA;IAIZZ,eAAe,EAAG,MAJN;IAKZa,WAAW,EAAG,SALF;IAMZC,WAAW,EAAG,CANF;IAOZC,YAAY,EAAG,EAPH;IAQZtB,KAAK,EAAE;EARK,CAJkB;EAclCF,iBAAiB,EAAG;IAChByB,KAAK,EAAG,SADQ;IAEhBC,UAAU,EAAG,MAFG;IAGhBC,SAAS,EAAG,QAHI;IAIhBC,OAAO,EAAE,EAJO;IAKhBhB,QAAQ,EAAE;EALM;AAdc,CAAlB,CAApB"},"metadata":{},"sourceType":"module"}
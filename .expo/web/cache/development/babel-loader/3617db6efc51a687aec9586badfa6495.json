{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport color from 'color';\nimport { black, white } from \"../../styles/themes/v2/colors\";\n\nvar getBorderColor = function getBorderColor(_ref) {\n  var theme = _ref.theme,\n      isOutlined = _ref.isOutlined,\n      disabled = _ref.disabled,\n      selectedColor = _ref.selectedColor,\n      backgroundColor = _ref.backgroundColor;\n  var isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n\n    return color(black).alpha(0.29).rgb().string();\n  }\n\n  return backgroundColor;\n};\n\nvar getTextColor = function getTextColor(_ref2) {\n  var theme = _ref2.theme,\n      isOutlined = _ref2.isOutlined,\n      disabled = _ref2.disabled,\n      selectedColor = _ref2.selectedColor;\n  var isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nvar getDefaultBackgroundColor = function getDefaultBackgroundColor(_ref3) {\n  var theme = _ref3.theme,\n      isOutlined = _ref3.isOutlined;\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n\n    return theme.colors.secondaryContainer;\n  }\n\n  if (isOutlined) {\n    var _theme$colors;\n\n    return (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.surface;\n  }\n\n  if (theme.dark) {\n    return '#383838';\n  }\n\n  return '#ebebeb';\n};\n\nvar getBackgroundColor = function getBackgroundColor(_ref4) {\n  var theme = _ref4.theme,\n      isOutlined = _ref4.isOutlined,\n      disabled = _ref4.disabled,\n      customBackgroundColor = _ref4.customBackgroundColor;\n\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n\n  return getDefaultBackgroundColor({\n    theme: theme,\n    isOutlined: isOutlined\n  });\n};\n\nvar getSelectedBackgroundColor = function getSelectedBackgroundColor(_ref5) {\n  var theme = _ref5.theme,\n      isOutlined = _ref5.isOutlined,\n      disabled = _ref5.disabled,\n      customBackgroundColor = _ref5.customBackgroundColor,\n      showSelectedOverlay = _ref5.showSelectedOverlay;\n  var backgroundColor = getBackgroundColor({\n    theme: theme,\n    disabled: disabled,\n    isOutlined: isOutlined,\n    customBackgroundColor: customBackgroundColor\n  });\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor).mix(color(theme.colors.onSurfaceVariant), 0.12).rgb().string();\n      }\n\n      return color(backgroundColor).mix(color(theme.colors.onSurfaceVariant), 0).rgb().string();\n    }\n\n    if (showSelectedOverlay) {\n      return color(backgroundColor).mix(color(theme.colors.onSecondaryContainer), 0.12).rgb().string();\n    }\n\n    return color(backgroundColor).mix(color(theme.colors.onSecondaryContainer), 0).rgb().string();\n  }\n\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\n\nvar getIconColor = function getIconColor(_ref6) {\n  var theme = _ref6.theme,\n      isOutlined = _ref6.isOutlined,\n      disabled = _ref6.disabled,\n      selectedColor = _ref6.selectedColor;\n  var isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nvar getUnderlayColor = function getUnderlayColor(_ref7) {\n  var theme = _ref7.theme,\n      isOutlined = _ref7.isOutlined,\n      disabled = _ref7.disabled,\n      selectedColor = _ref7.selectedColor,\n      selectedBackgroundColor = _ref7.selectedBackgroundColor;\n  var isSelectedColor = selectedColor !== undefined;\n  var textColor = getTextColor({\n    theme: theme,\n    disabled: disabled,\n    selectedColor: selectedColor,\n    isOutlined: isOutlined\n  });\n\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n\n  return selectedBackgroundColor;\n};\n\nexport var getChipColors = function getChipColors(_ref8) {\n  var isOutlined = _ref8.isOutlined,\n      theme = _ref8.theme,\n      selectedColor = _ref8.selectedColor,\n      showSelectedOverlay = _ref8.showSelectedOverlay,\n      customBackgroundColor = _ref8.customBackgroundColor,\n      disabled = _ref8.disabled;\n  var baseChipColorProps = {\n    theme: theme,\n    isOutlined: isOutlined,\n    disabled: disabled\n  };\n  var backgroundColor = getBackgroundColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n    customBackgroundColor: customBackgroundColor\n  }));\n  var selectedBackgroundColor = getSelectedBackgroundColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n    customBackgroundColor: customBackgroundColor,\n    showSelectedOverlay: showSelectedOverlay\n  }));\n  return {\n    borderColor: getBorderColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor,\n      backgroundColor: backgroundColor\n    })),\n    textColor: getTextColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor\n    })),\n    iconColor: getIconColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor\n    })),\n    underlayColor: getUnderlayColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor,\n      selectedBackgroundColor: selectedBackgroundColor\n    })),\n    backgroundColor: backgroundColor,\n    selectedBackgroundColor: selectedBackgroundColor\n  };\n};","map":{"version":3,"sources":["helpers.tsx"],"names":["color","black","white","getBorderColor","theme","isOutlined","disabled","selectedColor","backgroundColor","isSelectedColor","undefined","isV3","colors","onSurfaceVariant","alpha","rgb","string","outline","dark","getTextColor","onSurfaceDisabled","onSecondaryContainer","text","getDefaultBackgroundColor","surface","secondaryContainer","getBackgroundColor","customBackgroundColor","getSelectedBackgroundColor","showSelectedOverlay","mix","lighten","darken","getIconColor","getUnderlayColor","selectedBackgroundColor","textColor","fade","getChipColors","baseChipColorProps","borderColor","iconColor","underlayColor"],"mappings":"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","sourcesContent":["import type { ColorValue } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  isOutlined: boolean;\n  disabled?: boolean;\n};\n\nconst getBorderColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  backgroundColor,\n}: BaseProps & { backgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n\n    return color(black).alpha(0.29).rgb().string();\n  }\n\n  return backgroundColor;\n};\n\nconst getTextColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nconst getDefaultBackgroundColor = ({\n  theme,\n  isOutlined,\n}: Omit<BaseProps, 'disabled' | 'selectedColor'>) => {\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n\n    return theme.colors.secondaryContainer;\n  }\n\n  if (isOutlined) {\n    return theme.colors?.surface;\n  }\n\n  if (theme.dark) {\n    return '#383838';\n  }\n\n  return '#ebebeb';\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n}) => {\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n\n  return getDefaultBackgroundColor({ theme, isOutlined });\n};\n\nconst getSelectedBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n  showSelectedOverlay,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  showSelectedOverlay?: boolean;\n}) => {\n  const backgroundColor = getBackgroundColor({\n    theme,\n    disabled,\n    isOutlined,\n    customBackgroundColor,\n  });\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor)\n          .mix(color(theme.colors.onSurfaceVariant), 0.12)\n          .rgb()\n          .string();\n      }\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSurfaceVariant), 0)\n        .rgb()\n        .string();\n    }\n\n    if (showSelectedOverlay) {\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSecondaryContainer), 0.12)\n        .rgb()\n        .string();\n    }\n\n    return color(backgroundColor)\n      .mix(color(theme.colors.onSecondaryContainer), 0)\n      .rgb()\n      .string();\n  }\n\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\n\nconst getIconColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getUnderlayColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  selectedBackgroundColor,\n}: BaseProps & { selectedBackgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n  const textColor = getTextColor({\n    theme,\n    disabled,\n    selectedColor,\n    isOutlined,\n  });\n\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n\n  return selectedBackgroundColor;\n};\n\nexport const getChipColors = ({\n  isOutlined,\n  theme,\n  selectedColor,\n  showSelectedOverlay,\n  customBackgroundColor,\n  disabled,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  disabled?: boolean;\n  showSelectedOverlay?: boolean;\n  selectedColor?: string;\n}) => {\n  const baseChipColorProps = { theme, isOutlined, disabled };\n\n  const backgroundColor = getBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n  });\n\n  const selectedBackgroundColor = getSelectedBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n    showSelectedOverlay,\n  });\n\n  return {\n    borderColor: getBorderColor({\n      ...baseChipColorProps,\n      selectedColor,\n      backgroundColor,\n    }),\n    textColor: getTextColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    iconColor: getIconColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    underlayColor: getUnderlayColor({\n      ...baseChipColorProps,\n      selectedColor,\n      selectedBackgroundColor,\n    }),\n    backgroundColor,\n    selectedBackgroundColor,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
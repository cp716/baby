{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useRef, useMemo, useCallback } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { toMarkingFormat } from \"../interface\";\nimport { extractCalendarProps } from \"../componentUpdater\";\nimport styleConstructor from \"./style\";\nimport Calendar from \"../calendar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CalendarListItem = React.memo(function (props) {\n  var item = props.item,\n      theme = props.theme,\n      scrollToMonth = props.scrollToMonth,\n      horizontal = props.horizontal,\n      calendarHeight = props.calendarHeight,\n      calendarWidth = props.calendarWidth,\n      propsStyle = props.style,\n      headerStyle = props.headerStyle,\n      onPressArrowLeft = props.onPressArrowLeft,\n      onPressArrowRight = props.onPressArrowRight,\n      visible = props.visible;\n  var style = useRef(styleConstructor(theme));\n  var calendarProps = extractCalendarProps(props);\n  var dateString = toMarkingFormat(item);\n  var calendarStyle = useMemo(function () {\n    return [{\n      width: calendarWidth,\n      minHeight: calendarHeight\n    }, style.current.calendar, propsStyle];\n  }, [calendarWidth, calendarHeight, propsStyle]);\n  var textStyle = useMemo(function () {\n    return [calendarStyle, style.current.placeholderText];\n  }, [calendarStyle]);\n\n  var _onPressArrowLeft = useCallback(function (method, month) {\n    var monthClone = month == null ? void 0 : month.clone();\n\n    if (monthClone) {\n      if (onPressArrowLeft) {\n        onPressArrowLeft(method, monthClone);\n      } else if (scrollToMonth) {\n        var currentMonth = monthClone.getMonth();\n        monthClone.addMonths(-1);\n\n        while (monthClone.getMonth() === currentMonth) {\n          monthClone.setDate(monthClone.getDate() - 1);\n        }\n\n        scrollToMonth(monthClone);\n      }\n    }\n  }, [onPressArrowLeft, scrollToMonth]);\n\n  var _onPressArrowRight = useCallback(function (method, month) {\n    var monthClone = month == null ? void 0 : month.clone();\n\n    if (monthClone) {\n      if (onPressArrowRight) {\n        onPressArrowRight(method, monthClone);\n      } else if (scrollToMonth) {\n        monthClone.addMonths(1);\n        scrollToMonth(monthClone);\n      }\n    }\n  }, [onPressArrowRight, scrollToMonth]);\n\n  if (!visible) {\n    return _jsx(Text, {\n      style: textStyle,\n      children: dateString\n    });\n  }\n\n  return _jsx(Calendar, _objectSpread(_objectSpread({\n    hideArrows: true,\n    hideExtraDays: true\n  }, calendarProps), {}, {\n    current: dateString,\n    style: calendarStyle,\n    headerStyle: horizontal ? headerStyle : undefined,\n    disableMonthChange: true,\n    onPressArrowLeft: horizontal ? _onPressArrowLeft : onPressArrowLeft,\n    onPressArrowRight: horizontal ? _onPressArrowRight : onPressArrowRight\n  }));\n});\nexport default CalendarListItem;\nCalendarListItem.displayName = 'CalendarListItem';","map":{"version":3,"names":["React","useRef","useMemo","useCallback","toMarkingFormat","extractCalendarProps","styleConstructor","Calendar","CalendarListItem","memo","props","item","theme","scrollToMonth","horizontal","calendarHeight","calendarWidth","propsStyle","style","headerStyle","onPressArrowLeft","onPressArrowRight","visible","calendarProps","dateString","calendarStyle","width","minHeight","current","calendar","textStyle","placeholderText","_onPressArrowLeft","method","month","monthClone","clone","currentMonth","getMonth","addMonths","setDate","getDate","_onPressArrowRight","undefined","displayName"],"sources":["/Users/atsushi/Dev/baby/node_modules/react-native-calendars/src/calendar-list/item.js"],"sourcesContent":["import React, { useRef, useMemo, useCallback } from 'react';\nimport { Text } from 'react-native';\nimport { toMarkingFormat } from '../interface';\nimport { extractCalendarProps } from '../componentUpdater';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nconst CalendarListItem = React.memo((props) => {\n    const { item, theme, scrollToMonth, horizontal, calendarHeight, calendarWidth, style: propsStyle, headerStyle, onPressArrowLeft, onPressArrowRight, visible } = props;\n    const style = useRef(styleConstructor(theme));\n    const calendarProps = extractCalendarProps(props);\n    const dateString = toMarkingFormat(item);\n    const calendarStyle = useMemo(() => {\n        return [\n            {\n                width: calendarWidth,\n                minHeight: calendarHeight\n            },\n            style.current.calendar,\n            propsStyle\n        ];\n    }, [calendarWidth, calendarHeight, propsStyle]);\n    const textStyle = useMemo(() => {\n        return [calendarStyle, style.current.placeholderText];\n    }, [calendarStyle]);\n    const _onPressArrowLeft = useCallback((method, month) => {\n        const monthClone = month?.clone();\n        if (monthClone) {\n            if (onPressArrowLeft) {\n                onPressArrowLeft(method, monthClone);\n            }\n            else if (scrollToMonth) {\n                const currentMonth = monthClone.getMonth();\n                monthClone.addMonths(-1);\n                // Make sure we actually get the previous month, not just 30 days before currentMonth.\n                while (monthClone.getMonth() === currentMonth) {\n                    monthClone.setDate(monthClone.getDate() - 1);\n                }\n                scrollToMonth(monthClone);\n            }\n        }\n    }, [onPressArrowLeft, scrollToMonth]);\n    const _onPressArrowRight = useCallback((method, month) => {\n        const monthClone = month?.clone();\n        if (monthClone) {\n            if (onPressArrowRight) {\n                onPressArrowRight(method, monthClone);\n            }\n            else if (scrollToMonth) {\n                monthClone.addMonths(1);\n                scrollToMonth(monthClone);\n            }\n        }\n    }, [onPressArrowRight, scrollToMonth]);\n    if (!visible) {\n        return (<Text style={textStyle}>{dateString}</Text>);\n    }\n    return (<Calendar hideArrows={true} hideExtraDays={true} {...calendarProps} current={dateString} style={calendarStyle} headerStyle={horizontal ? headerStyle : undefined} disableMonthChange onPressArrowLeft={horizontal ? _onPressArrowLeft : onPressArrowLeft} onPressArrowRight={horizontal ? _onPressArrowRight : onPressArrowRight}/>);\n});\nexport default CalendarListItem;\nCalendarListItem.displayName = 'CalendarListItem';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as SQLite from 'expo-sqlite';\nimport * as FileSystem from 'expo-file-system';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar db = SQLite.openDatabase('your_database.db');\nexport default function ExportButton() {\n  function exportDatabaseToJson() {\n    return _exportDatabaseToJson.apply(this, arguments);\n  }\n\n  function _exportDatabaseToJson() {\n    _exportDatabaseToJson = _asyncToGenerator(function* () {\n      try {\n        var query = 'SELECT * FROM your_table';\n\n        var _yield$db$executeSql = yield db.executeSql(query, []),\n            _yield$db$executeSql2 = _slicedToArray(_yield$db$executeSql, 1),\n            result = _yield$db$executeSql2[0];\n\n        var data = result.rows._array;\n        var jsonData = JSON.stringify(data);\n        var filePath = FileSystem.documentDirectory + \"exported_data.json\";\n        yield FileSystem.writeAsStringAsync(filePath, jsonData);\n        Alert.alert('エクスポート完了', 'データをJSONファイルにエクスポートしました。', [{\n          text: 'OK',\n          onPress: function onPress() {\n            return console.log('OK Pressed');\n          }\n        }]);\n      } catch (error) {\n        console.error('エラー:', error);\n        Alert.alert('エラー', 'データのエクスポート中にエラーが発生しました。', [{\n          text: 'OK',\n          onPress: function onPress() {\n            return console.log('OK Pressed');\n          }\n        }]);\n      }\n    });\n    return _exportDatabaseToJson.apply(this, arguments);\n  }\n\n  return _jsx(View, {\n    children: _jsx(Button, {\n      title: \"\\u30C7\\u30FC\\u30BF\\u3092\\u30A8\\u30AF\\u30B9\\u30DD\\u30FC\\u30C8\",\n      onPress: exportDatabaseToJson\n    })\n  });\n}","map":{"version":3,"names":["React","SQLite","FileSystem","db","openDatabase","ExportButton","exportDatabaseToJson","query","executeSql","result","data","rows","_array","jsonData","JSON","stringify","filePath","documentDirectory","writeAsStringAsync","Alert","alert","text","onPress","console","log","error"],"sources":["/Users/atsushi/Dev/baby/src/screens/TestScreen.jsx"],"sourcesContent":["import React from 'react';\nimport { View, Button, Alert } from 'react-native';\nimport * as SQLite from 'expo-sqlite';\nimport * as FileSystem from 'expo-file-system';\n\nconst db = SQLite.openDatabase('your_database.db'); // データベース名を適切に変更\n\nexport default function ExportButton() {\n  async function exportDatabaseToJson() {\n    try {\n      // SQLiteデータベースからデータを取得\n      const query = 'SELECT * FROM your_table'; // 適切なテーブル名を指定\n      const [result] = await db.executeSql(query, []);\n\n      // データをJSON形式に変換\n      const data = result.rows._array;\n      const jsonData = JSON.stringify(data);\n\n      // ファイルに保存\n      const filePath = `${FileSystem.documentDirectory}exported_data.json`;\n      await FileSystem.writeAsStringAsync(filePath, jsonData);\n\n      Alert.alert('エクスポート完了', 'データをJSONファイルにエクスポートしました。', [\n        { text: 'OK', onPress: () => console.log('OK Pressed') },\n      ]);\n    } catch (error) {\n      console.error('エラー:', error);\n      Alert.alert('エラー', 'データのエクスポート中にエラーが発生しました。', [\n        { text: 'OK', onPress: () => console.log('OK Pressed') },\n      ]);\n    }\n  }\n\n  return (\n    <View>\n      <Button title=\"データをエクスポート\" onPress={exportDatabaseToJson} />\n    </View>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;;AAEA,IAAMC,EAAE,GAAGF,MAAM,CAACG,YAAP,CAAoB,kBAApB,CAAX;AAEA,eAAe,SAASC,YAAT,GAAwB;EAAA,SACtBC,oBADsB;IAAA;EAAA;;EAAA;IAAA,0CACrC,aAAsC;MACpC,IAAI;QAEF,IAAMC,KAAK,GAAG,0BAAd;;QACA,iCAAuBJ,EAAE,CAACK,UAAH,CAAcD,KAAd,EAAqB,EAArB,CAAvB;QAAA;QAAA,IAAOE,MAAP;;QAGA,IAAMC,IAAI,GAAGD,MAAM,CAACE,IAAP,CAAYC,MAAzB;QACA,IAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjB;QAGA,IAAMM,QAAQ,GAAMd,UAAU,CAACe,iBAAjB,uBAAd;QACA,MAAMf,UAAU,CAACgB,kBAAX,CAA8BF,QAA9B,EAAwCH,QAAxC,CAAN;QAEAM,KAAK,CAACC,KAAN,CAAY,UAAZ,EAAwB,0BAAxB,EAAoD,CAClD;UAAEC,IAAI,EAAE,IAAR;UAAcC,OAAO,EAAE;YAAA,OAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;UAAA;QAAvB,CADkD,CAApD;MAGD,CAhBD,CAgBE,OAAOC,KAAP,EAAc;QACdF,OAAO,CAACE,KAAR,CAAc,MAAd,EAAsBA,KAAtB;QACAN,KAAK,CAACC,KAAN,CAAY,KAAZ,EAAmB,yBAAnB,EAA8C,CAC5C;UAAEC,IAAI,EAAE,IAAR;UAAcC,OAAO,EAAE;YAAA,OAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;UAAA;QAAvB,CAD4C,CAA9C;MAGD;IACF,CAxBoC;IAAA;EAAA;;EA0BrC,OACE,KAAC,IAAD;IAAA,UACE,KAAC,MAAD;MAAQ,KAAK,EAAC,8DAAd;MAA2B,OAAO,EAAElB;IAApC;EADF,EADF;AAKD"},"metadata":{},"sourceType":"module"}
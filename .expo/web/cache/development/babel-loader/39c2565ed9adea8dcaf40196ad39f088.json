{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport Sharing from \"./ExpoSharing\";\nexport function isAvailableAsync() {\n  return _isAvailableAsync.apply(this, arguments);\n}\n\nfunction _isAvailableAsync() {\n  _isAvailableAsync = _asyncToGenerator(function* () {\n    if (Sharing) {\n      if (Sharing.isAvailableAsync) {\n        return yield Sharing.isAvailableAsync();\n      }\n\n      return true;\n    }\n\n    return false;\n  });\n  return _isAvailableAsync.apply(this, arguments);\n}\n\nexport function shareAsync(_x) {\n  return _shareAsync.apply(this, arguments);\n}\n\nfunction _shareAsync() {\n  _shareAsync = _asyncToGenerator(function* (url) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!Sharing || !Sharing.shareAsync) {\n      throw new UnavailabilityError('Sharing', 'shareAsync');\n    }\n\n    return yield Sharing.shareAsync(url, options);\n  });\n  return _shareAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/Sharing.ts"],"names":[],"mappings":";AAAA,SAAS,mBAAT,QAAoC,mBAApC;AAEA,OAAO,OAAP;AA4BA,gBAAsB,gBAAtB;EAAA;AAAA;;;wCAAO,aAA+B;IACpC,IAAI,OAAJ,EAAa;MACX,IAAI,OAAO,CAAC,gBAAZ,EAA8B;QAC5B,aAAa,OAAO,CAAC,gBAAR,EAAb;MACD;;MACD,OAAO,IAAP;IACD;;IAED,OAAO,KAAP;EACD,C;;;;AAQD,gBAAsB,UAAtB;EAAA;AAAA;;;kCAAO,WAA0B,GAA1B,EAAmE;IAAA,IAA5B,OAA4B,uEAAF,EAAE;;IACxE,IAAI,CAAC,OAAD,IAAY,CAAC,OAAO,CAAC,UAAzB,EAAqC;MACnC,MAAM,IAAI,mBAAJ,CAAwB,SAAxB,EAAmC,YAAnC,CAAN;IACD;;IACD,aAAa,OAAO,CAAC,UAAR,CAAmB,GAAnB,EAAwB,OAAxB,CAAb;EACD,C","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport Sharing from './ExpoSharing';\n\n// @needsAudit\nexport type SharingOptions = {\n  /**\n   * Sets `mimeType` for `Intent`.\n   * @platform android\n   */\n  mimeType?: string;\n  /**\n   * [Uniform Type Identifier](https://developer.apple.com/library/archive/documentation/FileManagement/Conceptual/understanding_utis/understand_utis_conc/understand_utis_conc.html)\n   *  - the type of the target file.\n   * @platform ios\n   */\n  UTI?: string;\n  /**\n   * Sets share dialog title.\n   * @platform android\n   * @platform web\n   */\n  dialogTitle?: string;\n};\n\n// @needsAudit\n/**\n * Determine if the sharing API can be used in this app.\n * @return A promise that fulfills with `true` if the sharing API can be used, and `false` otherwise.\n */\nexport async function isAvailableAsync(): Promise<boolean> {\n  if (Sharing) {\n    if (Sharing.isAvailableAsync) {\n      return await Sharing.isAvailableAsync();\n    }\n    return true;\n  }\n\n  return false;\n}\n\n// @needsAudit\n/**\n * Opens action sheet to share file to different applications which can handle this type of file.\n * @param url Local file URL to share.\n * @param options A map of share options.\n */\nexport async function shareAsync(url: string, options: SharingOptions = {}): Promise<void> {\n  if (!Sharing || !Sharing.shareAsync) {\n    throw new UnavailabilityError('Sharing', 'shareAsync');\n  }\n  return await Sharing.shareAsync(url, options);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
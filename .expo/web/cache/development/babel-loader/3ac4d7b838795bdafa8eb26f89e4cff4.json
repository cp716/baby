{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from 'firebase';\nimport * as SQLite from 'expo-sqlite';\nimport Button from \"../components/Button\";\nimport { translateErrors } from \"../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = SQLite.openDatabase('DB.db');\nexport default function SignUpScreen(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function handlePress() {\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n\n    if (!currentUser) {\n      return;\n    }\n\n    var credential = firebase.auth.EmailAuthProvider.credential(email, password);\n    currentUser.linkWithCredential(credential).then(function (userCredential) {\n      Alert.alert('登録完了', '登録したメールアドレスとパスワードは大切に保管してください。', [{\n        text: 'OK',\n        onPress: function onPress() {\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'Setting'\n            }]\n          });\n        }\n      }]);\n    }).catch(function (error) {\n      console.log(error.code, error.massage);\n      var errorMsg = translateErrors(error.code);\n      Alert.alert(errorMsg.title, errorMsg.description);\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inner,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"\\u4F1A\\u54E1\\u767B\\u9332\"\n      }), _jsx(Text, {\n        style: styles.inputText,\n        children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: email,\n        onChangeText: function onChangeText(text) {\n          setEmail(text);\n        },\n        autoCapitalize: \"none\",\n        keyboardType: \"email-address\",\n        placeholder: \"\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        placeholderTextColor: \"#BFBFBF\",\n        textContentType: \"emailAddress\"\n      }), _jsx(Text, {\n        style: styles.inputText,\n        children: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\uFF08\\u78BA\\u8A8D\\uFF09\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: email,\n        onChangeText: function onChangeText(text) {\n          setEmail(text);\n        },\n        autoCapitalize: \"none\",\n        keyboardType: \"email-address\",\n        placeholder: \"\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        placeholderTextColor: \"#BFBFBF\",\n        textContentType: \"emailAddress\"\n      }), _jsx(Text, {\n        style: styles.inputText,\n        children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          setPassword(text);\n        },\n        autoCapitalize: \"none\",\n        placeholder: \"\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        placeholderTextColor: \"#BFBFBF\",\n        secureTextEntry: true,\n        textContentType: \"password\"\n      }), _jsx(Text, {\n        style: styles.inputText,\n        children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\uFF08\\u78BA\\u8A8D\\uFF09\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          setPassword(text);\n        },\n        autoCapitalize: \"none\",\n        placeholder: \"\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        placeholderTextColor: \"#BFBFBF\",\n        secureTextEntry: true,\n        textContentType: \"password\"\n      }), _jsx(Button, {\n        label: \"\\u767B\\u9332\",\n        onPress: handlePress\n      })]\n    }), _jsx(Button, {\n      title: \"CREATE\",\n      onPress: function onPress() {\n        var db = SQLite.openDatabase('DB.db');\n        db.transaction(function (tx) {\n          tx.executeSql(\"CREATE TABLE IF NOT EXISTS HealthData(id integer primary key not null, height real, weight real);\", null, function () {\n            console.log(\"CREATE TABLE Success.\");\n          }, function () {\n            console.log(\"CREATE TABLE Failed.\");\n            return true;\n          });\n        }, function () {\n          console.log(\"Failed All.\");\n        }, function () {\n          console.log(\"Success All.\");\n        });\n        SQLite.openDatabase('DB.db');\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F0F4F8'\n  },\n  inner: {\n    paddingHorizontal: 27,\n    paddingVertical: 24\n  },\n  title: {\n    fontSize: 24,\n    lineHeight: 32,\n    fontWeight: 'bold',\n    marginBottom: 24\n  },\n  inputText: {\n    fontSize: 15,\n    lineHeight: 32,\n    marginBottom: 1,\n    color: '#737373'\n  },\n  input: {\n    fontSize: 16,\n    height: 48,\n    borderColor: '#DDDDDD',\n    borderWidth: 1,\n    backgroundColor: '#ffffff',\n    paddingHorizontal: 8,\n    marginBottom: 16\n  },\n  footerText: {\n    fontSize: 14,\n    lineHeight: 24,\n    marginRight: 8\n  },\n  footerLink: {\n    fontSize: 14,\n    lineHeight: 24,\n    color: '#467FD3'\n  },\n  footer: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["React","useState","firebase","SQLite","Button","translateErrors","db","openDatabase","SignUpScreen","props","navigation","email","setEmail","password","setPassword","handlePress","auth","currentUser","credential","EmailAuthProvider","linkWithCredential","then","userCredential","Alert","alert","text","onPress","reset","index","routes","name","catch","error","console","log","code","massage","errorMsg","title","description","styles","container","inner","inputText","input","transaction","tx","executeSql","StyleSheet","create","flex","backgroundColor","paddingHorizontal","paddingVertical","fontSize","lineHeight","fontWeight","marginBottom","color","height","borderColor","borderWidth","footerText","marginRight","footerLink","footer","flexDirection"],"sources":["/Users/atsushi/Dev/baby/src/screens/SignUpScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, StyleSheet, Alert, } from 'react-native';\nimport firebase from 'firebase'\nimport * as SQLite from 'expo-sqlite';\n\nimport Button from '../components/Button';\nimport { translateErrors } from '../utils';\n\n// データベースファイルのパスを指定してデータベースを開く\nconst db = SQLite.openDatabase('DB.db');\n\nexport default function SignUpScreen(props) {\n    const { navigation } = props;\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    function handlePress() {\n        const { currentUser } = firebase.auth();\n        if (!currentUser) { return; }\n        const credential = firebase.auth.EmailAuthProvider.credential(email, password);\n        currentUser.linkWithCredential(credential)\n            .then((userCredential) => {\n                Alert.alert('登録完了', '登録したメールアドレスとパスワードは大切に保管してください。', [\n                    {\n                        text: 'OK',\n                        onPress: () => {\n                            navigation.reset({\n                                index: 0,\n                                routes: [{ name: 'Setting'}],\n                        });\n                        },\n                        },\n                ]);\n            })\n            .catch((error) => {\n                console.log(error.code, error.massage);\n                const errorMsg = translateErrors(error.code);\n                Alert.alert(errorMsg.title, errorMsg.description);\n            });\n    }\n    \n    return (\n        <View style={styles.container}>\n            <View style={styles.inner}>\n                <Text style={styles.title}>会員登録</Text>\n                <Text style={styles.inputText}>メールアドレス</Text>\n                <TextInput\n                    style={styles.input}\n                    value={email}\n                    onChangeText={(text) => { setEmail(text); }}\n                    autoCapitalize=\"none\"\n                    keyboardType=\"email-address\"\n                    placeholder=\"入力してください\"\n                    placeholderTextColor=\"#BFBFBF\"\n                    textContentType=\"emailAddress\"\n                />\n                <Text style={styles.inputText}>メールアドレス（確認）</Text>\n                <TextInput\n                    style={styles.input}\n                    value={email}\n                    onChangeText={(text) => { setEmail(text); }}\n                    autoCapitalize=\"none\"\n                    keyboardType=\"email-address\"\n                    placeholder=\"入力してください\"\n                    placeholderTextColor=\"#BFBFBF\"\n                    textContentType=\"emailAddress\"\n                />\n                <Text style={styles.inputText}>パスワード</Text>\n                <TextInput\n                    style={styles.input}\n                    value={password}\n                    onChangeText={(text) => { setPassword(text); }}\n                    autoCapitalize=\"none\"\n                    placeholder=\"入力してください\"\n                    placeholderTextColor=\"#BFBFBF\"\n                    secureTextEntry\n                    textContentType=\"password\"\n                />\n                <Text style={styles.inputText}>パスワード（確認）</Text>\n                <TextInput\n                    style={styles.input}\n                    value={password}\n                    onChangeText={(text) => { setPassword(text); }}\n                    autoCapitalize=\"none\"\n                    placeholder=\"入力してください\"\n                    placeholderTextColor=\"#BFBFBF\"\n                    secureTextEntry\n                    textContentType=\"password\"\n                />\n                <Button\n                    label=\"登録\"\n                    onPress={handlePress}\n                />\n            </View>\n            <Button\n    title=\"CREATE\"\n    onPress={() => {\n        const db = SQLite.openDatabase('DB.db');\n        db.transaction((tx) => {\n            // 実行したいSQL\n            tx.executeSql(\n                \"CREATE TABLE IF NOT EXISTS HealthData(id integer primary key not null, height real, weight real);\",\n                null,\n                () => {\n                    // 成功時のコールバック\n                    console.log(\"CREATE TABLE Success.\");\n                },\n                () => {\n                    // 失敗時のコールバック\n                    console.log(\"CREATE TABLE Failed.\");\n                    return true;  // return true でロールバックする\n                });\n            },\n            () => { console.log(\"Failed All.\"); },\n            () => { console.log(\"Success All.\"); }\n            \n        );SQLite.openDatabase('DB.db');\n    }} />\n        </View>\n    );\n}\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#F0F4F8',\n    },\n    inner: {\n        paddingHorizontal: 27,\n        paddingVertical: 24,\n    },\n    title: {\n        fontSize: 24,\n        lineHeight: 32,\n        fontWeight: 'bold',\n        marginBottom: 24,\n    },\n    inputText: {\n        fontSize: 15,\n        lineHeight: 32,\n        //fontWeight: 'bold',\n        marginBottom: 1,\n        color: '#737373',\n    },\n    input: {\n        fontSize: 16,\n        height: 48,\n        borderColor: '#DDDDDD',\n        borderWidth: 1,\n        backgroundColor: '#ffffff',\n        paddingHorizontal: 8,\n        marginBottom: 16,\n    },\n    footerText: {\n        fontSize: 14,\n        lineHeight: 24,\n        marginRight: 8,\n    },\n    footerLink: {\n        fontSize: 14,\n        lineHeight: 24,\n        color: '#467FD3',\n    },\n    footer: {\n        flexDirection: 'row'\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}
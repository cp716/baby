{"ast":null,"code":"import color from 'color';\nimport { black, white } from \"../../styles/themes/v2/colors\";\nexport var MIN_WIDTH = 112;\nexport var MAX_WIDTH = 280;\n\nvar getDisabledColor = function getDisabledColor(theme) {\n  if (theme.isV3) {\n    return theme.colors.onSurfaceDisabled;\n  }\n\n  return color(theme.dark ? white : black).alpha(0.32).rgb().string();\n};\n\nvar getTitleColor = function getTitleColor(_ref) {\n  var theme = _ref.theme,\n      disabled = _ref.disabled;\n\n  if (disabled) {\n    return getDisabledColor(theme);\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurface;\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nvar getIconColor = function getIconColor(_ref2) {\n  var theme = _ref2.theme,\n      disabled = _ref2.disabled;\n\n  if (disabled) {\n    return getDisabledColor(theme);\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nexport var getMenuItemColor = function getMenuItemColor(_ref3) {\n  var theme = _ref3.theme,\n      disabled = _ref3.disabled;\n  return {\n    titleColor: getTitleColor({\n      theme: theme,\n      disabled: disabled\n    }),\n    iconColor: getIconColor({\n      theme: theme,\n      disabled: disabled\n    }),\n    underlayColor: theme.isV3 ? color(theme.colors.primary).alpha(0.12).rgb().string() : undefined\n  };\n};\nexport var getContentMaxWidth = function getContentMaxWidth(_ref4) {\n  var isV3 = _ref4.isV3,\n      iconWidth = _ref4.iconWidth,\n      leadingIcon = _ref4.leadingIcon,\n      trailingIcon = _ref4.trailingIcon;\n\n  if (isV3) {\n    if (leadingIcon && trailingIcon) {\n      return MAX_WIDTH - (2 * iconWidth + 24);\n    }\n\n    if (leadingIcon || trailingIcon) {\n      return MAX_WIDTH - (iconWidth + 24);\n    }\n\n    return MAX_WIDTH - 12;\n  }\n\n  if (leadingIcon) {\n    return MAX_WIDTH - (iconWidth + 48);\n  }\n\n  return MAX_WIDTH - 16;\n};","map":{"version":3,"sources":["utils.ts"],"names":["color","black","white","MIN_WIDTH","MAX_WIDTH","getDisabledColor","theme","isV3","colors","onSurfaceDisabled","dark","alpha","rgb","string","getTitleColor","disabled","onSurface","text","getIconColor","onSurfaceVariant","getMenuItemColor","titleColor","iconColor","underlayColor","primary","undefined","getContentMaxWidth","iconWidth","leadingIcon","trailingIcon"],"mappings":"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","sourcesContent":["import color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\nimport type { IconSource } from '../Icon';\n\nexport const MIN_WIDTH = 112;\nexport const MAX_WIDTH = 280;\n\ntype ContentProps = {\n  isV3: boolean;\n  iconWidth: number;\n  leadingIcon?: IconSource;\n  trailingIcon?: IconSource;\n};\n\ntype ColorProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n};\n\nconst getDisabledColor = (theme: InternalTheme) => {\n  if (theme.isV3) {\n    return theme.colors.onSurfaceDisabled;\n  }\n\n  return color(theme.dark ? white : black)\n    .alpha(0.32)\n    .rgb()\n    .string();\n};\n\nconst getTitleColor = ({ theme, disabled }: ColorProps) => {\n  if (disabled) {\n    return getDisabledColor(theme);\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurface;\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nconst getIconColor = ({ theme, disabled }: ColorProps) => {\n  if (disabled) {\n    return getDisabledColor(theme);\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nexport const getMenuItemColor = ({ theme, disabled }: ColorProps) => {\n  return {\n    titleColor: getTitleColor({ theme, disabled }),\n    iconColor: getIconColor({ theme, disabled }),\n    underlayColor: theme.isV3\n      ? color(theme.colors.primary).alpha(0.12).rgb().string()\n      : undefined,\n  };\n};\n\nexport const getContentMaxWidth = ({\n  isV3,\n  iconWidth,\n  leadingIcon,\n  trailingIcon,\n}: ContentProps) => {\n  if (isV3) {\n    if (leadingIcon && trailingIcon) {\n      return MAX_WIDTH - (2 * iconWidth + 24);\n    }\n\n    if (leadingIcon || trailingIcon) {\n      return MAX_WIDTH - (iconWidth + 24);\n    }\n\n    return MAX_WIDTH - 12;\n  }\n\n  if (leadingIcon) {\n    return MAX_WIDTH - (iconWidth + 48);\n  }\n\n  return MAX_WIDTH - 16;\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { withInternalTheme } from \"../../core/theming\";\nimport Card from \"../Card/Card\";\nimport Text from \"../Typography/Text\";\nimport FAB from \"./FAB\";\nimport { getFABGroupColors } from \"./utils\";\n\nvar FABGroup = function FABGroup(_ref) {\n  var actions = _ref.actions,\n      icon = _ref.icon,\n      open = _ref.open,\n      _onPress = _ref.onPress,\n      accessibilityLabel = _ref.accessibilityLabel,\n      theme = _ref.theme,\n      style = _ref.style,\n      fabStyle = _ref.fabStyle,\n      visible = _ref.visible,\n      label = _ref.label,\n      testID = _ref.testID,\n      onStateChange = _ref.onStateChange,\n      colorProp = _ref.color,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n      customBackdropColor = _ref.backdropColor;\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      backdrop = _React$useRef.current;\n\n  var animations = React.useRef(actions.map(function () {\n    return new Animated.Value(open ? 1 : 0);\n  }));\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      prevActions = _React$useState2[0],\n      setPrevActions = _React$useState2[1];\n\n  var scale = theme.animation.scale;\n  var isV3 = theme.isV3;\n  React.useEffect(function () {\n    if (open) {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 1,\n        duration: 250 * scale,\n        useNativeDriver: true\n      }), Animated.stagger(isV3 ? 15 : 50 * scale, animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 1,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      }).reverse())]).start();\n    } else {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 0,\n        duration: 200 * scale,\n        useNativeDriver: true\n      })].concat(_toConsumableArray(animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      })))).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n\n  var close = function close() {\n    return onStateChange({\n      open: false\n    });\n  };\n\n  var toggle = function toggle() {\n    return onStateChange({\n      open: !open\n    });\n  };\n\n  var _getFABGroupColors = getFABGroupColors({\n    theme: theme,\n    customBackdropColor: customBackdropColor\n  }),\n      labelColor = _getFABGroupColors.labelColor,\n      backdropColor = _getFABGroupColors.backdropColor,\n      stackedFABBackgroundColor = _getFABGroupColors.stackedFABBackgroundColor;\n\n  var backdropOpacity = open ? backdrop.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 1, 1]\n  }) : backdrop;\n  var opacities = animations.current;\n  var scales = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1;\n  });\n  var translations = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [24, -8]\n    }) : -8;\n  });\n  var labelTranslations = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [8, -8]\n    }) : -8;\n  });\n\n  var _useSafeAreaInsets = useSafeAreaInsets(),\n      top = _useSafeAreaInsets.top,\n      bottom = _useSafeAreaInsets.bottom,\n      right = _useSafeAreaInsets.right,\n      left = _useSafeAreaInsets.left;\n\n  var containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top\n  };\n\n  if (actions.length !== (prevActions === null || prevActions === void 0 ? void 0 : prevActions.length)) {\n    animations.current = actions.map(function (_, i) {\n      return animations.current[i] || new Animated.Value(open ? 1 : 0);\n    });\n    setPrevActions(actions);\n  }\n\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.container, containerPaddings, style]\n  }, React.createElement(TouchableWithoutFeedback, {\n    accessibilityRole: \"button\",\n    onPress: close\n  }, React.createElement(Animated.View, {\n    pointerEvents: open ? 'auto' : 'none',\n    style: [styles.backdrop, {\n      opacity: backdropOpacity,\n      backgroundColor: backdropColor\n    }]\n  })), React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: styles.safeArea\n  }, React.createElement(View, {\n    pointerEvents: open ? 'box-none' : 'none'\n  }, actions.map(function (it, i) {\n    var _it$labelTextColor;\n\n    var labelTextStyle = _objectSpread({\n      color: (_it$labelTextColor = it.labelTextColor) !== null && _it$labelTextColor !== void 0 ? _it$labelTextColor : labelColor\n    }, isV3 ? theme.fonts.titleMedium : {});\n\n    var marginHorizontal = typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n    var accessibilityLabel = typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label;\n    var size = typeof it.size !== 'undefined' ? it.size : 'small';\n    return React.createElement(View, {\n      key: i,\n      style: [styles.item, {\n        marginHorizontal: marginHorizontal\n      }],\n      pointerEvents: open ? 'box-none' : 'none'\n    }, it.label && React.createElement(View, null, React.createElement(Card, {\n      mode: isV3 ? 'contained' : 'elevated',\n      onPress: function onPress(e) {\n        it.onPress(e);\n        close();\n      },\n      accessibilityHint: it.accessibilityHint,\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\",\n      style: [styles.containerStyle, {\n        transform: [isV3 ? {\n          translateY: labelTranslations[i]\n        } : {\n          scale: scales[i]\n        }],\n        opacity: opacities[i]\n      }, isV3 && styles.v3ContainerStyle, it.containerStyle]\n    }, React.createElement(Text, {\n      variant: \"titleMedium\",\n      style: [labelTextStyle, it.labelStyle]\n    }, it.label))), React.createElement(FAB, {\n      size: size,\n      icon: it.icon,\n      color: it.color,\n      style: [{\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i],\n        backgroundColor: stackedFABBackgroundColor\n      }, isV3 && {\n        transform: [{\n          translateY: translations[i]\n        }]\n      }, it.style],\n      onPress: function onPress(e) {\n        it.onPress(e);\n        close();\n      },\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\",\n      testID: it.testID,\n      visible: open\n    }));\n  })), React.createElement(FAB, {\n    onPress: function onPress(e) {\n      _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n      toggle();\n    },\n    icon: icon,\n    color: colorProp,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: open\n    },\n    style: [styles.fab, fabStyle],\n    visible: visible,\n    label: label,\n    testID: testID,\n    variant: variant\n  })));\n};\n\nFABGroup.displayName = 'FAB.Group';\nexport default withInternalTheme(FABGroup);\nvar FABGroupWithTheme = withInternalTheme(FABGroup);\nexport { FABGroupWithTheme as FABGroup };\nvar styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, StyleSheet.absoluteFillObject),\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0\n  }\n});","map":{"version":3,"sources":["FABGroup.tsx"],"names":["React","useSafeAreaInsets","withInternalTheme","Card","Text","FAB","getFABGroupColors","FABGroup","actions","icon","open","onPress","accessibilityLabel","theme","style","fabStyle","visible","label","testID","onStateChange","color","colorProp","variant","backdropColor","customBackdropColor","current","backdrop","useRef","Animated","Value","animations","map","prevActions","setPrevActions","useState","scale","animation","isV3","useEffect","parallel","timing","toValue","duration","useNativeDriver","stagger","reverse","start","close","toggle","labelColor","stackedFABBackgroundColor","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","translations","labelTranslations","top","bottom","right","left","containerPaddings","paddingBottom","paddingRight","paddingLeft","paddingTop","length","_","i","styles","container","backgroundColor","safeArea","it","labelTextStyle","labelTextColor","fonts","titleMedium","marginHorizontal","size","item","e","accessibilityHint","containerStyle","transform","translateY","v3ContainerStyle","labelStyle","expanded","fab","displayName","FABGroupWithTheme","StyleSheet","create","alignItems","absoluteFillObject","justifyContent","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport Card from '../Card/Card';\nimport type { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\nimport FAB from './FAB';\nimport { getFABGroupColors } from './utils';\n\nexport type Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `color`: custom icon color of the action item\n   * - `labelTextColor`: custom label text color of the action item\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `accessibilityHint`: accessibility hint for the action\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `containerStyle`: pass additional styles for the fab item label container, for example, `backgroundColor` @supported Available in 5.x\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `fontSize`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   * - `size`: size of action item. Defaults to `small`. @supported Available in v5.x\n   * - `testID`: testID to be used on tests\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    labelTextColor?: string;\n    accessibilityLabel?: string;\n    accessibilityHint?: string;\n    style?: StyleProp<ViewStyle>;\n    containerStyle?: StyleProp<ViewStyle>;\n    labelStyle?: StyleProp<TextStyle>;\n    onPress: (e: GestureResponderEvent) => void;\n    size?: 'small' | 'medium';\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Custom backdrop color for opened speed dial background.\n   */\n  backdropColor?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * Optional label for `FAB`.\n   */\n  label?: string;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/fab-group.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           visible\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  accessibilityLabel,\n  theme,\n  style,\n  fabStyle,\n  visible,\n  label,\n  testID,\n  onStateChange,\n  color: colorProp,\n  variant = 'primary',\n  backdropColor: customBackdropColor,\n}: Props) => {\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: StyleProp<ViewStyle>;\n        onPress: (e: GestureResponderEvent) => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n  const { isV3 } = theme;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          isV3 ? 15 : 50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { labelColor, backdropColor, stackedFABBackgroundColor } =\n    getFABGroupColors({ theme, customBackdropColor });\n\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.5, 1],\n        })\n      : 1\n  );\n\n  const translations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [24, -8],\n        })\n      : -8\n  );\n  const labelTranslations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [8, -8],\n        })\n      : -8\n  );\n\n  const { top, bottom, right, left } = useSafeAreaInsets();\n  const containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top,\n  };\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[styles.container, containerPaddings, style]}\n    >\n      <TouchableWithoutFeedback accessibilityRole=\"button\" onPress={close}>\n        <Animated.View\n          pointerEvents={open ? 'auto' : 'none'}\n          style={[\n            styles.backdrop,\n            {\n              opacity: backdropOpacity,\n              backgroundColor: backdropColor,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <View pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => {\n            const labelTextStyle = {\n              color: it.labelTextColor ?? labelColor,\n              ...(isV3 ? theme.fonts.titleMedium : {}),\n            };\n            const marginHorizontal =\n              typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n            const accessibilityLabel =\n              typeof it.accessibilityLabel !== 'undefined'\n                ? it.accessibilityLabel\n                : it.label;\n            const size = typeof it.size !== 'undefined' ? it.size : 'small';\n\n            return (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={[\n                  styles.item,\n                  {\n                    marginHorizontal,\n                  },\n                ]}\n                pointerEvents={open ? 'box-none' : 'none'}\n              >\n                {it.label && (\n                  <View>\n                    <Card\n                      mode={isV3 ? 'contained' : 'elevated'}\n                      onPress={(e) => {\n                        it.onPress(e);\n                        close();\n                      }}\n                      accessibilityHint={it.accessibilityHint}\n                      accessibilityLabel={accessibilityLabel}\n                      accessibilityRole=\"button\"\n                      style={\n                        [\n                          styles.containerStyle,\n                          {\n                            transform: [\n                              isV3\n                                ? { translateY: labelTranslations[i] }\n                                : { scale: scales[i] },\n                            ],\n                            opacity: opacities[i],\n                          },\n                          isV3 && styles.v3ContainerStyle,\n                          it.containerStyle,\n                        ] as StyleProp<ViewStyle>\n                      }\n                    >\n                      <Text\n                        variant=\"titleMedium\"\n                        style={[labelTextStyle, it.labelStyle]}\n                      >\n                        {it.label}\n                      </Text>\n                    </Card>\n                  </View>\n                )}\n                <FAB\n                  size={size}\n                  icon={it.icon}\n                  color={it.color}\n                  style={\n                    [\n                      {\n                        transform: [{ scale: scales[i] }],\n                        opacity: opacities[i],\n                        backgroundColor: stackedFABBackgroundColor,\n                      },\n                      isV3 && { transform: [{ translateY: translations[i] }] },\n                      it.style,\n                    ] as StyleProp<ViewStyle>\n                  }\n                  onPress={(e) => {\n                    it.onPress(e);\n                    close();\n                  }}\n                  accessibilityLabel={accessibilityLabel}\n                  accessibilityRole=\"button\"\n                  testID={it.testID}\n                  visible={open}\n                />\n              </View>\n            );\n          })}\n        </View>\n        <FAB\n          onPress={(e) => {\n            onPress?.(e);\n            toggle();\n          }}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          visible={visible}\n          label={label}\n          testID={testID}\n          variant={variant}\n        />\n      </View>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default withInternalTheme(FABGroup);\n\n// @component-docs ignore-next-line\nconst FABGroupWithTheme = withInternalTheme(FABGroup);\n// @component-docs ignore-next-line\nexport { FABGroupWithTheme as FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
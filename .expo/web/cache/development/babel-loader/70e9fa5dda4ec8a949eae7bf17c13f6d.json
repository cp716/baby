{"ast":null,"code":"import color from 'color';\n\nvar getAndroidCheckedColor = function getAndroidCheckedColor(_ref) {\n  var theme = _ref.theme,\n      customColor = _ref.customColor;\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nvar getAndroidUncheckedColor = function getAndroidUncheckedColor(_ref2) {\n  var theme = _ref2.theme,\n      customUncheckedColor = _ref2.customUncheckedColor;\n\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nvar getAndroidRippleColor = function getAndroidRippleColor(_ref3) {\n  var theme = _ref3.theme,\n      checkedColor = _ref3.checkedColor,\n      disabled = _ref3.disabled;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nvar getAndroidControlColor = function getAndroidControlColor(_ref4) {\n  var theme = _ref4.theme,\n      checked = _ref4.checked,\n      disabled = _ref4.disabled,\n      checkedColor = _ref4.checkedColor,\n      uncheckedColor = _ref4.uncheckedColor;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.text;\n  }\n\n  if (checked) {\n    return checkedColor;\n  }\n\n  return uncheckedColor;\n};\n\nexport var getAndroidSelectionControlColor = function getAndroidSelectionControlColor(_ref5) {\n  var theme = _ref5.theme,\n      disabled = _ref5.disabled,\n      checked = _ref5.checked,\n      customColor = _ref5.customColor,\n      customUncheckedColor = _ref5.customUncheckedColor;\n  var checkedColor = getAndroidCheckedColor({\n    theme: theme,\n    customColor: customColor\n  });\n  var uncheckedColor = getAndroidUncheckedColor({\n    theme: theme,\n    customUncheckedColor: customUncheckedColor\n  });\n  return {\n    rippleColor: getAndroidRippleColor({\n      theme: theme,\n      checkedColor: checkedColor,\n      disabled: disabled\n    }),\n    selectionControlColor: getAndroidControlColor({\n      theme: theme,\n      disabled: disabled,\n      checked: checked,\n      checkedColor: checkedColor,\n      uncheckedColor: uncheckedColor\n    })\n  };\n};\n\nvar getIOSCheckedColor = function getIOSCheckedColor(_ref6) {\n  var theme = _ref6.theme,\n      disabled = _ref6.disabled,\n      customColor = _ref6.customColor;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.disabled;\n  }\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nvar getIOSRippleColor = function getIOSRippleColor(_ref7) {\n  var theme = _ref7.theme,\n      checkedColor = _ref7.checkedColor,\n      disabled = _ref7.disabled;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nexport var getSelectionControlIOSColor = function getSelectionControlIOSColor(_ref8) {\n  var theme = _ref8.theme,\n      disabled = _ref8.disabled,\n      customColor = _ref8.customColor;\n  var checkedColor = getIOSCheckedColor({\n    theme: theme,\n    disabled: disabled,\n    customColor: customColor\n  });\n  return {\n    checkedColor: checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme: theme,\n      checkedColor: checkedColor,\n      disabled: disabled\n    })\n  };\n};","map":{"version":3,"sources":["utils.ts"],"names":["color","getAndroidCheckedColor","theme","customColor","isV3","colors","primary","accent","getAndroidUncheckedColor","customUncheckedColor","onSurfaceVariant","dark","text","alpha","rgb","string","getAndroidRippleColor","checkedColor","disabled","onSurface","fade","getAndroidControlColor","checked","uncheckedColor","onSurfaceDisabled","getAndroidSelectionControlColor","rippleColor","selectionControlColor","getIOSCheckedColor","getIOSRippleColor","getSelectionControlIOSColor"],"mappings":"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","sourcesContent":["import color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\nconst getAndroidCheckedColor = ({\n  theme,\n  customColor,\n}: {\n  theme: InternalTheme;\n  customColor?: string;\n}) => {\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getAndroidUncheckedColor = ({\n  theme,\n  customUncheckedColor,\n}: {\n  theme: InternalTheme;\n  customUncheckedColor?: string;\n}) => {\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getAndroidRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: InternalTheme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nconst getAndroidControlColor = ({\n  theme,\n  checked,\n  disabled,\n  checkedColor,\n  uncheckedColor,\n}: {\n  theme: InternalTheme;\n  checked: boolean;\n  checkedColor: string;\n  uncheckedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.text;\n  }\n\n  if (checked) {\n    return checkedColor;\n  }\n  return uncheckedColor;\n};\n\nexport const getAndroidSelectionControlColor = ({\n  theme,\n  disabled,\n  checked,\n  customColor,\n  customUncheckedColor,\n}: {\n  theme: InternalTheme;\n  checked: boolean;\n  disabled?: boolean;\n  customColor?: string;\n  customUncheckedColor?: string;\n}) => {\n  const checkedColor = getAndroidCheckedColor({ theme, customColor });\n  const uncheckedColor = getAndroidUncheckedColor({\n    theme,\n    customUncheckedColor,\n  });\n  return {\n    rippleColor: getAndroidRippleColor({ theme, checkedColor, disabled }),\n    selectionControlColor: getAndroidControlColor({\n      theme,\n      disabled,\n      checked,\n      checkedColor,\n      uncheckedColor,\n    }),\n  };\n};\n\nconst getIOSCheckedColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: InternalTheme;\n  customColor?: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.disabled;\n  }\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getIOSRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: InternalTheme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nexport const getSelectionControlIOSColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: InternalTheme;\n  disabled?: boolean;\n  customColor?: string;\n}) => {\n  const checkedColor = getIOSCheckedColor({ theme, disabled, customColor });\n  return {\n    checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme,\n      checkedColor,\n      disabled,\n    }),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
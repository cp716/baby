{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"route\", \"style\", \"children\", \"borderless\", \"centered\", \"rippleColor\"],\n    _excluded2 = [\"component\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { withInternalTheme } from \"../../core/theming\";\nimport overlay from \"../../styles/overlay\";\nimport { black, white } from \"../../styles/themes/v2/colors\";\nimport useAnimatedValue from \"../../utils/useAnimatedValue\";\nimport useAnimatedValueArray from \"../../utils/useAnimatedValueArray\";\nimport useIsKeyboardShown from \"../../utils/useIsKeyboardShown\";\nimport useLayout from \"../../utils/useLayout\";\nimport Badge from \"../Badge\";\nimport Icon from \"../Icon\";\nimport Surface from \"../Surface\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport BottomNavigationRouteScreen from \"./BottomNavigationRouteScreen\";\nvar MIN_RIPPLE_SCALE = 0.001;\nvar MIN_TAB_WIDTH = 96;\nvar MAX_TAB_WIDTH = 168;\nvar BAR_HEIGHT = 56;\nvar FAR_FAR_AWAY = Platform.OS === 'web' ? 0 : 9999;\nvar OUTLINE_WIDTH = 64;\n\nvar Touchable = function Touchable(_ref) {\n  var _0 = _ref.route,\n      style = _ref.style,\n      children = _ref.children,\n      borderless = _ref.borderless,\n      centered = _ref.centered,\n      rippleColor = _ref.rippleColor,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return TouchableRipple.supported ? React.createElement(TouchableRipple, _extends({}, rest, {\n    disabled: rest.disabled || undefined,\n    borderless: borderless,\n    centered: centered,\n    rippleColor: rippleColor,\n    style: style\n  }), children) : React.createElement(TouchableWithoutFeedback, rest, React.createElement(View, {\n    style: style\n  }, children));\n};\n\nvar SceneComponent = React.memo(function (_ref2) {\n  var component = _ref2.component,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  return React.createElement(component, rest);\n});\n\nvar BottomNavigation = function BottomNavigation(_ref3) {\n  var _safeAreaInsets$left, _safeAreaInsets$right, _safeAreaInsets$botto;\n\n  var navigationState = _ref3.navigationState,\n      renderScene = _ref3.renderScene,\n      renderIcon = _ref3.renderIcon,\n      renderLabel = _ref3.renderLabel,\n      _ref3$renderTouchable = _ref3.renderTouchable,\n      renderTouchable = _ref3$renderTouchable === void 0 ? function (props) {\n    return React.createElement(Touchable, props);\n  } : _ref3$renderTouchable,\n      _ref3$getLabelText = _ref3.getLabelText,\n      getLabelText = _ref3$getLabelText === void 0 ? function (_ref4) {\n    var route = _ref4.route;\n    return route.title;\n  } : _ref3$getLabelText,\n      _ref3$getBadge = _ref3.getBadge,\n      getBadge = _ref3$getBadge === void 0 ? function (_ref5) {\n    var route = _ref5.route;\n    return route.badge;\n  } : _ref3$getBadge,\n      _ref3$getColor = _ref3.getColor,\n      getColor = _ref3$getColor === void 0 ? function (_ref6) {\n    var route = _ref6.route;\n    return route.color;\n  } : _ref3$getColor,\n      _ref3$getAccessibilit = _ref3.getAccessibilityLabel,\n      getAccessibilityLabel = _ref3$getAccessibilit === void 0 ? function (_ref7) {\n    var route = _ref7.route;\n    return route.accessibilityLabel;\n  } : _ref3$getAccessibilit,\n      _ref3$getTestID = _ref3.getTestID,\n      getTestID = _ref3$getTestID === void 0 ? function (_ref8) {\n    var route = _ref8.route;\n    return route.testID;\n  } : _ref3$getTestID,\n      activeColor = _ref3.activeColor,\n      inactiveColor = _ref3.inactiveColor,\n      _ref3$keyboardHidesNa = _ref3.keyboardHidesNavigationBar,\n      keyboardHidesNavigationBar = _ref3$keyboardHidesNa === void 0 ? Platform.OS === 'android' : _ref3$keyboardHidesNa,\n      barStyle = _ref3.barStyle,\n      _ref3$labeled = _ref3.labeled,\n      labeled = _ref3$labeled === void 0 ? true : _ref3$labeled,\n      style = _ref3.style,\n      theme = _ref3.theme,\n      _ref3$sceneAnimationE = _ref3.sceneAnimationEnabled,\n      sceneAnimationEnabled = _ref3$sceneAnimationE === void 0 ? false : _ref3$sceneAnimationE,\n      _ref3$sceneAnimationT = _ref3.sceneAnimationType,\n      sceneAnimationType = _ref3$sceneAnimationT === void 0 ? 'opacity' : _ref3$sceneAnimationT,\n      sceneAnimationEasing = _ref3.sceneAnimationEasing,\n      onTabPress = _ref3.onTabPress,\n      onIndexChange = _ref3.onIndexChange,\n      _ref3$shifting = _ref3.shifting,\n      shifting = _ref3$shifting === void 0 ? theme.isV3 ? false : navigationState.routes.length > 3 : _ref3$shifting,\n      safeAreaInsets = _ref3.safeAreaInsets,\n      _ref3$labelMaxFontSiz = _ref3.labelMaxFontSizeMultiplier,\n      labelMaxFontSizeMultiplier = _ref3$labelMaxFontSiz === void 0 ? 1 : _ref3$labelMaxFontSiz,\n      _ref3$compact = _ref3.compact,\n      compact = _ref3$compact === void 0 ? !theme.isV3 : _ref3$compact,\n      _ref3$testID = _ref3.testID,\n      testID = _ref3$testID === void 0 ? 'bottom-navigation' : _ref3$testID,\n      _ref3$getLazy = _ref3.getLazy,\n      getLazy = _ref3$getLazy === void 0 ? function (_ref9) {\n    var route = _ref9.route;\n    return route.lazy;\n  } : _ref3$getLazy;\n\n  var _useSafeAreaInsets = useSafeAreaInsets(),\n      bottom = _useSafeAreaInsets.bottom,\n      left = _useSafeAreaInsets.left,\n      right = _useSafeAreaInsets.right;\n\n  var scale = theme.animation.scale;\n\n  if (shifting && navigationState.routes.length < 2) {\n    shifting = false;\n    console.warn('BottomNavigation needs at least 2 tabs to run shifting animation');\n  }\n\n  var focusedKey = navigationState.routes[navigationState.index].key;\n  var visibleAnim = useAnimatedValue(1);\n  var tabsAnims = useAnimatedValueArray(navigationState.routes.map(function (_, i) {\n    return i === navigationState.index ? 1 : 0;\n  }));\n  var tabsPositionAnims = useAnimatedValueArray(navigationState.routes.map(function (_, i) {\n    return i === navigationState.index ? 0 : i >= navigationState.index ? 1 : -1;\n  }));\n  var offsetsAnims = useAnimatedValueArray(navigationState.routes.map(function (_, i) {\n    return i === navigationState.index ? 0 : 1;\n  }));\n  var indexAnim = useAnimatedValue(navigationState.index);\n  var rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n\n  var _useLayout = useLayout(),\n      _useLayout2 = _slicedToArray(_useLayout, 2),\n      layout = _useLayout2[0],\n      onLayout = _useLayout2[1];\n\n  var _React$useState = React.useState([focusedKey]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loaded = _React$useState2[0],\n      setLoaded = _React$useState2[1];\n\n  if (!loaded.includes(focusedKey)) {\n    setLoaded(function (loaded) {\n      return [].concat(_toConsumableArray(loaded), [focusedKey]);\n    });\n  }\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      keyboardVisible = _React$useState4[0],\n      setKeyboardVisible = _React$useState4[1];\n\n  var handleKeyboardShow = React.useCallback(function () {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  }, [scale, visibleAnim]);\n  var handleKeyboardHide = React.useCallback(function () {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true\n    }).start(function () {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n  var animateToIndex = React.useCallback(function (index) {\n    rippleAnim.setValue(MIN_RIPPLE_SCALE);\n    Animated.parallel([Animated.timing(rippleAnim, {\n      toValue: 1,\n      duration: theme.isV3 || shifting ? 400 * scale : 0,\n      useNativeDriver: true\n    })].concat(_toConsumableArray(navigationState.routes.map(function (_, i) {\n      return Animated.timing(tabsAnims[i], {\n        toValue: i === index ? 1 : 0,\n        duration: theme.isV3 || shifting ? 150 * scale : 0,\n        useNativeDriver: true,\n        easing: sceneAnimationEasing\n      });\n    })), _toConsumableArray(navigationState.routes.map(function (_, i) {\n      return Animated.timing(tabsPositionAnims[i], {\n        toValue: i === index ? 0 : i >= index ? 1 : -1,\n        duration: theme.isV3 || shifting ? 150 * scale : 0,\n        useNativeDriver: true,\n        easing: sceneAnimationEasing\n      });\n    })))).start(function (_ref10) {\n      var finished = _ref10.finished;\n      tabsAnims.map(function (tab, i) {\n        return tab.setValue(i === index ? 1 : 0);\n      });\n      indexAnim.setValue(index);\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n      if (finished) {\n        offsetsAnims.forEach(function (offset, i) {\n          if (i === index) {\n            offset.setValue(0);\n          } else {\n            offset.setValue(1);\n          }\n        });\n      }\n    });\n  }, [indexAnim, shifting, navigationState.routes, offsetsAnims, rippleAnim, scale, tabsAnims, tabsPositionAnims, sceneAnimationEasing, theme]);\n  React.useEffect(function () {\n    animateToIndex(navigationState.index);\n  }, []);\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide\n  });\n  var prevNavigationState = React.useRef();\n  React.useEffect(function () {\n    offsetsAnims.forEach(function (offset, i) {\n      var _prevNavigationState$;\n\n      if (i === navigationState.index || i === ((_prevNavigationState$ = prevNavigationState.current) === null || _prevNavigationState$ === void 0 ? void 0 : _prevNavigationState$.index)) {\n        offset.setValue(0);\n      }\n    });\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex, offsetsAnims]);\n\n  var handleTabPress = function handleTabPress(index) {\n    var event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: function preventDefault() {\n        event.defaultPrevented = true;\n      }\n    };\n    onTabPress === null || onTabPress === void 0 ? void 0 : onTabPress(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  var jumpTo = React.useCallback(function (key) {\n    var index = navigationState.routes.findIndex(function (route) {\n      return route.key === key;\n    });\n    onIndexChange(index);\n  }, [navigationState.routes, onIndexChange]);\n  var routes = navigationState.routes;\n  var colors = theme.colors,\n      isDarkTheme = theme.dark,\n      mode = theme.mode,\n      isV3 = theme.isV3;\n\n  var _ref12 = StyleSheet.flatten(barStyle) || {},\n      customBackground = _ref12.backgroundColor,\n      _ref12$elevation = _ref12.elevation,\n      elevation = _ref12$elevation === void 0 ? 4 : _ref12$elevation;\n\n  var approxBackgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.primary;\n  var v2BackgroundColorInterpolation = shifting ? indexAnim.interpolate({\n    inputRange: routes.map(function (_, i) {\n      return i;\n    }),\n    outputRange: routes.map(function (route) {\n      return getColor({\n        route: route\n      }) || approxBackgroundColor;\n    })\n  }) : approxBackgroundColor;\n  var backgroundColor = isV3 ? customBackground || theme.colors.elevation.level2 : shifting ? v2BackgroundColorInterpolation : approxBackgroundColor;\n  var isDark = typeof approxBackgroundColor === 'string' ? !color(approxBackgroundColor).isLight() : true;\n  var textColor = isDark ? white : black;\n  var activeTintColor = typeof activeColor !== 'undefined' ? activeColor : isV3 ? theme.colors.onSecondaryContainer : textColor;\n  var inactiveTintColor = typeof inactiveColor !== 'undefined' ? inactiveColor : isV3 ? theme.colors.onSurfaceVariant : color(textColor).alpha(0.5).rgb().string();\n  var touchColor = color(activeColor || activeTintColor).alpha(0.12).rgb().string();\n  var maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  var maxTabBarWidth = maxTabWidth * routes.length;\n  var tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n  var tabWidth = tabBarWidth / routes.length;\n  var rippleSize = layout.width / 4;\n  var insets = {\n    left: (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : left,\n    right: (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : right,\n    bottom: (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : bottom\n  };\n  return React.createElement(View, {\n    style: [styles.container, style],\n    testID: testID\n  }, React.createElement(View, {\n    style: [styles.content, {\n      backgroundColor: colors === null || colors === void 0 ? void 0 : colors.background\n    }]\n  }, routes.map(function (route, index) {\n    if (getLazy({\n      route: route\n    }) !== false && !loaded.includes(route.key)) {\n      return null;\n    }\n\n    var focused = navigationState.index === index;\n    var opacity = sceneAnimationEnabled ? tabsPositionAnims[index].interpolate({\n      inputRange: [-1, 0, 1],\n      outputRange: [0, 1, 0]\n    }) : focused ? 1 : 0;\n    var top = sceneAnimationEnabled ? offsetsAnims[index].interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, FAR_FAR_AWAY]\n    }) : focused ? 0 : FAR_FAR_AWAY;\n    var left = sceneAnimationType === 'shifting' ? tabsPositionAnims[index].interpolate({\n      inputRange: [-1, 0, 1],\n      outputRange: [-50, 0, 50]\n    }) : 0;\n    var zIndex = focused ? 1 : 0;\n    return React.createElement(BottomNavigationRouteScreen, {\n      key: route.key,\n      pointerEvents: focused ? 'auto' : 'none',\n      accessibilityElementsHidden: !focused,\n      importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n      index: index,\n      visibility: opacity,\n      style: [StyleSheet.absoluteFill, {\n        zIndex: zIndex\n      }],\n      collapsable: false,\n      removeClippedSubviews: Platform.OS === 'ios' ? navigationState.index !== index : true\n    }, React.createElement(Animated.View, _extends({}, Platform.OS === 'android' && {\n      needsOffscreenAlphaCompositing: sceneAnimationEnabled\n    }, {\n      renderToHardwareTextureAndroid: sceneAnimationEnabled,\n      style: [styles.content, {\n        opacity: opacity,\n        transform: [{\n          translateX: left\n        }, {\n          translateY: top\n        }]\n      }]\n    }), renderScene({\n      route: route,\n      jumpTo: jumpTo\n    })));\n  })), React.createElement(Surface, _extends({}, theme.isV3 && {\n    elevation: 0\n  }, {\n    style: [!theme.isV3 && {\n      elevation: 4\n    }, styles.bar, keyboardHidesNavigationBar ? {\n      transform: [{\n        translateY: visibleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height, 0]\n        })\n      }],\n      position: keyboardVisible ? 'absolute' : null\n    } : null, barStyle],\n    pointerEvents: layout.measured ? keyboardHidesNavigationBar && keyboardVisible ? 'none' : 'auto' : 'none',\n    onLayout: onLayout\n  }), React.createElement(Animated.View, {\n    style: [styles.barContent, {\n      backgroundColor: backgroundColor\n    }],\n    testID: testID + \"-bar-content\"\n  }, React.createElement(View, {\n    style: [styles.items, {\n      marginBottom: insets.bottom,\n      marginHorizontal: Math.max(insets.left, insets.right)\n    }, compact && {\n      maxWidth: maxTabBarWidth\n    }],\n    accessibilityRole: 'tablist'\n  }, shifting ? React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [styles.ripple, {\n      top: (BAR_HEIGHT - rippleSize) / 2,\n      left: tabWidth * (navigationState.index + 0.5) - rippleSize / 2,\n      height: rippleSize,\n      width: rippleSize,\n      borderRadius: rippleSize / 2,\n      backgroundColor: getColor({\n        route: routes[navigationState.index]\n      }),\n      transform: [{\n        scale: rippleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 8]\n        })\n      }],\n      opacity: rippleAnim.interpolate({\n        inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n        outputRange: [0, 0, 1, 1]\n      })\n    }]\n  }) : null, routes.map(function (route, index) {\n    var focused = navigationState.index === index;\n    var active = tabsAnims[index];\n    var scale = labeled && shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1;\n    var translateY = labeled ? shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [7, 0]\n    }) : 0 : 7;\n    var activeOpacity = active;\n    var inactiveOpacity = active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [1, 0]\n    });\n    var v3ActiveOpacity = focused ? 1 : 0;\n    var v3InactiveOpacity = shifting ? inactiveOpacity : focused ? 0 : 1;\n    var outlineScale = focused ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 0;\n    var badge = getBadge({\n      route: route\n    });\n    var activeLabelColor = !isV3 ? activeTintColor : focused ? theme.colors.onSurface : theme.colors.onSurfaceVariant;\n    var inactiveLabelColor = !isV3 ? inactiveTintColor : focused ? theme.colors.onSurface : theme.colors.onSurfaceVariant;\n    var badgeStyle = {\n      top: !isV3 ? -2 : typeof badge === 'boolean' ? 4 : 2,\n      right: (badge != null && typeof badge !== 'boolean' ? String(badge).length * -2 : 0) - (!isV3 ? 2 : 0)\n    };\n    var isV3Shifting = isV3 && shifting && labeled;\n    var font = isV3 ? theme.fonts.labelMedium : {};\n    return renderTouchable({\n      key: route.key,\n      route: route,\n      borderless: true,\n      centered: true,\n      rippleColor: isV3 ? 'transparent' : touchColor,\n      onPress: function onPress() {\n        return handleTabPress(index);\n      },\n      testID: getTestID({\n        route: route\n      }),\n      accessibilityLabel: getAccessibilityLabel({\n        route: route\n      }),\n      accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n      accessibilityState: {\n        selected: focused\n      },\n      style: [styles.item, isV3 && styles.v3Item],\n      children: React.createElement(View, {\n        pointerEvents: \"none\",\n        style: isV3 && (labeled ? styles.v3TouchableContainer : styles.v3NoLabelContainer)\n      }, React.createElement(Animated.View, {\n        style: [styles.iconContainer, isV3 && styles.v3IconContainer, (!isV3 || isV3Shifting) && {\n          transform: [{\n            translateY: translateY\n          }]\n        }]\n      }, isV3 && focused && React.createElement(Animated.View, {\n        style: [styles.outline, {\n          transform: [{\n            scaleX: outlineScale\n          }],\n          backgroundColor: theme.colors.secondaryContainer\n        }]\n      }), React.createElement(Animated.View, {\n        style: [styles.iconWrapper, isV3 && styles.v3IconWrapper, {\n          opacity: isV3 ? v3ActiveOpacity : activeOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route: route,\n        focused: true,\n        color: activeTintColor\n      }) : React.createElement(Icon, {\n        source: route.focusedIcon,\n        color: activeTintColor,\n        size: 24\n      })), React.createElement(Animated.View, {\n        style: [styles.iconWrapper, isV3 && styles.v3IconWrapper, {\n          opacity: isV3 ? v3InactiveOpacity : inactiveOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route: route,\n        focused: false,\n        color: inactiveTintColor\n      }) : React.createElement(Icon, {\n        source: theme.isV3 && route.unfocusedIcon !== undefined ? route.unfocusedIcon : route.focusedIcon,\n        color: inactiveTintColor,\n        size: 24\n      })), React.createElement(View, {\n        style: [styles.badgeContainer, badgeStyle]\n      }, typeof badge === 'boolean' ? React.createElement(Badge, {\n        visible: badge,\n        size: isV3 ? 6 : 8\n      }) : React.createElement(Badge, {\n        visible: badge != null,\n        size: 16\n      }, badge))), labeled ? React.createElement(Animated.View, {\n        style: [styles.labelContainer, !isV3 && {\n          transform: [{\n            scale: scale\n          }]\n        }]\n      }, React.createElement(Animated.View, {\n        style: [styles.labelWrapper, (!isV3 || isV3Shifting) && {\n          opacity: activeOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route: route,\n        focused: true,\n        color: activeLabelColor\n      }) : React.createElement(Text, {\n        maxFontSizeMultiplier: labelMaxFontSizeMultiplier,\n        variant: \"labelMedium\",\n        style: [styles.label, _objectSpread({\n          color: activeLabelColor\n        }, font)]\n      }, getLabelText({\n        route: route\n      }))), shifting ? null : React.createElement(Animated.View, {\n        style: [styles.labelWrapper, {\n          opacity: inactiveOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route: route,\n        focused: false,\n        color: inactiveLabelColor\n      }) : React.createElement(Text, {\n        maxFontSizeMultiplier: labelMaxFontSizeMultiplier,\n        variant: \"labelMedium\",\n        selectable: false,\n        style: [styles.label, _objectSpread({\n          color: inactiveLabelColor\n        }, font)]\n      }, getLabelText({\n        route: route\n      })))) : !isV3 && React.createElement(View, {\n        style: styles.labelContainer\n      }))\n    });\n  })))));\n};\n\nBottomNavigation.SceneMap = function (scenes) {\n  return function (_ref11) {\n    var route = _ref11.route,\n        jumpTo = _ref11.jumpTo;\n    return React.createElement(SceneComponent, {\n      key: route.key,\n      component: scenes[route.key ? route.key : ''],\n      route: route,\n      jumpTo: jumpTo\n    });\n  };\n};\n\nexport default withInternalTheme(BottomNavigation);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  content: {\n    flex: 1\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  items: _objectSpread({\n    flexDirection: 'row'\n  }, Platform.OS === 'web' ? {\n    width: '100%'\n  } : null),\n  item: {\n    flex: 1,\n    paddingVertical: 6\n  },\n  v3Item: {\n    paddingVertical: 0\n  },\n  ripple: {\n    position: 'absolute'\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center'\n  },\n  v3IconContainer: {\n    height: 32,\n    width: 32,\n    marginBottom: 4,\n    marginTop: 0,\n    justifyContent: 'center'\n  },\n  iconWrapper: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    alignItems: 'center'\n  }),\n  v3IconWrapper: {\n    top: 4\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2\n  },\n  labelWrapper: _objectSpread({}, StyleSheet.absoluteFillObject),\n  label: _objectSpread({\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  }, Platform.OS === 'web' ? {\n    whiteSpace: 'nowrap',\n    alignSelf: 'center'\n  } : null),\n  badgeContainer: {\n    position: 'absolute',\n    left: 0\n  },\n  v3TouchableContainer: {\n    paddingTop: 12,\n    paddingBottom: 16\n  },\n  v3NoLabelContainer: {\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  outline: {\n    width: OUTLINE_WIDTH,\n    height: OUTLINE_WIDTH / 2,\n    borderRadius: OUTLINE_WIDTH / 4,\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["BottomNavigation.tsx"],"names":["React","color","useSafeAreaInsets","withInternalTheme","overlay","black","white","useAnimatedValue","useAnimatedValueArray","useIsKeyboardShown","useLayout","Badge","Icon","Surface","TouchableRipple","Text","BottomNavigationRouteScreen","MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","FAR_FAR_AWAY","Platform","OS","OUTLINE_WIDTH","Touchable","route","_0","style","children","borderless","centered","rippleColor","rest","supported","disabled","undefined","SceneComponent","memo","component","createElement","BottomNavigation","navigationState","renderScene","renderIcon","renderLabel","renderTouchable","props","getLabelText","title","getBadge","badge","getColor","getAccessibilityLabel","accessibilityLabel","getTestID","testID","activeColor","inactiveColor","keyboardHidesNavigationBar","barStyle","labeled","theme","sceneAnimationEnabled","sceneAnimationType","sceneAnimationEasing","onTabPress","onIndexChange","shifting","isV3","routes","length","safeAreaInsets","labelMaxFontSizeMultiplier","compact","getLazy","lazy","bottom","left","right","scale","animation","console","warn","focusedKey","index","key","visibleAnim","tabsAnims","map","_","i","tabsPositionAnims","offsetsAnims","indexAnim","rippleAnim","layout","onLayout","loaded","setLoaded","useState","includes","keyboardVisible","setKeyboardVisible","handleKeyboardShow","useCallback","Animated","timing","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToIndex","setValue","parallel","easing","finished","tab","forEach","offset","useEffect","onShow","onHide","prevNavigationState","useRef","current","handleTabPress","event","defaultPrevented","preventDefault","jumpTo","findIndex","colors","dark","isDarkTheme","mode","backgroundColor","customBackground","elevation","StyleSheet","flatten","approxBackgroundColor","surface","primary","v2BackgroundColorInterpolation","interpolate","inputRange","outputRange","level2","isDark","isLight","textColor","activeTintColor","onSecondaryContainer","inactiveTintColor","onSurfaceVariant","alpha","rgb","string","touchColor","maxTabWidth","maxTabBarWidth","tabBarWidth","Math","min","width","tabWidth","rippleSize","insets","styles","container","content","background","focused","opacity","top","zIndex","absoluteFill","needsOffscreenAlphaCompositing","transform","translateX","translateY","bar","height","position","measured","barContent","items","marginBottom","marginHorizontal","max","maxWidth","ripple","borderRadius","active","activeOpacity","inactiveOpacity","v3ActiveOpacity","v3InactiveOpacity","outlineScale","activeLabelColor","onSurface","inactiveLabelColor","badgeStyle","String","isV3Shifting","font","fonts","labelMedium","onPress","accessibilityRole","accessibilityState","selected","item","v3Item","v3TouchableContainer","v3NoLabelContainer","iconContainer","v3IconContainer","outline","scaleX","secondaryContainer","iconWrapper","v3IconWrapper","focusedIcon","unfocusedIcon","badgeContainer","labelContainer","labelWrapper","label","SceneMap","scenes","create","flex","overflow","alignItems","flexDirection","paddingVertical","marginTop","alignSelf","justifyContent","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace","paddingTop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAaA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA,SAASC,iBAAT;AACA,OAAOC,OAAP;AACA,SAASC,KAAT,EAAgBC,KAAhB;AAEA,OAAOC,gBAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,SAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,OAAOC,eAAP;AACA,OAAOC,IAAP;AACA,OAAOC,2BAAP;AA+OA,IAAMC,gBAAgB,GAAG,KAAzB;AACA,IAAMC,aAAa,GAAG,EAAtB;AACA,IAAMC,aAAa,GAAG,GAAtB;AACA,IAAMC,UAAU,GAAG,EAAnB;AACA,IAAMC,YAAY,GAAGC,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GAAwB,CAAxBA,GAA4B,IAAjD;AACA,IAAME,aAAa,GAAG,EAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAA,IAAA,EAAA;EAAA,IACTE,EADS,GAQD,IARC,CAChBD,KADgB;EAAA,IAEhBE,KAFgB,GAQD,IARC,CAEhBA,KAFgB;EAAA,IAGhBC,QAHgB,GAQD,IARC,CAGhBA,QAHgB;EAAA,IAIhBC,UAJgB,GAQD,IARC,CAIhBA,UAJgB;EAAA,IAKhBC,QALgB,GAQD,IARC,CAKhBA,QALgB;EAAA,IAMhBC,WANgB,GAQD,IARC,CAMhBA,WANgB;EAAA,IAObC,IAPa,4BAQD,IARC;;EAQD,OACfnB,eAAe,CAACoB,SAAhBpB,GACE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,QAAA,CAAA,EAAA,EACVmB,IADU,EACN;IACR,QAAQ,EAAEA,IAAI,CAACE,QAALF,IAAiBG,SADnB;IAER,UAAU,EAAEN,UAFJ;IAGR,QAAQ,EAAEC,QAHF;IAIR,WAAW,EAAEC,WAJL;IAKR,KAAK,EAAEJ;EALC,CADM,CAAhB,EAQGC,QARH,CADFf,GAYE,KAAA,CAAA,aAAA,CAAC,wBAAD,EAA8BmB,IAA9B,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;IAAC,KAAK,EAAEL;EAAR,CAAL,EAAqBC,QAArB,CADF,CAba;AAgBd,CAxBH;;AA0BA,IAAMQ,cAAc,GAAGrC,KAAK,CAACsC,IAANtC,CAAW,UAAA,KAAA,EAAA;EAAA,IAAGuC,SAAH,GAA4B,KAA5B,CAAGA,SAAH;EAAA,IAAiBN,IAAjB,4BAA4B,KAA5B;;EAA4B,OAC5DjC,KAAK,CAACwC,aAANxC,CAAoBuC,SAApBvC,EAA+BiC,IAA/BjC,CAD4D;AACxB,CADfA,CAAvB;;AA0DA,IAAMyC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,KAAA,EA8BZ;EAAA,IAAA,oBAAA,EAAA,qBAAA,EAAA,qBAAA;;EA9Ba,IACxBC,eADwB,GA8BlB,KA9BkB,CACxBA,eADwB;EAAA,IAExBC,WAFwB,GA8BlB,KA9BkB,CAExBA,WAFwB;EAAA,IAGxBC,UAHwB,GA8BlB,KA9BkB,CAGxBA,UAHwB;EAAA,IAIxBC,WAJwB,GA8BlB,KA9BkB,CAIxBA,WAJwB;EAAA,4BA8BlB,KA9BkB,CAKxBC,eALwB;EAAA,IAKxBA,eALwB,sCAKLC,UAAAA,KAAqB;IAAA,OAAK,KAAA,CAAA,aAAA,CAAC,SAAD,EAAeA,KAAf,CAAL;EAAA,CALhB;EAAA,yBA8BlB,KA9BkB,CAMxBC,YANwB;EAAA,IAMxBA,YANwB,mCAMT,UAAA,KAAA,EAAA;IAAA,IAAGtB,KAAH,GAA4B,KAA5B,CAAGA,KAAH;IAA4B,OAAKA,KAAK,CAACuB,KAAX;EAAgB,CANnC;EAAA,qBA8BlB,KA9BkB,CAOxBC,QAPwB;EAAA,IAOxBA,QAPwB,+BAOb,UAAA,KAAA,EAAA;IAAA,IAAGxB,KAAH,GAA4B,KAA5B,CAAGA,KAAH;IAA4B,OAAKA,KAAK,CAACyB,KAAX;EAAgB,CAP/B;EAAA,qBA8BlB,KA9BkB,CAQxBC,QARwB;EAAA,IAQxBA,QARwB,+BAQb,UAAA,KAAA,EAAA;IAAA,IAAG1B,KAAH,GAA4B,KAA5B,CAAGA,KAAH;IAA4B,OAAKA,KAAK,CAACzB,KAAX;EAAgB,CAR/B;EAAA,4BA8BlB,KA9BkB,CASxBoD,qBATwB;EAAA,IASxBA,qBATwB,sCASA,UAAA,KAAA,EAAA;IAAA,IAAG3B,KAAH,GAA4B,KAA5B,CAAGA,KAAH;IAA4B,OAClDA,KAAK,CAAC4B,kBAD4C;EAC1B,CAVF;EAAA,sBA8BlB,KA9BkB,CAWxBC,SAXwB;EAAA,IAWxBA,SAXwB,gCAWZ,UAAA,KAAA,EAAA;IAAA,IAAG7B,KAAH,GAA4B,KAA5B,CAAGA,KAAH;IAA4B,OAAKA,KAAK,CAAC8B,MAAX;EAAiB,CAXjC;EAAA,IAYxBC,WAZwB,GA8BlB,KA9BkB,CAYxBA,WAZwB;EAAA,IAaxBC,aAbwB,GA8BlB,KA9BkB,CAaxBA,aAbwB;EAAA,4BA8BlB,KA9BkB,CAcxBC,0BAdwB;EAAA,IAcxBA,0BAdwB,sCAcKrC,QAAQ,CAACC,EAATD,KAAgB,SAdrB;EAAA,IAexBsC,QAfwB,GA8BlB,KA9BkB,CAexBA,QAfwB;EAAA,oBA8BlB,KA9BkB,CAgBxBC,OAhBwB;EAAA,IAgBxBA,OAhBwB,8BAgBd,IAhBc;EAAA,IAiBxBjC,KAjBwB,GA8BlB,KA9BkB,CAiBxBA,KAjBwB;EAAA,IAkBxBkC,KAlBwB,GA8BlB,KA9BkB,CAkBxBA,KAlBwB;EAAA,4BA8BlB,KA9BkB,CAmBxBC,qBAnBwB;EAAA,IAmBxBA,qBAnBwB,sCAmBA,KAnBA;EAAA,4BA8BlB,KA9BkB,CAoBxBC,kBApBwB;EAAA,IAoBxBA,kBApBwB,sCAoBH,SApBG;EAAA,IAqBxBC,oBArBwB,GA8BlB,KA9BkB,CAqBxBA,oBArBwB;EAAA,IAsBxBC,UAtBwB,GA8BlB,KA9BkB,CAsBxBA,UAtBwB;EAAA,IAuBxBC,aAvBwB,GA8BlB,KA9BkB,CAuBxBA,aAvBwB;EAAA,qBA8BlB,KA9BkB,CAwBxBC,QAxBwB;EAAA,IAwBxBA,QAxBwB,+BAwBbN,KAAK,CAACO,IAANP,GAAa,KAAbA,GAAqBpB,eAAe,CAAC4B,MAAhB5B,CAAuB6B,MAAvB7B,GAAgC,CAxBxC;EAAA,IAyBxB8B,cAzBwB,GA8BlB,KA9BkB,CAyBxBA,cAzBwB;EAAA,4BA8BlB,KA9BkB,CA0BxBC,0BA1BwB;EAAA,IA0BxBA,0BA1BwB,sCA0BK,CA1BL;EAAA,oBA8BlB,KA9BkB,CA2BxBC,OA3BwB;EAAA,IA2BxBA,OA3BwB,8BA2Bd,CAACZ,KAAK,CAACO,IA3BO;EAAA,mBA8BlB,KA9BkB,CA4BxBb,MA5BwB;EAAA,IA4BxBA,MA5BwB,6BA4Bf,mBA5Be;EAAA,oBA8BlB,KA9BkB,CA6BxBmB,OA7BwB;EAAA,IA6BxBA,OA7BwB,8BA6Bd,UAAA,KAAA,EAAA;IAAA,IAAGjD,KAAH,GAA4B,KAA5B,CAAGA,KAAH;IAA4B,OAAKA,KAAK,CAACkD,IAAX;EAAe,CA7B7B;;EA+BxB,yBAAgC1E,iBAAiB,EAAjD;EAAA,IAAQ2E,MAAR,sBAAQA,MAAR;EAAA,IAAgBC,IAAhB,sBAAgBA,IAAhB;EAAA,IAAsBC,KAAtB,sBAAsBA,KAAtB;;EACA,IAAQC,KAAR,GAAkBlB,KAAK,CAACmB,SAAxB,CAAQD,KAAR;;EAEA,IAAIZ,QAAQ,IAAI1B,eAAe,CAAC4B,MAAhB5B,CAAuB6B,MAAvB7B,GAAgC,CAAhD,EAAmD;IACjD0B,QAAQ,GAAG,KAAXA;IAEAc,OAAO,CAACC,IAARD,CACE,kEADFA;EAGF;;EAEA,IAAME,UAAU,GAAG1C,eAAe,CAAC4B,MAAhB5B,CAAuBA,eAAe,CAAC2C,KAAvC3C,EAA8C4C,GAAjE;EAKA,IAAMC,WAAW,GAAGhF,gBAAgB,CAAC,CAAD,CAApC;EAKA,IAAMiF,SAAS,GAAGhF,qBAAqB,CACrCkC,eAAe,CAAC4B,MAAhB5B,CAAuB+C,GAAvB/C,CAEE,UAACgD,CAAD,EAAIC,CAAJ;IAAA,OAAWA,CAAC,KAAKjD,eAAe,CAAC2C,KAAtBM,GAA8B,CAA9BA,GAAkC,CAA7C;EAAA,CAFFjD,CADqC,CAAvC;EAWA,IAAMkD,iBAAiB,GAAGpF,qBAAqB,CAC7CkC,eAAe,CAAC4B,MAAhB5B,CAAuB+C,GAAvB/C,CAA2B,UAACgD,CAAD,EAAIC,CAAJ;IAAA,OACzBA,CAAC,KAAKjD,eAAe,CAAC2C,KAAtBM,GAA8B,CAA9BA,GAAkCA,CAAC,IAAIjD,eAAe,CAAC2C,KAArBM,GAA6B,CAA7BA,GAAiC,CAAC,CAD3C;EAAA,CAA3BjD,CAD6C,CAA/C;EAWA,IAAMmD,YAAY,GAAGrF,qBAAqB,CACxCkC,eAAe,CAAC4B,MAAhB5B,CAAuB+C,GAAvB/C,CAEE,UAACgD,CAAD,EAAIC,CAAJ;IAAA,OAAWA,CAAC,KAAKjD,eAAe,CAAC2C,KAAtBM,GAA8B,CAA9BA,GAAkC,CAA7C;EAAA,CAFFjD,CADwC,CAA1C;EAWA,IAAMoD,SAAS,GAAGvF,gBAAgB,CAACmC,eAAe,CAAC2C,KAAjB,CAAlC;EAKA,IAAMU,UAAU,GAAGxF,gBAAgB,CAACU,gBAAD,CAAnC;;EAKA,iBAA2BP,SAAS,EAApC;EAAA;EAAA,IAAOsF,MAAP;EAAA,IAAeC,QAAf;;EAKA,sBAA4BjG,KAAK,CAACoG,QAANpG,CAAyB,CAACoF,UAAD,CAAzBpF,CAA5B;EAAA;EAAA,IAAOkG,MAAP;EAAA,IAAeC,SAAf;;EAEA,IAAI,CAACD,MAAM,CAACG,QAAPH,CAAgBd,UAAhBc,CAAL,EAAkC;IAEhCC,SAAS,CAAED,UAAAA,MAAM;MAAA,oCAASA,MAAT,IAAiBd,UAAjB;IAAA,CAAR,CAATe;EACF;;EAKA,uBAA8CnG,KAAK,CAACoG,QAANpG,CAAe,KAAfA,CAA9C;EAAA;EAAA,IAAOsG,eAAP;EAAA,IAAwBC,kBAAxB;;EAEA,IAAMC,kBAAkB,GAAGxG,KAAK,CAACyG,WAANzG,CAAkB,YAAM;IACjDuG,kBAAkB,CAAC,IAAD,CAAlBA;IACAG,QAAQ,CAACC,MAATD,CAAgBnB,WAAhBmB,EAA6B;MAC3BE,OAAO,EAAE,CADkB;MAE3BC,QAAQ,EAAE,MAAM7B,KAFW;MAG3B8B,eAAe,EAAE;IAHU,CAA7BJ,EAIGK,KAJHL;EAKD,CAP0B1G,EAOxB,CAACgF,KAAD,EAAQO,WAAR,CAPwBvF,CAA3B;EASA,IAAMgH,kBAAkB,GAAGhH,KAAK,CAACyG,WAANzG,CAAkB,YAAM;IACjD0G,QAAQ,CAACC,MAATD,CAAgBnB,WAAhBmB,EAA6B;MAC3BE,OAAO,EAAE,CADkB;MAE3BC,QAAQ,EAAE,MAAM7B,KAFW;MAG3B8B,eAAe,EAAE;IAHU,CAA7BJ,EAIGK,KAJHL,CAIS,YAAM;MACbH,kBAAkB,CAAC,KAAD,CAAlBA;IACD,CANDG;EAOD,CAR0B1G,EAQxB,CAACgF,KAAD,EAAQO,WAAR,CARwBvF,CAA3B;EAUA,IAAMiH,cAAc,GAAGjH,KAAK,CAACyG,WAANzG,CACpBqF,UAAAA,KAAa,EAAK;IAEjBU,UAAU,CAACmB,QAAXnB,CAAoB9E,gBAApB8E;IAEAW,QAAQ,CAACS,QAATT,EACEA,QAAQ,CAACC,MAATD,CAAgBX,UAAhBW,EAA4B;MAC1BE,OAAO,EAAE,CADiB;MAE1BC,QAAQ,EAAE/C,KAAK,CAACO,IAANP,IAAcM,QAAdN,GAAyB,MAAMkB,KAA/BlB,GAAuC,CAFvB;MAG1BgD,eAAe,EAAE;IAHS,CAA5BJ,CADFA,4BAMKhE,eAAe,CAAC4B,MAAhB5B,CAAuB+C,GAAvB/C,CAA2B,UAACgD,CAAD,EAAIC,CAAJ;MAAA,OAC5Be,QAAQ,CAACC,MAATD,CAAgBlB,SAAS,CAACG,CAAD,CAAzBe,EAA8B;QAC5BE,OAAO,EAAEjB,CAAC,KAAKN,KAANM,GAAc,CAAdA,GAAkB,CADC;QAE5BkB,QAAQ,EAAE/C,KAAK,CAACO,IAANP,IAAcM,QAAdN,GAAyB,MAAMkB,KAA/BlB,GAAuC,CAFrB;QAG5BgD,eAAe,EAAE,IAHW;QAI5BM,MAAM,EAAEnD;MAJoB,CAA9ByC,CAD4B;IAAA,CAA3BhE,CANLgE,sBAcKhE,eAAe,CAAC4B,MAAhB5B,CAAuB+C,GAAvB/C,CAA2B,UAACgD,CAAD,EAAIC,CAAJ;MAAA,OAC5Be,QAAQ,CAACC,MAATD,CAAgBd,iBAAiB,CAACD,CAAD,CAAjCe,EAAsC;QACpCE,OAAO,EAAEjB,CAAC,KAAKN,KAANM,GAAc,CAAdA,GAAkBA,CAAC,IAAIN,KAALM,GAAa,CAAbA,GAAiB,CAAC,CADT;QAEpCkB,QAAQ,EAAE/C,KAAK,CAACO,IAANP,IAAcM,QAAdN,GAAyB,MAAMkB,KAA/BlB,GAAuC,CAFb;QAGpCgD,eAAe,EAAE,IAHmB;QAIpCM,MAAM,EAAEnD;MAJ4B,CAAtCyC,CAD4B;IAAA,CAA3BhE,CAdLgE,IAsBGK,KAtBHL,CAsBS,UAAA,MAAA,EAAkB;MAAjB,IAAEW,QAAF,GAAY,MAAZ,CAAEA,QAAF;MAER7B,SAAS,CAACC,GAAVD,CAAc,UAAC8B,GAAD,EAAM3B,CAAN;QAAA,OAAY2B,GAAG,CAACJ,QAAJI,CAAa3B,CAAC,KAAKN,KAANM,GAAc,CAAdA,GAAkB,CAA/B2B,CAAZ;MAAA,CAAd9B;MAGAM,SAAS,CAACoB,QAAVpB,CAAmBT,KAAnBS;MACAC,UAAU,CAACmB,QAAXnB,CAAoB9E,gBAApB8E;;MAEA,IAAIsB,QAAJ,EAAc;QAGZxB,YAAY,CAAC0B,OAAb1B,CAAqB,UAAC2B,MAAD,EAAS7B,CAAT,EAAe;UAClC,IAAIA,CAAC,KAAKN,KAAV,EAAiB;YACfmC,MAAM,CAACN,QAAPM,CAAgB,CAAhBA;UACD,CAFD,MAEO;YACLA,MAAM,CAACN,QAAPM,CAAgB,CAAhBA;UACF;QACD,CAND3B;MAOF;IACD,CAzCDa;EA0CD,CA/CoB1G,EAgDrB,CACE8F,SADF,EAEE1B,QAFF,EAGE1B,eAAe,CAAC4B,MAHlB,EAIEuB,YAJF,EAKEE,UALF,EAMEf,KANF,EAOEQ,SAPF,EAQEI,iBARF,EASE3B,oBATF,EAUEH,KAVF,CAhDqB9D,CAAvB;EA8DAA,KAAK,CAACyH,SAANzH,CAAgB,YAAM;IAGpBiH,cAAc,CAACvE,eAAe,CAAC2C,KAAjB,CAAd4B;EAED,CALDjH,EAKG,EALHA;EAOAS,kBAAkB,CAAC;IACjBiH,MAAM,EAAElB,kBADS;IAEjBmB,MAAM,EAAEX;EAFS,CAAD,CAAlBvG;EAKA,IAAMmH,mBAAmB,GAAG5H,KAAK,CAAC6H,MAAN7H,EAA5B;EAEAA,KAAK,CAACyH,SAANzH,CAAgB,YAAM;IAEpB6F,YAAY,CAAC0B,OAAb1B,CAAqB,UAAC2B,MAAD,EAAS7B,CAAT,EAAe;MAAA,IAAA,qBAAA;;MAClC,IACEA,CAAC,KAAKjD,eAAe,CAAC2C,KAAtBM,IACAA,CAAC,MAAA,CAAA,qBAAA,GAAKiC,mBAAmB,CAACE,OAAzB,MAAgC,IAAhC,IAAgC,qBAAA,KAAA,KAAA,CAAhC,GAAgC,KAAA,CAAhC,GAAKF,qBAAAA,CAA6BvC,KAAlC,CAFH,EAGE;QACAmC,MAAM,CAACN,QAAPM,CAAgB,CAAhBA;MACF;IACD,CAPD3B;IASAoB,cAAc,CAACvE,eAAe,CAAC2C,KAAjB,CAAd4B;EACD,CAZDjH,EAYG,CAAC0C,eAAe,CAAC2C,KAAjB,EAAwB4B,cAAxB,EAAwCpB,YAAxC,CAZH7F;;EAcA,IAAM+H,cAAc,GAAI1C,SAAlB0C,cAAkB1C,CAAAA,KAAa,EAAK;IACxC,IAAM2C,KAAK,GAAG;MACZtG,KAAK,EAAEgB,eAAe,CAAC4B,MAAhB5B,CAAuB2C,KAAvB3C,CADK;MAEZuF,gBAAgB,EAAE,KAFN;MAGZC,cAAc,EAAE,0BAAM;QACpBF,KAAK,CAACC,gBAAND,GAAyB,IAAzBA;MACF;IALY,CAAd;IAQA9D,UAAU,KAAA,IAAVA,IAAAA,UAAU,KAAA,KAAA,CAAVA,GAAU,KAAA,CAAVA,GAAAA,UAAU,CAAG8D,KAAH,CAAV9D;;IAEA,IAAI8D,KAAK,CAACC,gBAAV,EAA4B;MAC1B;IACF;;IAEA,IAAI5C,KAAK,KAAK3C,eAAe,CAAC2C,KAA9B,EAAqC;MACnClB,aAAa,CAACkB,KAAD,CAAblB;IACF;EACD,CAlBD;;EAoBA,IAAMgE,MAAM,GAAGnI,KAAK,CAACyG,WAANzG,CACZsF,UAAAA,GAAW,EAAK;IACf,IAAMD,KAAK,GAAG3C,eAAe,CAAC4B,MAAhB5B,CAAuB0F,SAAvB1F,CACXhB,UAAAA,KAAK;MAAA,OAAKA,KAAK,CAAC4D,GAAN5D,KAAc4D,GAAnB;IAAA,CADM5C,CAAd;IAIAyB,aAAa,CAACkB,KAAD,CAAblB;EACD,CAPYnE,EAQb,CAAC0C,eAAe,CAAC4B,MAAjB,EAAyBH,aAAzB,CARanE,CAAf;EAWA,IAAQsE,MAAR,GAAmB5B,eAAnB,CAAQ4B,MAAR;EACA,IAAQ+D,MAAR,GAAkDvE,KAAlD,CAAQuE,MAAR;EAAA,IAAsBE,WAAtB,GAAkDzE,KAAlD,CAAgBwE,IAAhB;EAAA,IAAmCE,IAAnC,GAAkD1E,KAAlD,CAAmC0E,IAAnC;EAAA,IAAyCnE,IAAzC,GAAkDP,KAAlD,CAAyCO,IAAzC;;EAEA,aACEuE,UAAU,CAACC,OAAXD,CAAmBhF,QAAnBgF,KAAgC,EADlC;EAAA,IAAyBF,gBAAzB,UAAQD,eAAR;EAAA,8BAA2CE,SAA3C;EAAA,IAA2CA,SAA3C,iCAAuD,CAAvD;;EAGA,IAAMG,qBAAqB,GAAGJ,gBAAgB,GAC1CA,gBAD0C,GAE1CH,WAAW,IAAIC,IAAI,KAAK,UAAxBD,GACAnI,OAAO,CAACuI,SAAD,EAAYN,MAAM,KAAA,IAANA,IAAAA,MAAM,KAAA,KAAA,CAANA,GAAM,KAAA,CAANA,GAAAA,MAAM,CAAEU,OAApB,CADPR,GAEAF,MAAM,KAAA,IAANA,IAAAA,MAAM,KAAA,KAAA,CAANA,GAAM,KAAA,CAANA,GAAAA,MAAM,CAAEW,OAJZ;EAMA,IAAMC,8BAA8B,GAAG7E,QAAQ,GAC3C0B,SAAS,CAACoD,WAAVpD,CAAsB;IACpBqD,UAAU,EAAE7E,MAAM,CAACmB,GAAPnB,CAAW,UAACoB,CAAD,EAAIC,CAAJ;MAAA,OAAUA,CAAV;IAAA,CAAXrB,CADQ;IAIpB8E,WAAW,EAAE9E,MAAM,CAACmB,GAAPnB,CACV5C,UAAAA,KAAK;MAAA,OAAK0B,QAAQ,CAAC;QAAE1B,KAAAA,EAAAA;MAAF,CAAD,CAAR0B,IAAuB0F,qBAA5B;IAAA,CADKxE;EAJO,CAAtBwB,CAD2C,GAS3CgD,qBATJ;EAWA,IAAML,eAAe,GAAGpE,IAAI,GACxBqE,gBAAgB,IAAI5E,KAAK,CAACuE,MAANvE,CAAa6E,SAAb7E,CAAuBuF,MADnB,GAExBjF,QAAQ,GACR6E,8BADQ,GAERH,qBAJJ;EAMA,IAAMQ,MAAM,GACV,OAAOR,qBAAP,KAAiC,QAAjC,GACI,CAAC7I,KAAK,CAAC6I,qBAAD,CAAL7I,CAA6BsJ,OAA7BtJ,EADL,GAEI,IAHN;EAKA,IAAMuJ,SAAS,GAAGF,MAAM,GAAGhJ,KAAH,GAAWD,KAAnC;EAEA,IAAMoJ,eAAe,GACnB,OAAOhG,WAAP,KAAuB,WAAvB,GACIA,WADJ,GAEIY,IAAI,GACJP,KAAK,CAACuE,MAANvE,CAAa4F,oBADT,GAEJF,SALN;EAOA,IAAMG,iBAAiB,GACrB,OAAOjG,aAAP,KAAyB,WAAzB,GACIA,aADJ,GAEIW,IAAI,GACJP,KAAK,CAACuE,MAANvE,CAAa8F,gBADT,GAEJ3J,KAAK,CAACuJ,SAAD,CAALvJ,CAAiB4J,KAAjB5J,CAAuB,GAAvBA,EAA4B6J,GAA5B7J,GAAkC8J,MAAlC9J,EALN;EAOA,IAAM+J,UAAU,GAAG/J,KAAK,CAACwD,WAAW,IAAIgG,eAAhB,CAALxJ,CAChB4J,KADgB5J,CACV,IADUA,EAEhB6J,GAFgB7J,GAGhB8J,MAHgB9J,EAAnB;EAKA,IAAMgK,WAAW,GAAG3F,MAAM,CAACC,MAAPD,GAAgB,CAAhBA,GAAoBpD,aAApBoD,GAAoCnD,aAAxD;EACA,IAAM+I,cAAc,GAAGD,WAAW,GAAG3F,MAAM,CAACC,MAA5C;EAEA,IAAM4F,WAAW,GAAGC,IAAI,CAACC,GAALD,CAASpE,MAAM,CAACsE,KAAhBF,EAAuBF,cAAvBE,CAApB;EACA,IAAMG,QAAQ,GAAGJ,WAAW,GAAG7F,MAAM,CAACC,MAAtC;EAEA,IAAMiG,UAAU,GAAGxE,MAAM,CAACsE,KAAPtE,GAAe,CAAlC;EAEA,IAAMyE,MAAM,GAAG;IACb3F,IAAI,EAAA,CAAA,oBAAA,GAAEN,cAAc,KAAA,IAAdA,IAAAA,cAAc,KAAA,KAAA,CAAdA,GAAc,KAAA,CAAdA,GAAAA,cAAc,CAAEM,IAAlB,MAAsB,IAAtB,IAAsB,oBAAA,KAAA,KAAA,CAAtB,GAAsB,oBAAtB,GAA0BA,IADjB;IAEbC,KAAK,EAAA,CAAA,qBAAA,GAAEP,cAAc,KAAA,IAAdA,IAAAA,cAAc,KAAA,KAAA,CAAdA,GAAc,KAAA,CAAdA,GAAAA,cAAc,CAAEO,KAAlB,MAAuB,IAAvB,IAAuB,qBAAA,KAAA,KAAA,CAAvB,GAAuB,qBAAvB,GAA2BA,KAFnB;IAGbF,MAAM,EAAA,CAAA,qBAAA,GAAEL,cAAc,KAAA,IAAdA,IAAAA,cAAc,KAAA,KAAA,CAAdA,GAAc,KAAA,CAAdA,GAAAA,cAAc,CAAEK,MAAlB,MAAwB,IAAxB,IAAwB,qBAAA,KAAA,KAAA,CAAxB,GAAwB,qBAAxB,GAA4BA;EAHrB,CAAf;EAMA,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;IAAC,KAAK,EAAE,CAAC6F,MAAM,CAACC,SAAR,EAAmB/I,KAAnB,CAAR;IAAmC,MAAM,EAAE4B;EAA3C,CAAL,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;IAAC,KAAK,EAAE,CAACkH,MAAM,CAACE,OAAR,EAAiB;MAAEnC,eAAe,EAAEJ,MAAM,KAAA,IAANA,IAAAA,MAAM,KAAA,KAAA,CAANA,GAAM,KAAA,CAANA,GAAAA,MAAM,CAAEwC;IAA3B,CAAjB;EAAR,CAAL,EACGvG,MAAM,CAACmB,GAAPnB,CAAW,UAAC5C,KAAD,EAAQ2D,KAAR,EAAkB;IAC5B,IAAIV,OAAO,CAAC;MAAEjD,KAAAA,EAAAA;IAAF,CAAD,CAAPiD,KAAuB,KAAvBA,IAAgC,CAACuB,MAAM,CAACG,QAAPH,CAAgBxE,KAAK,CAAC4D,GAAtBY,CAArC,EAAiE;MAE/D,OAAO,IAAP;IACF;;IAEA,IAAM4E,OAAO,GAAGpI,eAAe,CAAC2C,KAAhB3C,KAA0B2C,KAA1C;IAEA,IAAM0F,OAAO,GAAGhH,qBAAqB,GACjC6B,iBAAiB,CAACP,KAAD,CAAjBO,CAAyBsD,WAAzBtD,CAAqC;MACnCuD,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CADuB;MAEnCC,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;IAFsB,CAArCxD,CADiC,GAKjCkF,OAAO,GACP,CADO,GAEP,CAPJ;IASA,IAAME,GAAG,GAAGjH,qBAAqB,GAC7B8B,YAAY,CAACR,KAAD,CAAZQ,CAAoBqD,WAApBrD,CAAgC;MAC9BsD,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADkB;MAE9BC,WAAW,EAAE,CAAC,CAAD,EAAI/H,YAAJ;IAFiB,CAAhCwE,CAD6B,GAK7BiF,OAAO,GACP,CADO,GAEPzJ,YAPJ;IASA,IAAMyD,IAAI,GACRd,kBAAkB,KAAK,UAAvBA,GACI4B,iBAAiB,CAACP,KAAD,CAAjBO,CAAyBsD,WAAzBtD,CAAqC;MACnCuD,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CADuB;MAEnCC,WAAW,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,EAAS,EAAT;IAFsB,CAArCxD,CADJ5B,GAKI,CANN;IAQA,IAAMiH,MAAM,GAAGH,OAAO,GAAG,CAAH,GAAO,CAA7B;IAEA,OACE,KAAA,CAAA,aAAA,CAAC,2BAAD,EAA4B;MAC1B,GAAG,EAAEpJ,KAAK,CAAC4D,GADe;MAE1B,aAAa,EAAEwF,OAAO,GAAG,MAAH,GAAY,MAFR;MAG1B,2BAA2B,EAAE,CAACA,OAHJ;MAI1B,yBAAyB,EACvBA,OAAO,GAAG,MAAH,GAAY,qBALK;MAO1B,KAAK,EAAEzF,KAPmB;MAQ1B,UAAU,EAAE0F,OARc;MAS1B,KAAK,EAAE,CAACnC,UAAU,CAACsC,YAAZ,EAA0B;QAAED,MAAAA,EAAAA;MAAF,CAA1B,CATmB;MAU1B,WAAW,EAAE,KAVa;MAW1B,qBAAqB,EAGnB3J,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GAAwBoB,eAAe,CAAC2C,KAAhB3C,KAA0B2C,KAAlD/D,GAA0D;IAdlC,CAA5B,EAiBE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc,QAAA,CAAA,EAAA,EACPA,QAAQ,CAACC,EAATD,KAAgB,SAAhBA,IAA6B;MAChC6J,8BAA8B,EAAEpH;IADA,CADtB,EAGX;MACD,8BAA8B,EAAEA,qBAD/B;MAED,KAAK,EAAE,CACL2G,MAAM,CAACE,OADF,EAEL;QACEG,OAAO,EAAEA,OADX;QAEEK,SAAS,EAAE,CAAC;UAAEC,UAAU,EAAEvG;QAAd,CAAD,EAAuB;UAAEwG,UAAU,EAAEN;QAAd,CAAvB;MAFb,CAFK;IAFN,CAHW,CAAd,EAaGrI,WAAW,CAAC;MAAEjB,KAAK,EAALA,KAAF;MAASyG,MAAAA,EAAAA;IAAT,CAAD,CAbd,CAjBF,CADF;EAmCD,CAvEA7D,CADH,CADF,EA2EE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,QAAA,CAAA,EAAA,EACDR,KAAK,CAACO,IAANP,IAAc;IAAE6E,SAAS,EAAE;EAAb,CADb,EAC6B;IACnC,KAAK,EACH,CACE,CAAC7E,KAAK,CAACO,IAAP,IAAe;MAAEsE,SAAS,EAAE;IAAb,CADjB,EAEE+B,MAAM,CAACa,GAFT,EAGE5H,0BAA0B,GACtB;MAEEyH,SAAS,EAAE,CACT;QACEE,UAAU,EAAE/F,WAAW,CAAC2D,WAAZ3D,CAAwB;UAClC4D,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADsB;UAElCC,WAAW,EAAE,CAACpD,MAAM,CAACwF,MAAR,EAAgB,CAAhB;QAFqB,CAAxBjG;MADd,CADS,CAFb;MAYEkG,QAAQ,EAAEnF,eAAe,GAAG,UAAH,GAAgB;IAZ3C,CADsB,GAetB,IAlBN,EAmBE1C,QAnBF,CAFiC;IAwBnC,aAAa,EACXoC,MAAM,CAAC0F,QAAP1F,GACIrC,0BAA0B,IAAI2C,eAA9B3C,GACE,MADFA,GAEE,MAHNqC,GAII,MA7B6B;IA+BnC,QAAQ,EAAEC;EA/ByB,CAD7B,CAAR,EAkCE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;IACZ,KAAK,EAAE,CAACyE,MAAM,CAACiB,UAAR,EAAoB;MAAElD,eAAAA,EAAAA;IAAF,CAApB,CADK;IAEZ,MAAM,EAAKjF,MAAL;EAFM,CAAd,EAIE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;IACH,KAAK,EAAE,CACLkH,MAAM,CAACkB,KADF,EAEL;MACEC,YAAY,EAAEpB,MAAM,CAAC5F,MADvB;MAEEiH,gBAAgB,EAAE1B,IAAI,CAAC2B,GAAL3B,CAASK,MAAM,CAAC3F,IAAhBsF,EAAsBK,MAAM,CAAC1F,KAA7BqF;IAFpB,CAFK,EAML1F,OAAO,IAAI;MACTsH,QAAQ,EAAE9B;IADD,CANN,CADJ;IAWH,iBAAiB,EAAE;EAXhB,CAAL,EAaG9F,QAAQ,GACP,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;IACZ,aAAa,EAAC,MADF;IAEZ,KAAK,EAAE,CACLsG,MAAM,CAACuB,MADF,EAEL;MAGEjB,GAAG,EAAE,CAAC5J,UAAU,GAAGoJ,UAAd,IAA4B,CAHnC;MAIE1F,IAAI,EACFyF,QAAQ,IAAI7H,eAAe,CAAC2C,KAAhB3C,GAAwB,GAA5B,CAAR6H,GAA2CC,UAAU,GAAG,CAL5D;MAMEgB,MAAM,EAAEhB,UANV;MAOEF,KAAK,EAAEE,UAPT;MAQE0B,YAAY,EAAE1B,UAAU,GAAG,CAR7B;MASE/B,eAAe,EAAErF,QAAQ,CAAC;QACxB1B,KAAK,EAAE4C,MAAM,CAAC5B,eAAe,CAAC2C,KAAjB;MADW,CAAD,CAT3B;MAYE+F,SAAS,EAAE,CACT;QAEEpG,KAAK,EAAEe,UAAU,CAACmD,WAAXnD,CAAuB;UAC5BoD,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADgB;UAE5BC,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;QAFe,CAAvBrD;MAFT,CADS,CAZb;MAqBEgF,OAAO,EAAEhF,UAAU,CAACmD,WAAXnD,CAAuB;QAC9BoD,UAAU,EAAE,CAAC,CAAD,EAAIlI,gBAAJ,EAAsB,GAAtB,EAA2B,CAA3B,CADkB;QAE9BmI,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;MAFiB,CAAvBrD;IArBX,CAFK;EAFK,CAAd,CADO,GAiCL,IA9CN,EA+CGzB,MAAM,CAACmB,GAAPnB,CAAW,UAAC5C,KAAD,EAAQ2D,KAAR,EAAkB;IAC5B,IAAMyF,OAAO,GAAGpI,eAAe,CAAC2C,KAAhB3C,KAA0B2C,KAA1C;IACA,IAAM8G,MAAM,GAAG3G,SAAS,CAACH,KAAD,CAAxB;IAGA,IAAML,KAAK,GACTnB,OAAO,IAAIO,QAAXP,GACIsI,MAAM,CAACjD,WAAPiD,CAAmB;MACjBhD,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADK;MAEjBC,WAAW,EAAE,CAAC,GAAD,EAAM,CAAN;IAFI,CAAnB+C,CADJtI,GAKI,CANN;IASA,IAAMyH,UAAU,GAAGzH,OAAO,GACtBO,QAAQ,GACN+H,MAAM,CAACjD,WAAPiD,CAAmB;MACjBhD,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADK;MAEjBC,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;IAFI,CAAnB+C,CADM,GAKN,CANoB,GAOtB,CAPJ;IAYA,IAAMC,aAAa,GAAGD,MAAtB;IACA,IAAME,eAAe,GAAGF,MAAM,CAACjD,WAAPiD,CAAmB;MACzChD,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD6B;MAEzCC,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;IAF4B,CAAnB+C,CAAxB;IAKA,IAAMG,eAAe,GAAGxB,OAAO,GAAG,CAAH,GAAO,CAAtC;IACA,IAAMyB,iBAAiB,GAAGnI,QAAQ,GAC9BiI,eAD8B,GAE9BvB,OAAO,GACP,CADO,GAEP,CAJJ;IAOA,IAAM0B,YAAY,GAAG1B,OAAO,GACxBqB,MAAM,CAACjD,WAAPiD,CAAmB;MACjBhD,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADK;MAEjBC,WAAW,EAAE,CAAC,GAAD,EAAM,CAAN;IAFI,CAAnB+C,CADwB,GAKxB,CALJ;IAOA,IAAMhJ,KAAK,GAAGD,QAAQ,CAAC;MAAExB,KAAAA,EAAAA;IAAF,CAAD,CAAtB;IAEA,IAAM+K,gBAAgB,GAAG,CAACpI,IAAD,GACrBoF,eADqB,GAErBqB,OAAO,GACPhH,KAAK,CAACuE,MAANvE,CAAa4I,SADN,GAEP5I,KAAK,CAACuE,MAANvE,CAAa8F,gBAJjB;IAMA,IAAM+C,kBAAkB,GAAG,CAACtI,IAAD,GACvBsF,iBADuB,GAEvBmB,OAAO,GACPhH,KAAK,CAACuE,MAANvE,CAAa4I,SADN,GAEP5I,KAAK,CAACuE,MAANvE,CAAa8F,gBAJjB;IAMA,IAAMgD,UAAU,GAAG;MACjB5B,GAAG,EAAE,CAAC3G,IAAD,GAAQ,CAAC,CAAT,GAAa,OAAOlB,KAAP,KAAiB,SAAjB,GAA6B,CAA7B,GAAiC,CADlC;MAEjB4B,KAAK,EACH,CAAC5B,KAAK,IAAI,IAATA,IAAiB,OAAOA,KAAP,KAAiB,SAAlCA,GACG0J,MAAM,CAAC1J,KAAD,CAAN0J,CAActI,MAAdsI,GAAuB,CAAC,CAD3B1J,GAEG,CAFJ,KAEU,CAACkB,IAAD,GAAQ,CAAR,GAAY,CAFtB;IAHe,CAAnB;IAQA,IAAMyI,YAAY,GAAGzI,IAAI,IAAID,QAARC,IAAoBR,OAAzC;IAEA,IAAMkJ,IAAI,GAAG1I,IAAI,GAAGP,KAAK,CAACkJ,KAANlJ,CAAYmJ,WAAf,GAA6B,EAA9C;IAEA,OAAOnK,eAAe,CAAC;MACrBwC,GAAG,EAAE5D,KAAK,CAAC4D,GADU;MAErB5D,KAAK,EAALA,KAFqB;MAGrBI,UAAU,EAAE,IAHS;MAIrBC,QAAQ,EAAE,IAJW;MAKrBC,WAAW,EAAEqC,IAAI,GAAG,aAAH,GAAmB2F,UALf;MAMrBkD,OAAO,EAAE;QAAA,OAAMnF,cAAc,CAAC1C,KAAD,CAApB;MAAA,CANY;MAOrB7B,MAAM,EAAED,SAAS,CAAC;QAAE7B,KAAAA,EAAAA;MAAF,CAAD,CAPI;MAQrB4B,kBAAkB,EAAED,qBAAqB,CAAC;QAAE3B,KAAAA,EAAAA;MAAF,CAAD,CARpB;MASrByL,iBAAiB,EAAE7L,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GAAwB,QAAxBA,GAAmC,KATjC;MAUrB8L,kBAAkB,EAAE;QAAEC,QAAQ,EAAEvC;MAAZ,CAVC;MAWrBlJ,KAAK,EAAE,CAAC8I,MAAM,CAAC4C,IAAR,EAAcjJ,IAAI,IAAIqG,MAAM,CAAC6C,MAA7B,CAXc;MAYrB1L,QAAQ,EACN,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;QACH,aAAa,EAAC,MADX;QAEH,KAAK,EACHwC,IAAI,KACHR,OAAO,GACJ6G,MAAM,CAAC8C,oBADH,GAEJ9C,MAAM,CAAC+C,kBAHP;MAHH,CAAL,EASE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;QACZ,KAAK,EAAE,CACL/C,MAAM,CAACgD,aADF,EAELrJ,IAAI,IAAIqG,MAAM,CAACiD,eAFV,EAGL,CAAC,CAACtJ,IAAD,IAASyI,YAAV,KAA2B;UACzB1B,SAAS,EAAE,CAAC;YAAEE,UAAAA,EAAAA;UAAF,CAAD;QADc,CAHtB;MADK,CAAd,EASGjH,IAAI,IAAIyG,OAARzG,IACC,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;QACZ,KAAK,EAAE,CACLqG,MAAM,CAACkD,OADF,EAEL;UACExC,SAAS,EAAE,CACT;YACEyC,MAAM,EAAErB;UADV,CADS,CADb;UAME/D,eAAe,EAAE3E,KAAK,CAACuE,MAANvE,CAAagK;QANhC,CAFK;MADK,CAAd,CAVJ,EAwBE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;QACZ,KAAK,EAAE,CACLpD,MAAM,CAACqD,WADF,EAEL1J,IAAI,IAAIqG,MAAM,CAACsD,aAFV,EAGL;UAAEjD,OAAO,EAAE1G,IAAI,GAAGiI,eAAH,GAAqBF;QAApC,CAHK;MADK,CAAd,EAOGxJ,UAAU,GACTA,UAAU,CAAC;QACTlB,KAAK,EAALA,KADS;QAEToJ,OAAO,EAAE,IAFA;QAGT7K,KAAK,EAAEwJ;MAHE,CAAD,CADD,GAOT,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;QACH,MAAM,EAAE/H,KAAK,CAACuM,WADX;QAEH,KAAK,EAAExE,eAFJ;QAGH,IAAI,EAAE;MAHH,CAAL,CAdJ,CAxBF,EA6CE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;QACZ,KAAK,EAAE,CACLiB,MAAM,CAACqD,WADF,EAEL1J,IAAI,IAAIqG,MAAM,CAACsD,aAFV,EAGL;UACEjD,OAAO,EAAE1G,IAAI,GAAGkI,iBAAH,GAAuBF;QADtC,CAHK;MADK,CAAd,EASGzJ,UAAU,GACTA,UAAU,CAAC;QACTlB,KAAK,EAALA,KADS;QAEToJ,OAAO,EAAE,KAFA;QAGT7K,KAAK,EAAE0J;MAHE,CAAD,CADD,GAOT,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;QACH,MAAM,EACJ7F,KAAK,CAACO,IAANP,IAAcpC,KAAK,CAACwM,aAANxM,KAAwBU,SAAtC0B,GACIpC,KAAK,CAACwM,aADVpK,GAEKpC,KAAK,CAACuM,WAJV;QAMH,KAAK,EAAEtE,iBANJ;QAOH,IAAI,EAAE;MAPH,CAAL,CAhBJ,CA7CF,EAwEE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;QAAC,KAAK,EAAE,CAACe,MAAM,CAACyD,cAAR,EAAwBvB,UAAxB;MAAR,CAAL,EACG,OAAOzJ,KAAP,KAAiB,SAAjB,GACC,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;QAAC,OAAO,EAAEA,KAAV;QAAiB,IAAI,EAAEkB,IAAI,GAAG,CAAH,GAAO;MAAlC,CAAN,CADD,GAGC,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;QAAC,OAAO,EAAElB,KAAK,IAAI,IAAnB;QAAyB,IAAI,EAAE;MAA/B,CAAN,EACGA,KADH,CAJJ,CAxEF,CATF,EA2FGU,OAAO,GACN,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;QACZ,KAAK,EAAE,CACL6G,MAAM,CAAC0D,cADF,EAEL,CAAC/J,IAAD,IAAS;UAAE+G,SAAS,EAAE,CAAC;YAAEpG,KAAAA,EAAAA;UAAF,CAAD;QAAb,CAFJ;MADK,CAAd,EAME,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;QACZ,KAAK,EAAE,CACL0F,MAAM,CAAC2D,YADF,EAEL,CAAC,CAAChK,IAAD,IAASyI,YAAV,KAA2B;UACzB/B,OAAO,EAAEqB;QADgB,CAFtB;MADK,CAAd,EAQGvJ,WAAW,GACVA,WAAW,CAAC;QACVnB,KAAK,EAALA,KADU;QAEVoJ,OAAO,EAAE,IAFC;QAGV7K,KAAK,EAAEwM;MAHG,CAAD,CADD,GAOV,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;QACH,qBAAqB,EAAEhI,0BADpB;QAEH,OAAO,EAAC,aAFL;QAGH,KAAK,EAAE,CACLiG,MAAM,CAAC4D,KADF;UAGHrO,KAAK,EAAEwM;QAHJ,GAIAM,IAJA;MAHJ,CAAL,EAWG/J,YAAY,CAAC;QAAEtB,KAAAA,EAAAA;MAAF,CAAD,CAXf,CAfJ,CANF,EAoCG0C,QAAQ,GAAG,IAAH,GACP,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;QACZ,KAAK,EAAE,CACLsG,MAAM,CAAC2D,YADF,EAEL;UAAEtD,OAAO,EAAEsB;QAAX,CAFK;MADK,CAAd,EAMGxJ,WAAW,GACVA,WAAW,CAAC;QACVnB,KAAK,EAALA,KADU;QAEVoJ,OAAO,EAAE,KAFC;QAGV7K,KAAK,EAAE0M;MAHG,CAAD,CADD,GAOV,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;QACH,qBAAqB,EACnBlI,0BAFC;QAIH,OAAO,EAAC,aAJL;QAKH,UAAU,EAAE,KALT;QAMH,KAAK,EAAE,CACLiG,MAAM,CAAC4D,KADF;UAGHrO,KAAK,EAAE0M;QAHJ,GAIAI,IAJA;MANJ,CAAL,EAcG/J,YAAY,CAAC;QAAEtB,KAAAA,EAAAA;MAAF,CAAD,CAdf,CAbJ,CArCJ,CADM,GAwEN,CAAC2C,IAAD,IAAS,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;QAAC,KAAK,EAAEqG,MAAM,CAAC0D;MAAf,CAAL,CAnKb;IAbmB,CAAD,CAAtB;EAqLD,CA9PA9J,CA/CH,CAJF,CAlCF,CA3EF,CADF;AAqaD,CAtuBD;;AA6uBA7B,gBAAgB,CAAC8L,QAAjB9L,GAA6B+L,UAAAA,MAK5B,EAAK;EACJ,OAAO,UAAA,MAAA,EAAA;IAAA,IACL9M,KADK,GAMN,MANM,CACLA,KADK;IAAA,IAELyG,MAFK,GAMN,MANM,CAELA,MAFK;IAMN,OACC,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;MACb,GAAG,EAAEzG,KAAK,CAAC4D,GADE;MAEb,SAAS,EAAEkJ,MAAM,CAAC9M,KAAK,CAAC4D,GAAN5D,GAAYA,KAAK,CAAC4D,GAAlB5D,GAAwB,EAAzB,CAFJ;MAGb,KAAK,EAAEA,KAHM;MAIb,MAAM,EAAEyG;IAJK,CAAf,CADD;EAOA,CAbD;AAcD,CApBD1F;;AAsBA,eAAetC,iBAAiB,CAACsC,gBAAD,CAAhC;AAEA,IAAMiI,MAAM,GAAG9B,UAAU,CAAC6F,MAAX7F,CAAkB;EAC/B+B,SAAS,EAAE;IACT+D,IAAI,EAAE,CADG;IAETC,QAAQ,EAAE;EAFD,CADoB;EAK/B/D,OAAO,EAAE;IACP8D,IAAI,EAAE;EADC,CALsB;EAQ/BnD,GAAG,EAAE;IACHzG,IAAI,EAAE,CADH;IAEHC,KAAK,EAAE,CAFJ;IAGHF,MAAM,EAAE;EAHL,CAR0B;EAa/B8G,UAAU,EAAE;IACViD,UAAU,EAAE,QADF;IAEVD,QAAQ,EAAE;EAFA,CAbmB;EAiB/B/C,KAAK;IACHiD,aAAa,EAAE;EADZ,GAECvN,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GACA;IACEgJ,KAAK,EAAE;EADT,CADAhJ,GAIA,IAND,CAjB0B;EAyB/BgM,IAAI,EAAE;IACJoB,IAAI,EAAE,CADF;IAIJI,eAAe,EAAE;EAJb,CAzByB;EA+B/BvB,MAAM,EAAE;IACNuB,eAAe,EAAE;EADX,CA/BuB;EAkC/B7C,MAAM,EAAE;IACNR,QAAQ,EAAE;EADJ,CAlCuB;EAqC/BiC,aAAa,EAAE;IACblC,MAAM,EAAE,EADK;IAEblB,KAAK,EAAE,EAFM;IAGbyE,SAAS,EAAE,CAHE;IAIbjD,gBAAgB,EAAE,EAJL;IAKbkD,SAAS,EAAE;EALE,CArCgB;EA4C/BrB,eAAe,EAAE;IACfnC,MAAM,EAAE,EADO;IAEflB,KAAK,EAAE,EAFQ;IAGfuB,YAAY,EAAE,CAHC;IAIfkD,SAAS,EAAE,CAJI;IAKfE,cAAc,EAAE;EALD,CA5Cc;EAmD/BlB,WAAW,kCACNnF,UAAU,CAACsG,kBADL;IAETN,UAAU,EAAE;EAFH,EAnDoB;EAuD/BZ,aAAa,EAAE;IACbhD,GAAG,EAAE;EADQ,CAvDgB;EA0D/BoD,cAAc,EAAE;IACd5C,MAAM,EAAE,EADM;IAEd2D,aAAa,EAAE;EAFD,CA1De;EA8D/Bd,YAAY,oBACPzF,UAAU,CAACsG,kBADJ,CA9DmB;EAkE/BZ,KAAK;IACHc,QAAQ,EAAE,EADP;IAEH5D,MAAM,EAAEpK,UAFL;IAGHiO,SAAS,EAAE,QAHR;IAIH5G,eAAe,EAAE;EAJd,GAKCnH,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GACA;IACEgO,UAAU,EAAE,QADd;IAEEN,SAAS,EAAE;EAFb,CADA1N,GAKA,IAVD,CAlE0B;EA8E/B6M,cAAc,EAAE;IACd1C,QAAQ,EAAE,UADI;IAEd3G,IAAI,EAAE;EAFQ,CA9Ee;EAkF/B0I,oBAAoB,EAAE;IACpB+B,UAAU,EAAE,EADQ;IAEpBJ,aAAa,EAAE;EAFK,CAlFS;EAsF/B1B,kBAAkB,EAAE;IAClBjC,MAAM,EAAE,EADU;IAElByD,cAAc,EAAE,QAFE;IAGlBL,UAAU,EAAE;EAHM,CAtFW;EA2F/BhB,OAAO,EAAE;IACPtD,KAAK,EAAE9I,aADA;IAEPgK,MAAM,EAAEhK,aAAa,GAAG,CAFjB;IAGP0K,YAAY,EAAE1K,aAAa,GAAG,CAHvB;IAIPwN,SAAS,EAAE;EAJJ;AA3FsB,CAAlBpG,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  EasingFunction,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { withInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\nimport useAnimatedValue from '../../utils/useAnimatedValue';\nimport useAnimatedValueArray from '../../utils/useAnimatedValueArray';\nimport useIsKeyboardShown from '../../utils/useIsKeyboardShown';\nimport useLayout from '../../utils/useLayout';\nimport Badge from '../Badge';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport BottomNavigationRouteScreen from './BottomNavigationRouteScreen';\n\ntype Route = {\n  key: string;\n  title?: string;\n  focusedIcon?: IconSource;\n  unfocusedIcon?: IconSource;\n  badge?: string | number | boolean;\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n  lazy?: boolean;\n};\n\ntype NavigationState = {\n  index: number;\n  routes: Route[];\n};\n\ntype TabPressEvent = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\ntype TouchableProps = TouchableWithoutFeedbackProps & {\n  key: string;\n  route: Route;\n  children: React.ReactNode;\n  borderless?: boolean;\n  centered?: boolean;\n  rippleColor?: string;\n};\n\nexport type Props = {\n  /**\n   * Whether the shifting style is used, the active tab icon shifts up to show the label and the inactive tabs won't have a label.\n   *\n   * By default, this is `false` with theme version 3 and `true` when you have more than 3 tabs.\n   * Pass `shifting={false}` to explicitly disable this animation, or `shifting={true}` to always use this animation.\n   * Note that you need at least 2 tabs be able to run this animation.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * Whether tabs should be spread across the entire width.\n   */\n  compact?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number representing the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `focusedIcon`:  icon to use as the focused tab icon, can be a string, an image source or a react component @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * - `unfocusedIcon`:  icon to use as the unfocused tab icon, can be a string, an image source or a react component @supported Available in v5.x with theme version 3\n   * - `color`: color to use as background color for shifting bottom navigation @deprecated Deprecated in v5.x\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Favorites', focusedIcon: 'heart', unfocusedIcon: 'heart-outline'},\n   *     { key: 'albums', title: 'Albums', focusedIcon: 'album' },\n   *     { key: 'recents', title: 'Recents', focusedIcon: 'history' },\n   *     { key: 'notifications', title: 'Notifications', focusedIcon: 'bell', unfocusedIcon: 'bell-outline' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation` is a controlled component, which means the `index` needs to be updated via the `onIndexChange` callback.\n   */\n  navigationState: NavigationState;\n  /**\n   * Callback which is called on tab change, receives the index of the new tab as argument.\n   * The navigation state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onIndexChange: (index: number) => void;\n  /**\n   * Callback which returns a react element to render as the page for the tab. Receives an object containing the route as the argument:\n   *\n   * ```js\n   * renderScene = ({ route, jumpTo }) => {\n   *   switch (route.key) {\n   *     case 'music':\n   *       return <MusicRoute jumpTo={jumpTo} />;\n   *     case 'albums':\n   *       return <AlbumsRoute jumpTo={jumpTo} />;\n   *   }\n   * }\n   * ```\n   *\n   * Pages are lazily rendered, which means that a page will be rendered the first time you navigate to it.\n   * After initial render, all the pages stay rendered to preserve their state.\n   *\n   * You need to make sure that your individual routes implement a `shouldComponentUpdate` to improve the performance.\n   * To make it easier to specify the components, you can use the `SceneMap` helper:\n   *\n   * ```js\n   * renderScene = BottomNavigation.SceneMap({\n   *   music: MusicRoute,\n   *   albums: AlbumsRoute,\n   * });\n   * ```\n   *\n   * Specifying the components this way is easier and takes care of implementing a `shouldComponentUpdate` method.\n   * Each component will receive the current route and a `jumpTo` method as it's props.\n   * The `jumpTo` method can be used to navigate to other tabs programmatically:\n   *\n   * ```js\n   * this.props.jumpTo('albums')\n   * ```\n   */\n  renderScene: (props: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => React.ReactNode | null;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to be used as the touchable for the tab item.\n   * Renders a `TouchableRipple` on Android and `TouchableWithoutFeedback` with `View` on iOS.\n   */\n  renderTouchable?: (props: TouchableProps) => React.ReactNode;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get lazy for the current screen. Uses true by default.\n   */\n  getLazy?: (props: { route: Route }) => boolean | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n   */\n  onTabPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * Whether animation is enabled for scenes transitions in `shifting` mode.\n   * By default, the scenes cross-fade during tab change when `shifting` is enabled.\n   * Specify `sceneAnimationEnabled` as `false` to disable the animation.\n   */\n  sceneAnimationEnabled?: boolean;\n  /**\n   * The scene animation effect. Specify `'shifting'` for a different effect.\n   * By default, 'opacity' will be used.\n   */\n  sceneAnimationType?: 'opacity' | 'shifting';\n  /**\n   * The scene animation Easing.\n   */\n  sceneAnimationEasing?: EasingFunction | undefined;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Safe area insets for the tab bar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   * The bottom insets for iOS is added by default. You can override the behavior with this option.\n   */\n  safeAreaInsets?: {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n  };\n  /**\n   * Style for the bottom navigation bar.  You can pass a custom background color here:\n   *\n   * ```js\n   * barStyle={{ backgroundColor: '#694fad' }}\n   * ```\n   */\n  barStyle?: StyleProp<ViewStyle>;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst FAR_FAR_AWAY = Platform.OS === 'web' ? 0 : 9999;\nconst OUTLINE_WIDTH = 64;\n\nconst Touchable = ({\n  route: _0,\n  style,\n  children,\n  borderless,\n  centered,\n  rippleColor,\n  ...rest\n}: TouchableProps) =>\n  TouchableRipple.supported ? (\n    <TouchableRipple\n      {...rest}\n      disabled={rest.disabled || undefined}\n      borderless={borderless}\n      centered={centered}\n      rippleColor={rippleColor}\n      style={style}\n    >\n      {children}\n    </TouchableRipple>\n  ) : (\n    <TouchableWithoutFeedback {...rest}>\n      <View style={style}>{children}</View>\n    </TouchableWithoutFeedback>\n  );\n\nconst SceneComponent = React.memo(({ component, ...rest }: any) =>\n  React.createElement(component, rest)\n);\n\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tabs](https://github.com/react-navigation/react-navigation/tree/main/packages/material-bottom-tabs) and consult [createMaterialBottomTabNavigator](https://reactnavigation.org/docs/material-bottom-tab-navigator/) documentation.\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark InternalTheme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * const NotificationsRoute = () => <Text>Notifications</Text>;\n *\n * const MyComponent = () => {\n *   const [index, setIndex] = React.useState(0);\n *   const [routes] = React.useState([\n *     { key: 'music', title: 'Favorites', focusedIcon: 'heart', unfocusedIcon: 'heart-outline'},\n *     { key: 'albums', title: 'Albums', focusedIcon: 'album' },\n *     { key: 'recents', title: 'Recents', focusedIcon: 'history' },\n *     { key: 'notifications', title: 'Notifications', focusedIcon: 'bell', unfocusedIcon: 'bell-outline' },\n *   ]);\n *\n *   const renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *     notifications: NotificationsRoute,\n *   });\n *\n *   return (\n *     <BottomNavigation\n *       navigationState={{ index, routes }}\n *       onIndexChange={setIndex}\n *       renderScene={renderScene}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst BottomNavigation = ({\n  navigationState,\n  renderScene,\n  renderIcon,\n  renderLabel,\n  renderTouchable = (props: TouchableProps) => <Touchable {...props} />,\n  getLabelText = ({ route }: { route: Route }) => route.title,\n  getBadge = ({ route }: { route: Route }) => route.badge,\n  getColor = ({ route }: { route: Route }) => route.color,\n  getAccessibilityLabel = ({ route }: { route: Route }) =>\n    route.accessibilityLabel,\n  getTestID = ({ route }: { route: Route }) => route.testID,\n  activeColor,\n  inactiveColor,\n  keyboardHidesNavigationBar = Platform.OS === 'android',\n  barStyle,\n  labeled = true,\n  style,\n  theme,\n  sceneAnimationEnabled = false,\n  sceneAnimationType = 'opacity',\n  sceneAnimationEasing,\n  onTabPress,\n  onIndexChange,\n  shifting = theme.isV3 ? false : navigationState.routes.length > 3,\n  safeAreaInsets,\n  labelMaxFontSizeMultiplier = 1,\n  compact = !theme.isV3,\n  testID = 'bottom-navigation',\n  getLazy = ({ route }: { route: Route }) => route.lazy,\n}: Props) => {\n  const { bottom, left, right } = useSafeAreaInsets();\n  const { scale } = theme.animation;\n\n  if (shifting && navigationState.routes.length < 2) {\n    shifting = false;\n\n    console.warn(\n      'BottomNavigation needs at least 2 tabs to run shifting animation'\n    );\n  }\n\n  const focusedKey = navigationState.routes[navigationState.index].key;\n\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  const visibleAnim = useAnimatedValue(1);\n\n  /**\n   * Active state of individual tab items, active state is 1 and inactive state is 0.\n   */\n  const tabsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // focused === 1, unfocused === 0\n      (_, i) => (i === navigationState.index ? 1 : 0)\n    )\n  );\n\n  /**\n   * Active state of individual tab item positions:\n   * -1 if they're before the active tab, 0 if they're active, 1 if they're after the active tab\n   */\n  const tabsPositionAnims = useAnimatedValueArray(\n    navigationState.routes.map((_, i) =>\n      i === navigationState.index ? 0 : i >= navigationState.index ? 1 : -1\n    )\n  );\n\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecessary re-renders.\n   */\n  const offsetsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // offscreen === 1, normal === 0\n      (_, i) => (i === navigationState.index ? 0 : 1)\n    )\n  );\n\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * We don't use the color as an animated value directly, because `setValue` seems to be buggy with colors?.\n   */\n  const indexAnim = useAnimatedValue(navigationState.index);\n\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  const rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  const [layout, onLayout] = useLayout();\n\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  const [loaded, setLoaded] = React.useState<string[]>([focusedKey]);\n\n  if (!loaded.includes(focusedKey)) {\n    // Set the current tab to be loaded if it was not loaded before\n    setLoaded((loaded) => [...loaded, focusedKey]);\n  }\n\n  /**\n   * Track whether the keyboard is visible to show and hide the navigation bar.\n   */\n  const [keyboardVisible, setKeyboardVisible] = React.useState(false);\n\n  const handleKeyboardShow = React.useCallback(() => {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [scale, visibleAnim]);\n\n  const handleKeyboardHide = React.useCallback(() => {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(() => {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n\n  const animateToIndex = React.useCallback(\n    (index: number) => {\n      // Reset the ripple to avoid glitch if it's currently animating\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n      Animated.parallel([\n        Animated.timing(rippleAnim, {\n          toValue: 1,\n          duration: theme.isV3 || shifting ? 400 * scale : 0,\n          useNativeDriver: true,\n        }),\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsAnims[i], {\n            toValue: i === index ? 1 : 0,\n            duration: theme.isV3 || shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n            easing: sceneAnimationEasing,\n          })\n        ),\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsPositionAnims[i], {\n            toValue: i === index ? 0 : i >= index ? 1 : -1,\n            duration: theme.isV3 || shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n            easing: sceneAnimationEasing,\n          })\n        ),\n      ]).start(({ finished }) => {\n        // Workaround a bug in native animations where this is reset after first animation\n        tabsAnims.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n        // Update the index to change bar's background color and then hide the ripple\n        indexAnim.setValue(index);\n        rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n        if (finished) {\n          // Position all inactive screens offscreen to save memory usage\n          // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n          offsetsAnims.forEach((offset, i) => {\n            if (i === index) {\n              offset.setValue(0);\n            } else {\n              offset.setValue(1);\n            }\n          });\n        }\n      });\n    },\n    [\n      indexAnim,\n      shifting,\n      navigationState.routes,\n      offsetsAnims,\n      rippleAnim,\n      scale,\n      tabsAnims,\n      tabsPositionAnims,\n      sceneAnimationEasing,\n      theme,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    animateToIndex(navigationState.index);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide,\n  });\n\n  const prevNavigationState = React.useRef<NavigationState>();\n\n  React.useEffect(() => {\n    // Reset offsets of previous and current tabs before animation\n    offsetsAnims.forEach((offset, i) => {\n      if (\n        i === navigationState.index ||\n        i === prevNavigationState.current?.index\n      ) {\n        offset.setValue(0);\n      }\n    });\n\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex, offsetsAnims]);\n\n  const handleTabPress = (index: number) => {\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      },\n    };\n\n    onTabPress?.(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationState.routes.findIndex(\n        (route) => route.key === key\n      );\n\n      onIndexChange(index);\n    },\n    [navigationState.routes, onIndexChange]\n  );\n\n  const { routes } = navigationState;\n  const { colors, dark: isDarkTheme, mode, isV3 } = theme;\n\n  const { backgroundColor: customBackground, elevation = 4 }: ViewStyle =\n    StyleSheet.flatten(barStyle) || {};\n\n  const approxBackgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors?.surface)\n    : colors?.primary;\n\n  const v2BackgroundColorInterpolation = shifting\n    ? indexAnim.interpolate({\n        inputRange: routes.map((_, i) => i),\n        // FIXME: does outputRange support ColorValue or just strings?\n        // @ts-expect-error\n        outputRange: routes.map(\n          (route) => getColor({ route }) || approxBackgroundColor\n        ),\n      })\n    : approxBackgroundColor;\n\n  const backgroundColor = isV3\n    ? customBackground || theme.colors.elevation.level2\n    : shifting\n    ? v2BackgroundColorInterpolation\n    : approxBackgroundColor;\n\n  const isDark =\n    typeof approxBackgroundColor === 'string'\n      ? !color(approxBackgroundColor).isLight()\n      : true;\n\n  const textColor = isDark ? white : black;\n\n  const activeTintColor =\n    typeof activeColor !== 'undefined'\n      ? activeColor\n      : isV3\n      ? theme.colors.onSecondaryContainer\n      : textColor;\n\n  const inactiveTintColor =\n    typeof inactiveColor !== 'undefined'\n      ? inactiveColor\n      : isV3\n      ? theme.colors.onSurfaceVariant\n      : color(textColor).alpha(0.5).rgb().string();\n\n  const touchColor = color(activeColor || activeTintColor)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  const maxTabBarWidth = maxTabWidth * routes.length;\n\n  const tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n  const tabWidth = tabBarWidth / routes.length;\n\n  const rippleSize = layout.width / 4;\n\n  const insets = {\n    left: safeAreaInsets?.left ?? left,\n    right: safeAreaInsets?.right ?? right,\n    bottom: safeAreaInsets?.bottom ?? bottom,\n  };\n\n  return (\n    <View style={[styles.container, style]} testID={testID}>\n      <View style={[styles.content, { backgroundColor: colors?.background }]}>\n        {routes.map((route, index) => {\n          if (getLazy({ route }) !== false && !loaded.includes(route.key)) {\n            // Don't render a screen if we've never navigated to it\n            return null;\n          }\n\n          const focused = navigationState.index === index;\n\n          const opacity = sceneAnimationEnabled\n            ? tabsPositionAnims[index].interpolate({\n                inputRange: [-1, 0, 1],\n                outputRange: [0, 1, 0],\n              })\n            : focused\n            ? 1\n            : 0;\n\n          const top = sceneAnimationEnabled\n            ? offsetsAnims[index].interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, FAR_FAR_AWAY],\n              })\n            : focused\n            ? 0\n            : FAR_FAR_AWAY;\n\n          const left =\n            sceneAnimationType === 'shifting'\n              ? tabsPositionAnims[index].interpolate({\n                  inputRange: [-1, 0, 1],\n                  outputRange: [-50, 0, 50],\n                })\n              : 0;\n\n          const zIndex = focused ? 1 : 0;\n\n          return (\n            <BottomNavigationRouteScreen\n              key={route.key}\n              pointerEvents={focused ? 'auto' : 'none'}\n              accessibilityElementsHidden={!focused}\n              importantForAccessibility={\n                focused ? 'auto' : 'no-hide-descendants'\n              }\n              index={index}\n              visibility={opacity}\n              style={[StyleSheet.absoluteFill, { zIndex }]}\n              collapsable={false}\n              removeClippedSubviews={\n                // On iOS, set removeClippedSubviews to true only when not focused\n                // This is an workaround for a bug where the clipped view never re-appears\n                Platform.OS === 'ios' ? navigationState.index !== index : true\n              }\n            >\n              <Animated.View\n                {...(Platform.OS === 'android' && {\n                  needsOffscreenAlphaCompositing: sceneAnimationEnabled,\n                })}\n                renderToHardwareTextureAndroid={sceneAnimationEnabled}\n                style={[\n                  styles.content,\n                  {\n                    opacity: opacity,\n                    transform: [{ translateX: left }, { translateY: top }],\n                  },\n                ]}\n              >\n                {renderScene({ route, jumpTo })}\n              </Animated.View>\n            </BottomNavigationRouteScreen>\n          );\n        })}\n      </View>\n      <Surface\n        {...(theme.isV3 && { elevation: 0 })}\n        style={\n          [\n            !theme.isV3 && { elevation: 4 },\n            styles.bar,\n            keyboardHidesNavigationBar\n              ? {\n                  // When the keyboard is shown, slide down the navigation bar\n                  transform: [\n                    {\n                      translateY: visibleAnim.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layout.height, 0],\n                      }),\n                    },\n                  ],\n                  // Absolutely position the navigation bar so that the content is below it\n                  // This is needed to avoid gap at bottom when the navigation bar is hidden\n                  position: keyboardVisible ? 'absolute' : null,\n                }\n              : null,\n            barStyle,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={\n          layout.measured\n            ? keyboardHidesNavigationBar && keyboardVisible\n              ? 'none'\n              : 'auto'\n            : 'none'\n        }\n        onLayout={onLayout}\n      >\n        <Animated.View\n          style={[styles.barContent, { backgroundColor }]}\n          testID={`${testID}-bar-content`}\n        >\n          <View\n            style={[\n              styles.items,\n              {\n                marginBottom: insets.bottom,\n                marginHorizontal: Math.max(insets.left, insets.right),\n              },\n              compact && {\n                maxWidth: maxTabBarWidth,\n              },\n            ]}\n            accessibilityRole={'tablist'}\n          >\n            {shifting ? (\n              <Animated.View\n                pointerEvents=\"none\"\n                style={[\n                  styles.ripple,\n                  {\n                    // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                    // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                    top: (BAR_HEIGHT - rippleSize) / 2,\n                    left:\n                      tabWidth * (navigationState.index + 0.5) - rippleSize / 2,\n                    height: rippleSize,\n                    width: rippleSize,\n                    borderRadius: rippleSize / 2,\n                    backgroundColor: getColor({\n                      route: routes[navigationState.index],\n                    }),\n                    transform: [\n                      {\n                        // Scale to twice the size  to ensure it covers the whole navigation bar\n                        scale: rippleAnim.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [0, 8],\n                        }),\n                      },\n                    ],\n                    opacity: rippleAnim.interpolate({\n                      inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                      outputRange: [0, 0, 1, 1],\n                    }),\n                  },\n                ]}\n              />\n            ) : null}\n            {routes.map((route, index) => {\n              const focused = navigationState.index === index;\n              const active = tabsAnims[index];\n\n              // Scale the label up\n              const scale =\n                labeled && shifting\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [0.5, 1],\n                    })\n                  : 1;\n\n              // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n              const translateY = labeled\n                ? shifting\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [7, 0],\n                    })\n                  : 0\n                : 7;\n\n              // We render the active icon and label on top of inactive ones and cross-fade them on change.\n              // This trick gives the illusion that we are animating between active and inactive colors.\n              // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n              const activeOpacity = active;\n              const inactiveOpacity = active.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              });\n\n              const v3ActiveOpacity = focused ? 1 : 0;\n              const v3InactiveOpacity = shifting\n                ? inactiveOpacity\n                : focused\n                ? 0\n                : 1;\n\n              // Scale horizontally the outline pill\n              const outlineScale = focused\n                ? active.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.5, 1],\n                  })\n                : 0;\n\n              const badge = getBadge({ route });\n\n              const activeLabelColor = !isV3\n                ? activeTintColor\n                : focused\n                ? theme.colors.onSurface\n                : theme.colors.onSurfaceVariant;\n\n              const inactiveLabelColor = !isV3\n                ? inactiveTintColor\n                : focused\n                ? theme.colors.onSurface\n                : theme.colors.onSurfaceVariant;\n\n              const badgeStyle = {\n                top: !isV3 ? -2 : typeof badge === 'boolean' ? 4 : 2,\n                right:\n                  (badge != null && typeof badge !== 'boolean'\n                    ? String(badge).length * -2\n                    : 0) - (!isV3 ? 2 : 0),\n              };\n\n              const isV3Shifting = isV3 && shifting && labeled;\n\n              const font = isV3 ? theme.fonts.labelMedium : {};\n\n              return renderTouchable({\n                key: route.key,\n                route,\n                borderless: true,\n                centered: true,\n                rippleColor: isV3 ? 'transparent' : touchColor,\n                onPress: () => handleTabPress(index),\n                testID: getTestID({ route }),\n                accessibilityLabel: getAccessibilityLabel({ route }),\n                accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n                accessibilityState: { selected: focused },\n                style: [styles.item, isV3 && styles.v3Item],\n                children: (\n                  <View\n                    pointerEvents=\"none\"\n                    style={\n                      isV3 &&\n                      (labeled\n                        ? styles.v3TouchableContainer\n                        : styles.v3NoLabelContainer)\n                    }\n                  >\n                    <Animated.View\n                      style={[\n                        styles.iconContainer,\n                        isV3 && styles.v3IconContainer,\n                        (!isV3 || isV3Shifting) && {\n                          transform: [{ translateY }],\n                        },\n                      ]}\n                    >\n                      {isV3 && focused && (\n                        <Animated.View\n                          style={[\n                            styles.outline,\n                            {\n                              transform: [\n                                {\n                                  scaleX: outlineScale,\n                                },\n                              ],\n                              backgroundColor: theme.colors.secondaryContainer,\n                            },\n                          ]}\n                        />\n                      )}\n                      <Animated.View\n                        style={[\n                          styles.iconWrapper,\n                          isV3 && styles.v3IconWrapper,\n                          { opacity: isV3 ? v3ActiveOpacity : activeOpacity },\n                        ]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: true,\n                            color: activeTintColor,\n                          })\n                        ) : (\n                          <Icon\n                            source={route.focusedIcon as IconSource}\n                            color={activeTintColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      <Animated.View\n                        style={[\n                          styles.iconWrapper,\n                          isV3 && styles.v3IconWrapper,\n                          {\n                            opacity: isV3 ? v3InactiveOpacity : inactiveOpacity,\n                          },\n                        ]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: false,\n                            color: inactiveTintColor,\n                          })\n                        ) : (\n                          <Icon\n                            source={\n                              theme.isV3 && route.unfocusedIcon !== undefined\n                                ? route.unfocusedIcon\n                                : (route.focusedIcon as IconSource)\n                            }\n                            color={inactiveTintColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      <View style={[styles.badgeContainer, badgeStyle]}>\n                        {typeof badge === 'boolean' ? (\n                          <Badge visible={badge} size={isV3 ? 6 : 8} />\n                        ) : (\n                          <Badge visible={badge != null} size={16}>\n                            {badge}\n                          </Badge>\n                        )}\n                      </View>\n                    </Animated.View>\n                    {labeled ? (\n                      <Animated.View\n                        style={[\n                          styles.labelContainer,\n                          !isV3 && { transform: [{ scale }] },\n                        ]}\n                      >\n                        <Animated.View\n                          style={[\n                            styles.labelWrapper,\n                            (!isV3 || isV3Shifting) && {\n                              opacity: activeOpacity,\n                            },\n                          ]}\n                        >\n                          {renderLabel ? (\n                            renderLabel({\n                              route,\n                              focused: true,\n                              color: activeLabelColor,\n                            })\n                          ) : (\n                            <Text\n                              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n                              variant=\"labelMedium\"\n                              style={[\n                                styles.label,\n                                {\n                                  color: activeLabelColor,\n                                  ...font,\n                                },\n                              ]}\n                            >\n                              {getLabelText({ route })}\n                            </Text>\n                          )}\n                        </Animated.View>\n                        {shifting ? null : (\n                          <Animated.View\n                            style={[\n                              styles.labelWrapper,\n                              { opacity: inactiveOpacity },\n                            ]}\n                          >\n                            {renderLabel ? (\n                              renderLabel({\n                                route,\n                                focused: false,\n                                color: inactiveLabelColor,\n                              })\n                            ) : (\n                              <Text\n                                maxFontSizeMultiplier={\n                                  labelMaxFontSizeMultiplier\n                                }\n                                variant=\"labelMedium\"\n                                selectable={false}\n                                style={[\n                                  styles.label,\n                                  {\n                                    color: inactiveLabelColor,\n                                    ...font,\n                                  },\n                                ]}\n                              >\n                                {getLabelText({ route })}\n                              </Text>\n                            )}\n                          </Animated.View>\n                        )}\n                      </Animated.View>\n                    ) : (\n                      !isV3 && <View style={styles.labelContainer} />\n                    )}\n                  </View>\n                ),\n              });\n            })}\n          </View>\n        </Animated.View>\n      </Surface>\n    </View>\n  );\n};\n\n/**\n * Function which takes a map of route keys to components.\n * Pure components are used to minimize re-rendering of the pages.\n * This drastically improves the animation performance.\n */\nBottomNavigation.SceneMap = (scenes: {\n  [key: string]: React.ComponentType<{\n    route: Route;\n    jumpTo: (key: string) => void;\n  }>;\n}) => {\n  return ({\n    route,\n    jumpTo,\n  }: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => (\n    <SceneComponent\n      key={route.key}\n      component={scenes[route.key ? route.key : '']}\n      route={route}\n      jumpTo={jumpTo}\n    />\n  );\n};\n\nexport default withInternalTheme(BottomNavigation);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    ...(Platform.OS === 'web'\n      ? {\n          width: '100%',\n        }\n      : null),\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  v3Item: {\n    paddingVertical: 0,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  v3IconContainer: {\n    height: 32,\n    width: 32,\n    marginBottom: 4,\n    marginTop: 0,\n    justifyContent: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  v3IconWrapper: {\n    top: 4,\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  label: {\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n          alignSelf: 'center',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n  },\n  v3TouchableContainer: {\n    paddingTop: 12,\n    paddingBottom: 16,\n  },\n  v3NoLabelContainer: {\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  outline: {\n    width: OUTLINE_WIDTH,\n    height: OUTLINE_WIDTH / 2,\n    borderRadius: OUTLINE_WIDTH / 4,\n    alignSelf: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
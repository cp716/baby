{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport ToiletInputForm from \"./ToiletInputForm\";\nimport ModalSelectBaby from \"../ModalSelectBaby\";\nimport Modal from \"react-native-modal\";\nimport CircleButton from \"../CircleButton\";\nimport { useDateTimeContext } from \"../../context/DateTimeContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ToiletAddButton() {\n  var _useDateTimeContext = useDateTimeContext(),\n      dateTimeState = _useDateTimeContext.dateTimeState;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isBabyModalVisible = _useState4[0],\n      setBabyModalVisible = _useState4[1];\n\n  var toggleBabyModal = function toggleBabyModal() {\n    setBabyModalVisible(!isBabyModalVisible);\n  };\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDatePickerVisible = _useState6[0],\n      setDatePickerVisibility = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectTime = _useState8[0],\n      setselectTime = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      detailTime = _useState10[0],\n      setDetailTime = _useState10[1];\n\n  var getNewDate = function getNewDate(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    setDetailTime(dateTimeState.month + '月' + dateTimeState.day + '日' + hours + '時' + minutes + '分');\n    setselectTime(new Date(dateTimeState.year, dateTimeState.month - 1, dateTimeState.day, hours, minutes, \"00\"));\n  };\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var formatDatetime = function formatDatetime(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    setDetailTime(dateTimeState.month + '月' + dateTimeState.day + '日' + hours + '時' + minutes + '分');\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    setselectTime(date);\n    formatDatetime(date);\n    hideDatePicker();\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(CircleButton, {\n      name: \"toilet\",\n      onPress: function onPress() {\n        toggleModal();\n        getNewDate(new Date(Math.floor(new Date().getTime() / 1000 / 60 / 5) * 1000 * 60 * 5));\n      }\n    }), _jsx(Modal, {\n      isVisible: isModalVisible,\n      onBackdropPress: toggleModal,\n      backdropTransitionOutTiming: 0,\n      animationIn: \"fadeInUpBig\",\n      animationOut: \"fadeOutDownBig\",\n      avoidKeyboard: true,\n      swipeDirection: \"down\",\n      onSwipeComplete: toggleModal,\n      children: _jsxs(View, {\n        style: modalStyles.container,\n        children: [_jsx(Text, {\n          style: modalStyles.title,\n          children: \"\\u30C8\\u30A4\\u30EC\\u767B\\u9332\"\n        }), _jsxs(View, {\n          children: [_jsx(Button, {\n            title: String(detailTime),\n            onPress: showDatePicker\n          }), _jsx(DateTimePickerModal, {\n            isVisible: isDatePickerVisible,\n            value: selectTime,\n            onConfirm: handleConfirm,\n            onCancel: hideDatePicker,\n            mode: \"time\",\n            locale: \"ja\",\n            display: \"spinner\",\n            confirmTextIOS: \"\\u6C7A\\u5B9A\",\n            cancelTextIOS: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\",\n            minuteInterval: 5,\n            headerTextIOS: \"\",\n            textColor: \"blue\",\n            date: selectTime\n          })]\n        }), _jsx(View, {\n          children: _jsx(ToiletInputForm, {\n            selectTime: selectTime,\n            toggleModal: toggleModal\n          })\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nvar modalStyles = StyleSheet.create({\n  modalButton: {\n    backgroundColor: '#FFF',\n    borderColor: '#36C1A7',\n    borderWidth: 1,\n    borderRadius: 10\n  },\n  modalButtonText: {\n    color: '#36C1A7',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    padding: 10,\n    fontSize: 20\n  },\n  container: {\n    backgroundColor: '#FFF',\n    padding: '5%',\n    borderColor: '#36C1A7',\n    borderWidth: 3,\n    borderRadius: 20\n  },\n  title: {\n    color: '#36C1A7',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","DateTimePickerModal","ToiletInputForm","ModalSelectBaby","Modal","CircleButton","useDateTimeContext","ToiletAddButton","dateTimeState","isModalVisible","setModalVisible","toggleModal","isBabyModalVisible","setBabyModalVisible","toggleBabyModal","isDatePickerVisible","setDatePickerVisibility","selectTime","setselectTime","detailTime","setDetailTime","getNewDate","date","hours","getHours","minutes","getMinutes","month","day","Date","year","showDatePicker","hideDatePicker","formatDatetime","handleConfirm","Math","floor","getTime","modalStyles","container","title","String","styles","StyleSheet","create","flex","modalButton","backgroundColor","borderColor","borderWidth","borderRadius","modalButtonText","color","fontWeight","textAlign","padding","fontSize"],"sources":["/Users/atsushi/Dev/baby/src/components/AddButton/ToiletAddButton.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, View, StyleSheet, Text, Image } from \"react-native\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport ToiletInputForm from \"./ToiletInputForm\";\nimport ModalSelectBaby from \"../ModalSelectBaby\";\nimport Modal from \"react-native-modal\";\nimport CircleButton from \"../CircleButton\";\nimport { useDateTimeContext } from \"../../context/DateTimeContext\";\n\nexport default function ToiletAddButton() {\n    const { dateTimeState } = useDateTimeContext();\n\n    const [isModalVisible, setModalVisible] = useState(false);\n    const toggleModal = () => {\n        setModalVisible(!isModalVisible);\n    };\n\n    const [isBabyModalVisible, setBabyModalVisible] = useState(false);\n    const toggleBabyModal = () => {\n        setBabyModalVisible(!isBabyModalVisible);\n    };\n\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n    const [selectTime, setselectTime] = useState();\n    const [detailTime, setDetailTime] = useState();\n\n    const getNewDate = (date) => {\n        const hours = date.getHours();\n        const minutes = date.getMinutes();\n        setDetailTime(dateTimeState.month + '月' + dateTimeState.day + '日' + hours + '時' + minutes + '分')\n        setselectTime(new Date(dateTimeState.year, dateTimeState.month-1, dateTimeState.day, hours, minutes, \"00\" ))\n    }\n    \n    //起動\n    const showDatePicker = () => {\n        setDatePickerVisibility(true);\n    };\n\n    //終了\n    const hideDatePicker = () => {\n        setDatePickerVisibility(false);\n    };\n\n    //表示用のstateへ日時を代入\n    const formatDatetime = (date) => {\n        const hours = date.getHours();\n        const minutes = date.getMinutes();\n        setDetailTime(dateTimeState.month + '月' + dateTimeState.day + '日' + hours + '時' + minutes + '分');\n    };\n\n    //決定ボタン押下時の処理\n    const handleConfirm = (date) => {\n        setselectTime(date);\n        formatDatetime(date);\n        hideDatePicker();\n    };\n\n    return (\n        <View>\n            <CircleButton\n                name=\"toilet\"\n                onPress={() => {\n                    toggleModal();\n                    getNewDate(new Date(Math.floor(new Date().getTime()/1000/60/5)*1000*60*5));\n                }}\n            />\n            <Modal isVisible={isModalVisible}\n                onBackdropPress={toggleModal}\n                backdropTransitionOutTiming={0}\n                //modalレパートリー\n                //\"bounce\" | \"flash\" | \"jello\" | \"pulse\" | \"rotate\" | \"rubberBand\" | \"shake\" | \"swing\" | \"tada\" | \"wobble\" | \"bounceIn\" | \"bounceInDown\" | \"bounceInUp\" | \"bounceInLeft\" | \"bounceInRight\" | \"bounceOut\" | \"bounceOutDown\" | \"bounceOutUp\" | \"bounceOutLeft\" | \"bounceOutRight\" | \"fadeIn\" | \"fadeInDown\" | \"fadeInDownBig\" | \"fadeInUp\" | \"fadeInUpBig\" | \"fadeInLeft\" | \"fadeInLeftBig\" | \"fadeInRight\" | \"fadeInRightBig\" | \"fadeOut\" | \"fadeOutDown\" | \"fadeOutDownBig\" | \"fadeOutUp\" | \"fadeOutUpBig\" | \"fadeOutLeft\" | \"fadeOutLeftBig\" | \"fadeOutRight\" | \"fadeOutRightBig\" | \"flipInX\" | \"flipInY\" | \"flipOutX\" | \"flipOutY\" | \"lightSpeedIn\" | \"lightSpeedOut\" | \"slideInDown\" | \"slideInUp\" | \"slideInLeft\" | \"slideInRight\" | \"slideOutDown\" | \"slideOutUp\" | \"slideOutLeft\" | \"slideOutRight\" | \"zoomIn\" | \"zoomInDown\" | \"zoomInUp\" | \"zoomInLeft\" | \"zoomInRight\" | \"zoomOut\" | \"zoomOutDown\" | \"zoomOutUp\" | \"zoomOutLeft\" | \"zoomOutRight\" |\n                animationIn=\"fadeInUpBig\"\n                animationOut=\"fadeOutDownBig\"\n                avoidKeyboard={true}\n                swipeDirection=\"down\"\n                onSwipeComplete={toggleModal}\n                >\n                <View style={modalStyles.container}>\n                    <Text style={modalStyles.title}>トイレ登録</Text>\n                    <View>\n                        <Button title={String(detailTime)} onPress={showDatePicker} />\n                        <DateTimePickerModal\n                            isVisible={isDatePickerVisible}\n                            value={selectTime}\n                            onConfirm={handleConfirm}\n                            onCancel={hideDatePicker}\n                            mode=\"time\"//入力項目\n                            locale='ja'//日本語化\n                            display=\"spinner\"//UIタイプ\n                            confirmTextIOS=\"決定\"//決定ボタンテキスト\n                            cancelTextIOS=\"キャンセル\"//キャンセルボタンテキスト\n                            minuteInterval={5}//分数間隔\n                            headerTextIOS=\"\"//入力欄ヘッダーテキスト\n                            textColor=\"blue\"//ピッカーカラー\n                            date={selectTime}//ピッカー日付デフォルト\n                        />\n                    </View>\n                    <View>\n                        <ToiletInputForm selectTime={selectTime} toggleModal={toggleModal}/>\n                    </View>\n                </View>\n            </Modal>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n});\n\nconst modalStyles = StyleSheet.create({\n    modalButton : {\n        backgroundColor : '#FFF',\n        borderColor : '#36C1A7',\n        borderWidth : 1,\n        borderRadius : 10,\n    },\n    modalButtonText : {\n        color : '#36C1A7',\n        fontWeight : 'bold',\n        textAlign : 'center',\n        padding: 10,\n        fontSize: 20,\n    },\n    container : {\n        backgroundColor : '#FFF',\n        padding : '5%',\n        borderColor : '#36C1A7',\n        borderWidth : 3,\n        borderRadius : 20,\n    },\n    title : {\n        color : '#36C1A7',\n        fontWeight : 'bold',\n        textAlign: 'center'\n    },\n    //arrow : {\n        //color : '#36C1A7',\n    //},\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { RadioButton } from 'react-native-paper';\nimport { useBabyContext } from \"../context/BabyContext\";\nimport Button from \"../components/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function BabyListScreen(props) {\n  var navigation = props.navigation;\n  var isFocused = useIsFocused();\n  useEffect(function () {\n    if (isFocused) {\n      setChecked(null);\n      setBabyId(null);\n      setBabyName(null);\n      setBabyBirthday(null);\n    }\n  }, [isFocused]);\n\n  var _useBabyContext = useBabyContext(),\n      baby = _useBabyContext.baby;\n\n  var babyData = [];\n\n  if (baby !== \"\") {\n    baby.forEach(function (doc) {\n      var data = doc.data();\n      babyData.push({\n        id: doc.id,\n        babyName: data.babyName,\n        birthday: data.birthday\n      });\n    });\n  }\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      babyId = _useState2[0],\n      setBabyId = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      babyName = _useState4[0],\n      setBabyName = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      babyBirthday = _useState6[0],\n      setBabyBirthday = _useState6[1];\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  function renderItem(_ref) {\n    var item = _ref.item;\n    var date = new Date(item.birthday.seconds * 1000 + item.birthday.nanoseconds / 1000000);\n    var year = date.getFullYear();\n    var month = date.getMonth();\n    var day = date.getDate();\n    return _jsx(View, {\n      children: function () {\n        return _jsx(RadioButton.Item, {\n          value: item.id,\n          label: item.babyName + '\\n誕生日:' + year + '年' + (month + 1) + '月' + day + '日',\n          status: checked === item.id ? 'checked' : null,\n          onPress: function onPress() {\n            setChecked(item.id);\n            setBabyId(item.id);\n            setBabyName(item.babyName);\n            setBabyBirthday(item.birthday.seconds * 1000 + item.birthday.nanoseconds / 1000000);\n          }\n        });\n      }()\n    });\n  }\n\n  var ItemSeparator = function ItemSeparator() {\n    return _jsx(View, {\n      style: styles.separator\n    });\n  };\n\n  var enabledButtonStyle = {};\n  var disabledButtonStyle = {\n    backgroundColor: '#F0F0F0'\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.inner,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"\\u8D64\\u3061\\u3083\\u3093\\u4E00\\u89A7\"\n      }), _jsx(View, {\n        style: styles.inputTypeContainer,\n        children: _jsx(FlatList, {\n          inverted: true,\n          data: babyData,\n          renderItem: renderItem,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          ItemSeparatorComponent: ItemSeparator\n        })\n      }), _jsx(Button, {\n        label: \"\\u7DE8\\u96C6\",\n        disabled: !babyId || !babyName || !babyBirthday,\n        style: babyId && babyName && babyBirthday ? enabledButtonStyle : disabledButtonStyle,\n        onPress: function onPress() {\n          if (babyId && babyName && babyBirthday) {\n            navigation.navigate('BabyEdit', {\n              babyId: babyId,\n              babyName: babyName,\n              babyBirthday: babyBirthday\n            });\n          } else {\n            Alert.alert(\"編集をしたい赤ちゃんを選択してください\");\n          }\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F0F4F8'\n  },\n  inner: {\n    paddingHorizontal: 27,\n    paddingVertical: 24\n  },\n  title: {\n    fontSize: 24,\n    lineHeight: 32,\n    fontWeight: 'bold'\n  },\n  inputTypeContainer: {\n    marginTop: '10%',\n    paddingHorizontal: 27,\n    paddingVertical: 10,\n    maxHeight: '70%',\n    backgroundColor: '#FFF',\n    padding: '5%',\n    borderColor: '#737373',\n    borderWidth: 1,\n    borderRadius: 20\n  },\n  radioButton: {},\n  advertisement: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    alignItems: 'center'\n  },\n  separator: {\n    height: 1,\n    backgroundColor: '#737373'\n  },\n  item: {\n    padding: 20\n  },\n  disabledButtonStyle: {\n    backgroundColor: 'gray',\n    padding: 10,\n    borderRadius: 5\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useIsFocused","RadioButton","useBabyContext","Button","BabyListScreen","props","navigation","isFocused","setChecked","setBabyId","setBabyName","setBabyBirthday","baby","babyData","forEach","doc","data","push","id","babyName","birthday","babyId","babyBirthday","checked","renderItem","item","date","Date","seconds","nanoseconds","year","getFullYear","month","getMonth","day","getDate","ItemSeparator","styles","separator","enabledButtonStyle","disabledButtonStyle","backgroundColor","container","inner","title","inputTypeContainer","navigate","Alert","alert","StyleSheet","create","flex","paddingHorizontal","paddingVertical","fontSize","lineHeight","fontWeight","marginTop","maxHeight","padding","borderColor","borderWidth","borderRadius","radioButton","advertisement","paddingTop","paddingBottom","alignItems","height"],"sources":["/Users/atsushi/Dev/baby/src/screens/BabyListScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, Alert, FlatList } from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\n\nimport { RadioButton } from 'react-native-paper';\n\nimport { useBabyContext } from '../context/BabyContext';\nimport Button from '../components/Button';\n\nexport default function BabyListScreen(props) {\n    const { navigation } = props;\n    const isFocused = useIsFocused();\n\n    useEffect(() => {\n        if (isFocused) {\n            setChecked(null);\n            setBabyId(null);\n            setBabyName(null);\n            setBabyBirthday(null);\n        }\n    }, [isFocused]);\n\n    const { baby } = useBabyContext();\n\n    const babyData = [];\n    if(baby !== \"\") {\n        baby.forEach((doc) => {\n            const data = doc.data();\n            babyData.push({\n                id: doc.id,\n                babyName: data.babyName,\n                birthday: data.birthday,\n            });\n        });\n    }\n\n    const [babyId, setBabyId] = useState(null);\n    const [babyName, setBabyName] = useState(null);\n    const [babyBirthday, setBabyBirthday] = useState(null);\n    const [checked, setChecked] = React.useState();\n\n    function renderItem({ item }) {  \n        \n        const date = new Date(item.birthday.seconds * 1000 + item.birthday.nanoseconds / 1000000);\n        const year = date.getFullYear();\n        const month = date.getMonth();\n        const day = date.getDate();\n\n        return(\n            <View>\n                {(() => {\n                    return(\n                        <RadioButton.Item\n                            value={item.id}\n                            label={item.babyName + '\\n誕生日:' + year + '年' + (month + 1) + '月' + day + '日'}\n                            status={checked === item.id ? 'checked' : null}\n                            onPress={() => {\n                                setChecked(item.id)\n                                setBabyId(item.id)\n                                setBabyName(item.babyName)\n                                setBabyBirthday(item.birthday.seconds * 1000 + item.birthday.nanoseconds / 1000000)\n                            }}\n                        />\n                    )\n                })()}\n            </View>\n        )       \n    } \n\n    const ItemSeparator = () => (\n        <View style={styles.separator} />\n    );\n\n    const enabledButtonStyle = {};\n    const disabledButtonStyle = {\n    backgroundColor: '#F0F0F0', // 無効な状態のボタンの背景色\n    };\n    \n    return (\n        <View style={styles.container}>\n            <View style={styles.inner}>\n                <Text style={styles.title}>赤ちゃん一覧</Text>\n                <View style={styles.inputTypeContainer}>\n                    <FlatList\n                        inverted//反転\n                        data={babyData}\n                        renderItem={renderItem}\n                        keyExtractor={(item) => { return item.id; }}\n                        ItemSeparatorComponent={ItemSeparator}\n                    />\n                </View>\n                <Button\n                    label=\"編集\"\n                    disabled={!babyId || !babyName || !babyBirthday}\n                    style={babyId && babyName && babyBirthday ? enabledButtonStyle : disabledButtonStyle}\n                    onPress={() => { \n                        if (babyId && babyName && babyBirthday) {\n                            navigation.navigate('BabyEdit', { \n                                babyId: babyId, \n                                babyName: babyName,\n                                babyBirthday: babyBirthday,\n                            });\n                        } else {\n                            // ここでボタンが無効な状態であることをユーザーに伝えるための処理を追加するか、ボタンを非表示にするなどの適切な処理を行います。\n                            // 例えば、アラートを表示するか、ボタンを灰色にしてクリックできなくするなどの方法が考えられます。\n                            // 以下はアラートを表示する例です。\n                            Alert.alert(\"編集をしたい赤ちゃんを選択してください\");\n                        }\n                    }}\n                />\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#F0F4F8',\n    },\n    inner: {\n        paddingHorizontal: 27,\n        paddingVertical: 24,\n    },\n    title: {\n        //marginTop: '5%',\n        //marginLeft: '5%',\n        fontSize: 24,\n        lineHeight: 32,\n        fontWeight: 'bold',\n    },\n    inputTypeContainer: {\n        marginTop: '10%',\n        paddingHorizontal: 27,\n        paddingVertical: 10,\n        //height: 50,\n        maxHeight: '70%',\n        backgroundColor: '#FFF',\n        //flex: 1,\n        //flexDirection: 'row',\n        //width: 350 ,\n        //flex:1\n        //height: 300,\n        padding : '5%',\n        borderColor : '#737373',\n        borderWidth : 1,\n        borderRadius : 20,\n    },\n    radioButton: {\n        //flexDirection: 'row',\n        //paddingLeft: 'auto',\n        //paddingRight: 'auto',\n        //marginLeft: 'auto',\n        //marginRight: 'auto',\n        //justifyContent: 'space-around',//横並び均等配置\n        //flexgrow: 1,\n    },\n    advertisement: {\n        //marginTop: 'auto',\n        //marginBottom: 'auto',\n        paddingTop: 10,\n        paddingBottom: 10,\n        //height: '15%',\n        //width: '50%',\n        alignItems:'center',\n        //backgroundColor: '#464876',\n    },\n    separator: {\n        height: 1,\n        backgroundColor: '#737373',\n    },\n    item: {\n    padding: 20,\n    },\n    // 無効なボタンのスタイル\n    disabledButtonStyle: {\n    backgroundColor: 'gray', // 無効な状態のボタンの背景色\n    padding: 10,\n    borderRadius: 5,\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Table, TableWrapper, Row, Col } from 'react-native-table-component';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DailyTable(props) {\n  var todayData = props.todayData;\n  var junyLeftTotal = 0;\n  var junyRightTotal = 0;\n  var milkTotal = 0;\n  var bonyuTotal = 0;\n  var bonyuCount = 0;\n  var oshikkoCount = 0;\n  var unchiCount = 0;\n  var bodyTemperature = '記録なし';\n  var bodyTemperatureTime = '';\n  var foodCount = 0;\n  var drinkTotal = 0;\n\n  var groupBy = function groupBy(xs, key) {\n    return xs.reduce(function (rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x);\n      return rv;\n    }, {});\n  };\n\n  var groupByCategory = groupBy(todayData, 'category');\n  var junyu = groupByCategory.JUNYU;\n  var milk = groupByCategory.MILK;\n  var bonyu = groupByCategory.BONYU;\n  var toilet = groupByCategory.TOILET;\n  var disease = groupByCategory.DISEASE;\n  var food = groupByCategory.FOOD;\n\n  for (var key in junyu) {\n    junyLeftTotal += junyu[key].timeLeft;\n    junyRightTotal += junyu[key].timeRight;\n  }\n\n  for (var _key2 in milk) {\n    milkTotal += milk[_key2].milk;\n  }\n\n  for (var _key4 in bonyu) {\n    bonyuTotal += bonyu[_key4].bonyu;\n    bonyuCount += 1;\n  }\n\n  for (var _key6 in toilet) {\n    if (toilet[_key6].toilet.oshikko && toilet[_key6].toilet.unchi) {\n      oshikkoCount += 1;\n      unchiCount += 1;\n    }\n\n    if (toilet[_key6].toilet.oshikko && !toilet[_key6].toilet.unchi) {\n      oshikkoCount += 1;\n    }\n\n    if (!toilet[_key6].toilet.oshikko && toilet[_key6].toilet.unchi) {\n      unchiCount += 1;\n    }\n  }\n\n  for (var _key8 in disease) {\n    if (!isNaN(disease[_key8].disease.bodyTemperature)) {\n      bodyTemperature = disease[_key8].disease.bodyTemperature;\n      bodyTemperatureTime = disease[_key8].updatedAt.getHours() + '時' + disease[_key8].updatedAt.getMinutes() + '分';\n    }\n  }\n\n  for (var _key10 in food) {\n    if (!isNaN(food[_key10].food.drink)) {\n      drinkTotal += food[_key10].food.drink;\n    }\n\n    foodCount += 1;\n  }\n\n  var tableHead_1 = ['授乳', '哺乳瓶', '飲食'];\n  var tableData_1 = ['左\\n' + junyLeftTotal + '分', '右\\n' + junyRightTotal + '分', 'ミルク\\n' + milkTotal + 'ml', '母乳\\n' + bonyuTotal + 'ml', 'ご飯\\n' + foodCount + '回', '飲物\\n' + drinkTotal + 'ml'];\n  var tableHead_2 = ['トイレ', '睡眠', '体温', '身長', '体重'];\n  var tableData_2 = ['尿\\n' + oshikkoCount + '回', 'うんち\\n' + unchiCount + '回', 'XX分', bodyTemperature + '℃', 'XXcm', 'XXkg'];\n  var widthArr_1 = [110, 110, 110];\n  var widthArr_2 = [55, 55, 55, 55, 55, 55];\n  var widthArr_3 = [110, 55, 55, 55, 55];\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(Table, {\n      style: styles.table,\n      widthArr: [330],\n      borderStyle: {\n        borderWidth: 1,\n        borderColor: '#C1C0B9'\n      },\n      children: [_jsx(Row, {\n        data: tableHead_1,\n        widthArr: widthArr_1,\n        style: styles.tableRow_1,\n        textStyle: styles.tableText\n      }), _jsx(Row, {\n        data: tableData_1,\n        widthArr: widthArr_2,\n        style: styles.tableRow_2,\n        textStyle: styles.tableText\n      }), _jsx(Row, {\n        data: tableHead_2,\n        widthArr: widthArr_3,\n        style: styles.tableRow_3,\n        textStyle: styles.tableText\n      }), _jsx(Row, {\n        data: tableData_2,\n        widthArr: widthArr_2,\n        style: styles.tableRow_4,\n        textStyle: styles.tableText\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  table: {\n    alignItems: 'center'\n  },\n  tableRow_1: {\n    backgroundColor: '#D3EBE9'\n  },\n  tableRow_2: {},\n  tableRow_3: {\n    backgroundColor: '#D3EBE9'\n  },\n  tableRow_4: {},\n  tabledesign: {},\n  tableTitle2: {\n    flexDirection: 'row',\n    fontSize: 13,\n    fontWeight: 'bold',\n    width: '100%',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignItems: 'center'\n  },\n  tableText: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    textAlign: 'center',\n    fontSize: 15\n  }\n});","map":{"version":3,"names":["React","Table","TableWrapper","Row","Col","DailyTable","props","todayData","junyLeftTotal","junyRightTotal","milkTotal","bonyuTotal","bonyuCount","oshikkoCount","unchiCount","bodyTemperature","bodyTemperatureTime","foodCount","drinkTotal","groupBy","xs","key","reduce","rv","x","push","groupByCategory","junyu","JUNYU","milk","MILK","bonyu","BONYU","toilet","TOILET","disease","DISEASE","food","FOOD","timeLeft","timeRight","oshikko","unchi","isNaN","updatedAt","getHours","getMinutes","drink","tableHead_1","tableData_1","tableHead_2","tableData_2","widthArr_1","widthArr_2","widthArr_3","styles","container","table","borderWidth","borderColor","tableRow_1","tableText","tableRow_2","tableRow_3","tableRow_4","StyleSheet","create","justifyContent","flexDirection","alignItems","backgroundColor","tabledesign","tableTitle2","fontSize","fontWeight","width","flexGrow","textAlign","marginLeft","marginRight","marginTop","marginBottom"],"sources":["/Users/atsushi/Dev/baby/src/components/DailyTable.jsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { Table, TableWrapper, Row, Col } from 'react-native-table-component';\n\nexport default function DailyTable(props) {\n    const { todayData } = props;\n    let junyLeftTotal = 0;\n    let junyRightTotal = 0;\n    let milkTotal = 0;\n    let bonyuTotal = 0;\n    let bonyuCount = 0;\n    let oshikkoCount = 0;\n    let unchiCount = 0;\n    let bodyTemperature = '記録なし';\n    let bodyTemperatureTime = ''\n    let foodCount = 0;\n    let drinkTotal = 0;\n\n    const groupBy = function(xs, key) {\n        return xs.reduce(function(rv, x) {\n            (rv[x[key]] = rv[x[key]] || []).push(x);\n            return rv;\n        }, {});\n    };\n    \n    const groupByCategory = groupBy(todayData, 'category');\n    const junyu = groupByCategory.JUNYU\n    const milk  = groupByCategory.MILK\n    const bonyu  = groupByCategory.BONYU\n    const toilet  = groupByCategory.TOILET\n    const disease  = groupByCategory.DISEASE\n    const food  = groupByCategory.FOOD\n\n    for (let key in junyu) {\n        junyLeftTotal += junyu[key].timeLeft\n        junyRightTotal += junyu[key].timeRight\n    }\n    for (let key in milk) {\n        milkTotal += milk[key].milk\n    }\n    for (let key in bonyu) {\n        bonyuTotal += bonyu[key].bonyu\n        bonyuCount += 1\n    }\n    for (let key in toilet) {\n        if(toilet[key].toilet.oshikko && toilet[key].toilet.unchi) {\n            oshikkoCount += 1\n            unchiCount += 1\n        }\n        if(toilet[key].toilet.oshikko && !toilet[key].toilet.unchi) {\n            oshikkoCount += 1\n        }\n        if(!toilet[key].toilet.oshikko && toilet[key].toilet.unchi) {\n            unchiCount += 1\n        }\n    }\n    for (let key in disease) {\n        if(!isNaN(disease[key].disease.bodyTemperature)) {\n            bodyTemperature = disease[key].disease.bodyTemperature\n            bodyTemperatureTime = (disease[key].updatedAt.getHours()) + '時' + (disease[key].updatedAt.getMinutes()) + '分'\n        }\n    }\n    for (let key in food) {\n        if(!isNaN(food[key].food.drink)) {\n            drinkTotal += food[key].food.drink\n        }\n        foodCount += 1\n    }\n\n    const tableHead_1 = ['授乳', '哺乳瓶', '飲食']\n    const tableData_1 = ['左\\n' + junyLeftTotal + '分', '右\\n' + junyRightTotal + '分', 'ミルク\\n' + milkTotal + 'ml', '母乳\\n' + bonyuTotal + 'ml', 'ご飯\\n' + foodCount + '回', '飲物\\n' + drinkTotal + 'ml']\n    const tableHead_2 = ['トイレ', '睡眠', '体温', '身長', '体重']\n    const tableData_2 = ['尿\\n' + oshikkoCount + '回', 'うんち\\n' + unchiCount + '回', 'XX分', bodyTemperature + '℃', 'XXcm', 'XXkg']\n    const widthArr_1 = [110, 110, 110]\n    const widthArr_2 = [55, 55, 55, 55, 55, 55]\n    const widthArr_3 = [110, 55, 55, 55, 55]\n\n    return (\n        <View style={styles.container}>\n            <Table style={styles.table} widthArr={[330]} borderStyle={{borderWidth: 1, borderColor: '#C1C0B9'}}>\n                <Row data={tableHead_1} widthArr={widthArr_1} style={styles.tableRow_1} textStyle={styles.tableText}/>\n                <Row data={tableData_1} widthArr={widthArr_2} style={styles.tableRow_2} textStyle={styles.tableText}/>\n                <Row data={tableHead_2} widthArr={widthArr_3} style={styles.tableRow_3} textStyle={styles.tableText}/>\n                <Row data={tableData_2} widthArr={widthArr_2} style={styles.tableRow_4} textStyle={styles.tableText}/>\n            </Table>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        //flex: 1,\n        //backgroundColor: 'red',\n        justifyContent: 'center',\n        flexDirection: 'row'\n        //flexDirection: 'row',\n        //borderTopWidth: 1,\n        //justifyContent: 'space-around',//横並び均等配置,\n        //backgroundColor: '#eee8aa',\n    },\n    table: {\n        //backgroundColor: 'red',\n        //justifyContent: 'center',\n        alignItems: 'center',\n        //margin: 'auto',\n        //flexDirection: 'row',\n        //justifyContent: 'space-around',//横並び均等配置\n        //borderTopRightRadius: 10,\n        //borderTopLeftRadius: 10,\n    },\n    tableRow_1: {\n        //backgroundColor: '#eee8aa',\n        //flexDirection: 'row',\n        //paddingVertical: 16,\n        //justifyContent: 'center',\n        //margin: 'auto',\n        //marginBottom: 'auto',\n        //borderWidth: 3,\n        //borderColor: '#c8e1ff',\n        backgroundColor: '#D3EBE9',\n        //borderTopRightRadius: 10,\n        //borderTopLeftRadius: 10,\n        //height: '100%',\n        //alignItems: 'center',\n        //width: '30%',\n    },\n    tableRow_2: {\n        \n    },\n    tableRow_3: {\n        backgroundColor: '#D3EBE9',\n    },\n    tableRow_4: {\n        //borderBottomLeftRadius: 10,\n        //borderBottomRightRadius: 10,\n    },\n    tabledesign: {\n        //flexDirection: 'row',\n        //alignItems:'center',\n    },\n    tableTitle2: {\n        flexDirection: 'row',\n        fontSize: 13,\n        //lineHeight: 16,\n        //padding: 3 ,\n        //margin: '1%',\n        //paddingLeft: '10%',\n        //paddingRight: '10%',\n        fontWeight: 'bold',\n        //backgroundColor: '#676556',\n        width: '100%',\n        flexGrow: 1,\n        textAlign: 'center',\n        alignItems: 'center',//縦中央\n        //justifyContent: 'center',//横中央\n    },\n    tableText: {\n        //backgroundColor: 'red',\n        //width: '20%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: 'auto',\n        marginBottom: 'auto',\n        textAlign: 'center',\n        fontSize: 15,\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}
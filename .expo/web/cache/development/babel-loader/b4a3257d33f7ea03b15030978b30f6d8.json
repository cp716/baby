{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"subtitle\", \"subtitleStyle\", \"onPress\", \"style\", \"titleRef\", \"titleStyle\", \"theme\", \"title\", \"mode\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { withInternalTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/themes/v2/colors\";\nimport Text from \"../Typography/Text\";\nimport { modeTextVariant } from \"./utils\";\n\nvar AppbarContent = function AppbarContent(_ref) {\n  var titleColor = _ref.color,\n      subtitle = _ref.subtitle,\n      subtitleStyle = _ref.subtitleStyle,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      titleRef = _ref.titleRef,\n      titleStyle = _ref.titleStyle,\n      theme = _ref.theme,\n      title = _ref.title,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'small' : _ref$mode,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var isV3 = theme.isV3,\n      colors = theme.colors;\n  var titleTextColor = titleColor ? titleColor : isV3 ? colors.onSurface : white;\n  var subtitleColor = color(titleTextColor).alpha(0.7).rgb().string();\n  var modeContainerStyles = {\n    small: styles.v3DefaultContainer,\n    medium: styles.v3MediumContainer,\n    large: styles.v3LargeContainer,\n    'center-aligned': styles.v3DefaultContainer\n  };\n  var variant = modeTextVariant[mode];\n  return React.createElement(TouchableWithoutFeedback, {\n    accessibilityRole: \"button\",\n    onPress: onPress,\n    disabled: !onPress\n  }, React.createElement(View, _extends({\n    pointerEvents: \"box-none\",\n    style: [styles.container, isV3 && modeContainerStyles[mode], style]\n  }, rest), React.createElement(Text, _extends({}, isV3 && {\n    variant: variant\n  }, {\n    ref: titleRef,\n    style: [_objectSpread({\n      color: titleTextColor\n    }, isV3 ? theme.fonts[variant] : Platform.OS === 'ios' ? theme.fonts.regular : theme.fonts.medium), !isV3 && styles.title, titleStyle],\n    numberOfLines: 1,\n    accessible: true,\n    accessibilityRole: Platform.OS === 'web' ? 'heading' : 'header'\n  }), title), !isV3 && subtitle ? React.createElement(Text, {\n    style: [styles.subtitle, {\n      color: subtitleColor\n    }, subtitleStyle],\n    numberOfLines: 1\n  }, subtitle) : null));\n};\n\nAppbarContent.displayName = 'Appbar.Content';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  v3DefaultContainer: {\n    paddingHorizontal: 0\n  },\n  v3MediumContainer: {\n    paddingHorizontal: 0,\n    justifyContent: 'flex-end',\n    paddingBottom: 24\n  },\n  v3LargeContainer: {\n    paddingHorizontal: 0,\n    paddingTop: 36,\n    justifyContent: 'flex-end',\n    paddingBottom: 28\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14\n  }\n});\nexport default withInternalTheme(AppbarContent);\nvar AppbarContentWithTheme = withInternalTheme(AppbarContent);\nexport { AppbarContentWithTheme as AppbarContent };","map":{"version":3,"sources":["AppbarContent.tsx"],"names":["React","color","withInternalTheme","white","Text","modeTextVariant","AppbarContent","titleColor","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","theme","title","mode","rest","isV3","colors","titleTextColor","onSurface","subtitleColor","alpha","rgb","string","modeContainerStyles","small","styles","v3DefaultContainer","medium","v3MediumContainer","large","v3LargeContainer","variant","container","fonts","Platform","OS","regular","displayName","StyleSheet","create","flex","paddingHorizontal","justifyContent","paddingBottom","paddingTop","fontSize","AppbarContentWithTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAYA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,iBAAT;AACA,SAASC,KAAT;AAMA,OAAOC,IAAP;AACA,SAASC,eAAT;;AAiEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAYT;EAZU,IACdC,UADc,GAYf,IAZe,CACrBN,KADqB;EAAA,IAErBO,QAFqB,GAYf,IAZe,CAErBA,QAFqB;EAAA,IAGrBC,aAHqB,GAYf,IAZe,CAGrBA,aAHqB;EAAA,IAIrBC,OAJqB,GAYf,IAZe,CAIrBA,OAJqB;EAAA,IAKrBC,KALqB,GAYf,IAZe,CAKrBA,KALqB;EAAA,IAMrBC,QANqB,GAYf,IAZe,CAMrBA,QANqB;EAAA,IAOrBC,UAPqB,GAYf,IAZe,CAOrBA,UAPqB;EAAA,IAQrBC,KARqB,GAYf,IAZe,CAQrBA,KARqB;EAAA,IASrBC,KATqB,GAYf,IAZe,CASrBA,KATqB;EAAA,gBAYf,IAZe,CAUrBC,IAVqB;EAAA,IAUrBA,IAVqB,0BAUd,OAVc;EAAA,IAWlBC,IAXkB,4BAYf,IAZe;;EAarB,IAAQC,IAAR,GAAyBJ,KAAzB,CAAQI,IAAR;EAAA,IAAcC,MAAd,GAAyBL,KAAzB,CAAcK,MAAd;EAEA,IAAMC,cAAc,GAAGb,UAAU,GAC7BA,UAD6B,GAE7BW,IAAI,GACJC,MAAM,CAACE,SADH,GAEJlB,KAJJ;EAMA,IAAMmB,aAAa,GAAGrB,KAAK,CAACmB,cAAD,CAALnB,CAAsBsB,KAAtBtB,CAA4B,GAA5BA,EAAiCuB,GAAjCvB,GAAuCwB,MAAvCxB,EAAtB;EAEA,IAAMyB,mBAAmB,GAAG;IAC1BC,KAAK,EAAEC,MAAM,CAACC,kBADY;IAE1BC,MAAM,EAAEF,MAAM,CAACG,iBAFW;IAG1BC,KAAK,EAAEJ,MAAM,CAACK,gBAHY;IAI1B,kBAAkBL,MAAM,CAACC;EAJC,CAA5B;EAOA,IAAMK,OAAO,GAAG7B,eAAe,CAACW,IAAD,CAA/B;EAEA,OACE,KAAA,CAAA,aAAA,CAAC,wBAAD,EAAyB;IACvB,iBAAiB,EAAC,QADK;IAEvB,OAAO,EAAEN,OAFc;IAGvB,QAAQ,EAAE,CAACA;EAHY,CAAzB,EAKE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,QAAA,CAAA;IACH,aAAa,EAAC,UADX;IAEH,KAAK,EAAE,CAACkB,MAAM,CAACO,SAAR,EAAmBjB,IAAI,IAAIQ,mBAAmB,CAACV,IAAD,CAA9C,EAAsDL,KAAtD;EAFJ,CAAA,EAGCM,IAHD,CAAL,EAKE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,QAAA,CAAA,EAAA,EACEC,IAAI,IAAI;IAAEgB,OAAAA,EAAAA;EAAF,CADV,EACqB;IACxB,GAAG,EAAEtB,QADmB;IAExB,KAAK,EAAE;MAEHX,KAAK,EAAEmB;IAFJ,GAGCF,IAAI,GACJJ,KAAK,CAACsB,KAANtB,CAAYoB,OAAZpB,CADI,GAEJuB,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GACAvB,KAAK,CAACsB,KAANtB,CAAYyB,OADZF,GAEAvB,KAAK,CAACsB,KAANtB,CAAYgB,MAPb,GASL,CAACZ,IAAD,IAASU,MAAM,CAACb,KATX,EAULF,UAVK,CAFiB;IAcxB,aAAa,EAAE,CAdS;IAexB,UAAU,EAAA,IAfc;IAiBxB,iBAAiB,EAAEwB,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GAAwB,SAAxBA,GAAoC;EAjB/B,CADrB,CAAL,EAoBGtB,KApBH,CALF,EA2BG,CAACG,IAAD,IAASV,QAAT,GACC,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;IACH,KAAK,EAAE,CAACoB,MAAM,CAACpB,QAAR,EAAkB;MAAEP,KAAK,EAAEqB;IAAT,CAAlB,EAA4Cb,aAA5C,CADJ;IAEH,aAAa,EAAE;EAFZ,CAAL,EAIGD,QAJH,CADD,GAOG,IAlCN,CALF,CADF;AA4CD,CA5ED;;AA8EAF,aAAa,CAACkC,WAAdlC,GAA4B,gBAA5BA;AAEA,IAAMsB,MAAM,GAAGa,UAAU,CAACC,MAAXD,CAAkB;EAC/BN,SAAS,EAAE;IACTQ,IAAI,EAAE,CADG;IAETC,iBAAiB,EAAE;EAFV,CADoB;EAK/Bf,kBAAkB,EAAE;IAClBe,iBAAiB,EAAE;EADD,CALW;EAQ/Bb,iBAAiB,EAAE;IACjBa,iBAAiB,EAAE,CADF;IAEjBC,cAAc,EAAE,UAFC;IAGjBC,aAAa,EAAE;EAHE,CARY;EAa/Bb,gBAAgB,EAAE;IAChBW,iBAAiB,EAAE,CADH;IAEhBG,UAAU,EAAE,EAFI;IAGhBF,cAAc,EAAE,UAHA;IAIhBC,aAAa,EAAE;EAJC,CAba;EAmB/B/B,KAAK,EAAE;IACLiC,QAAQ,EAAEX,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GAAwB,EAAxBA,GAA6B;EADlC,CAnBwB;EAsB/B7B,QAAQ,EAAE;IACRwC,QAAQ,EAAEX,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GAAwB,EAAxBA,GAA6B;EAD/B;AAtBqB,CAAlBI,CAAf;AA2BA,eAAevC,iBAAiB,CAACI,aAAD,CAAhC;AAGA,IAAM2C,sBAAsB,GAAG/C,iBAAiB,CAACI,aAAD,CAAhD;AAEA,SAAS2C,sBAAsB,IAAI3C,aAAnC","sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type {\n  $RemoveChildren,\n  InternalTheme,\n  MD3TypescaleKey,\n} from '../../types';\nimport Text from '../Typography/Text';\nimport { modeTextVariant } from './utils';\n\nexport type Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<Text>;\n  /**\n   * @deprecated Deprecated in v5.x\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * @deprecated Deprecated in v5.x\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * @internal\n   */\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/appbar-content.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarContent = ({\n  color: titleColor,\n  subtitle,\n  subtitleStyle,\n  onPress,\n  style,\n  titleRef,\n  titleStyle,\n  theme,\n  title,\n  mode = 'small',\n  ...rest\n}: Props) => {\n  const { isV3, colors } = theme;\n\n  const titleTextColor = titleColor\n    ? titleColor\n    : isV3\n    ? colors.onSurface\n    : white;\n\n  const subtitleColor = color(titleTextColor).alpha(0.7).rgb().string();\n\n  const modeContainerStyles = {\n    small: styles.v3DefaultContainer,\n    medium: styles.v3MediumContainer,\n    large: styles.v3LargeContainer,\n    'center-aligned': styles.v3DefaultContainer,\n  };\n\n  const variant = modeTextVariant[mode] as MD3TypescaleKey;\n\n  return (\n    <TouchableWithoutFeedback\n      accessibilityRole=\"button\"\n      onPress={onPress}\n      disabled={!onPress}\n    >\n      <View\n        pointerEvents=\"box-none\"\n        style={[styles.container, isV3 && modeContainerStyles[mode], style]}\n        {...rest}\n      >\n        <Text\n          {...(isV3 && { variant })}\n          ref={titleRef}\n          style={[\n            {\n              color: titleTextColor,\n              ...(isV3\n                ? theme.fonts[variant]\n                : Platform.OS === 'ios'\n                ? theme.fonts.regular\n                : theme.fonts.medium),\n            },\n            !isV3 && styles.title,\n            titleStyle,\n          ]}\n          numberOfLines={1}\n          accessible\n          // @ts-ignore Type '\"heading\"' is not assignable to type ...\n          accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n        >\n          {title}\n        </Text>\n        {!isV3 && subtitle ? (\n          <Text\n            style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n            numberOfLines={1}\n          >\n            {subtitle}\n          </Text>\n        ) : null}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nAppbarContent.displayName = 'Appbar.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  v3DefaultContainer: {\n    paddingHorizontal: 0,\n  },\n  v3MediumContainer: {\n    paddingHorizontal: 0,\n    justifyContent: 'flex-end',\n    paddingBottom: 24,\n  },\n  v3LargeContainer: {\n    paddingHorizontal: 0,\n    paddingTop: 36,\n    justifyContent: 'flex-end',\n    paddingBottom: 28,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withInternalTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nconst AppbarContentWithTheme = withInternalTheme(AppbarContent);\n// @component-docs ignore-next-line\nexport { AppbarContentWithTheme as AppbarContent };\n"]},"metadata":{},"sourceType":"module"}
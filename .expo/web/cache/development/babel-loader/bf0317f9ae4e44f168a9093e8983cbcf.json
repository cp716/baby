{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\", \"theme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withInternalTheme } from \"../core/theming\";\nvar DURATION = 2400;\n\nvar ActivityIndicator = function ActivityIndicator(_ref) {\n  var _theme$colors;\n\n  var _ref$animating = _ref.animating,\n      animating = _ref$animating === void 0 ? true : _ref$animating,\n      indicatorColor = _ref.color,\n      _ref$hidesWhenStopped = _ref.hidesWhenStopped,\n      hidesWhenStopped = _ref$hidesWhenStopped === void 0 ? true : _ref$hidesWhenStopped,\n      _ref$size = _ref.size,\n      indicatorSize = _ref$size === void 0 ? 'small' : _ref$size,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      timer = _React$useRef.current;\n\n  var _React$useRef2 = React.useRef(new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)),\n      fade = _React$useRef2.current;\n\n  var rotation = React.useRef(undefined);\n  var scale = theme.animation.scale;\n  var startRotation = React.useCallback(function () {\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true\n    }).start();\n\n    if (rotation.current) {\n      timer.setValue(0);\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  var stopRotation = function stopRotation() {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(function () {\n    if (rotation.current === undefined) {\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n  var color = indicatorColor || ((_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary);\n  var size = typeof indicatorSize === 'string' ? indicatorSize === 'small' ? 24 : 48 : indicatorSize ? indicatorSize : 24;\n  var frames = 60 * DURATION / 1000;\n  var easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  var containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden'\n  };\n  return React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest, {\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityState: {\n      busy: animating\n    }\n  }), React.createElement(Animated.View, {\n    style: [{\n      width: size,\n      height: size,\n      opacity: fade\n    }],\n    collapsable: false\n  }, [0, 1].map(function (index) {\n    var inputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      return frameIndex / (frames - 1);\n    });\n    var outputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      var progress = 2 * frameIndex / (frames - 1);\n      var rotation = index ? +(360 - 15) : -(180 - 15);\n\n      if (progress > 1.0) {\n        progress = 2.0 - progress;\n      }\n\n      var direction = index ? -1 : +1;\n      return direction * (180 - 30) * easing(progress) + rotation + \"deg\";\n    });\n    var layerStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        rotate: timer.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0 + 30 + 15 + \"deg\", 2 * 360 + 30 + 15 + \"deg\"]\n        })\n      }]\n    };\n    var viewportStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        translateY: index ? -size / 2 : 0\n      }, {\n        rotate: timer.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        })\n      }]\n    };\n    var offsetStyle = index ? {\n      top: size / 2\n    } : null;\n    var lineStyle = {\n      width: size,\n      height: size,\n      borderColor: color,\n      borderWidth: size / 10,\n      borderRadius: size / 2\n    };\n    return React.createElement(Animated.View, {\n      key: index,\n      style: [styles.layer]\n    }, React.createElement(Animated.View, {\n      style: layerStyle\n    }, React.createElement(Animated.View, {\n      style: [containerStyle, offsetStyle],\n      collapsable: false\n    }, React.createElement(Animated.View, {\n      style: viewportStyle\n    }, React.createElement(Animated.View, {\n      style: containerStyle,\n      collapsable: false\n    }, React.createElement(Animated.View, {\n      style: lineStyle\n    }))))));\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  layer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n});\nexport default withInternalTheme(ActivityIndicator);","map":{"version":3,"sources":["ActivityIndicator.tsx"],"names":["React","withInternalTheme","DURATION","ActivityIndicator","animating","color","indicatorColor","hidesWhenStopped","size","indicatorSize","style","theme","rest","current","timer","useRef","Animated","Value","fade","rotation","undefined","animation","scale","startRotation","useCallback","timing","duration","toValue","isInteraction","useNativeDriver","start","setValue","loop","stopRotation","stop","useEffect","easing","Easing","linear","Platform","OS","colors","primary","frames","bezier","containerStyle","width","height","overflow","styles","container","busy","opacity","map","index","inputRange","Array","from","_","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","interpolate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","layer","StyleSheet","create","justifyContent","alignItems","absoluteFillObject"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAWA,SAASC,iBAAT;AA2BA,IAAMC,QAAQ,GAAG,IAAjB;;AAsBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,IAAA,EAQb;EAAA,IAAA,aAAA;;EARc,qBAQnB,IARmB,CACzBC,SADyB;EAAA,IACzBA,SADyB,+BACb,IADa;EAAA,IAElBE,cAFkB,GAQnB,IARmB,CAEzBD,KAFyB;EAAA,4BAQnB,IARmB,CAGzBE,gBAHyB;EAAA,IAGzBA,gBAHyB,sCAGN,IAHM;EAAA,gBAQnB,IARmB,CAIzBC,IAJyB;EAAA,IAInBC,aAJmB,0BAIH,OAJG;EAAA,IAKzBC,KALyB,GAQnB,IARmB,CAKzBA,KALyB;EAAA,IAMzBC,KANyB,GAQnB,IARmB,CAMzBA,KANyB;EAAA,IAOtBC,IAPsB,4BAQnB,IARmB;;EASzB,oBAA2BZ,KAAK,CAACe,MAANf,CACzB,IAAIgB,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CADyBjB,CAA3B;EAAA,IAAiBc,KAAjB,iBAAQD,OAAR;;EAGA,qBAA0Bb,KAAK,CAACe,MAANf,CACxB,IAAIgB,QAAQ,CAACC,KAAb,CAAmB,CAACb,SAAD,IAAcG,gBAAd,GAAiC,CAAjC,GAAqC,CAAxD,CADwBP,CAA1B;EAAA,IAAiBkB,IAAjB,kBAAQL,OAAR;;EAIA,IAAMM,QAAQ,GAAGnB,KAAK,CAACe,MAANf,CACfoB,SADepB,CAAjB;EAIA,IACesB,KADf,GAEIX,KAFJ,CACEU,SADF,CACeC,KADf;EAIA,IAAMC,aAAa,GAAGvB,KAAK,CAACwB,WAANxB,CAAkB,YAAM;IAE5CgB,QAAQ,CAACS,MAATT,CAAgBE,IAAhBF,EAAsB;MACpBU,QAAQ,EAAE,MAAMJ,KADI;MAEpBK,OAAO,EAAE,CAFW;MAGpBC,aAAa,EAAE,KAHK;MAIpBC,eAAe,EAAE;IAJG,CAAtBb,EAKGc,KALHd;;IAQA,IAAIG,QAAQ,CAACN,OAAb,EAAsB;MACpBC,KAAK,CAACiB,QAANjB,CAAe,CAAfA;MAEAE,QAAQ,CAACgB,IAAThB,CAAcG,QAAQ,CAACN,OAAvBG,EAAgCc,KAAhCd;IACF;EACD,CAfqBhB,EAenB,CAACsB,KAAD,EAAQJ,IAAR,EAAcJ,KAAd,CAfmBd,CAAtB;;EAiBA,IAAMiC,YAAY,GAAG,SAAfA,YAAe,GAAM;IACzB,IAAId,QAAQ,CAACN,OAAb,EAAsB;MACpBM,QAAQ,CAACN,OAATM,CAAiBe,IAAjBf;IACF;EACD,CAJD;;EAMAnB,KAAK,CAACmC,SAANnC,CAAgB,YAAM;IACpB,IAAImB,QAAQ,CAACN,OAATM,KAAqBC,SAAzB,EAAoC;MAElCD,QAAQ,CAACN,OAATM,GAAmBH,QAAQ,CAACS,MAATT,CAAgBF,KAAhBE,EAAuB;QACxCU,QAAQ,EAAExB,QAD8B;QAExCkC,MAAM,EAAEC,MAAM,CAACC,MAFyB;QAIxCT,eAAe,EAAEU,QAAQ,CAACC,EAATD,KAAgB,KAJO;QAKxCZ,OAAO,EAAE,CAL+B;QAMxCC,aAAa,EAAE;MANyB,CAAvBZ,CAAnBG;IAQF;;IAEA,IAAIf,SAAJ,EAAe;MACbmB,aAAa;IACd,CAFD,MAEO,IAAIhB,gBAAJ,EAAsB;MAE3BS,QAAQ,CAACS,MAATT,CAAgBE,IAAhBF,EAAsB;QACpBU,QAAQ,EAAE,MAAMJ,KADI;QAEpBK,OAAO,EAAE,CAFW;QAGpBE,eAAe,EAAE,IAHG;QAIpBD,aAAa,EAAE;MAJK,CAAtBZ,EAKGc,KALHd,CAKSiB,YALTjB;IAMD,CARM,MAQA;MACLiB,YAAY;IACd;EACD,CA1BDjC,EA0BG,CAACI,SAAD,EAAYc,IAAZ,EAAkBX,gBAAlB,EAAoCgB,aAApC,EAAmDD,KAAnD,EAA0DR,KAA1D,CA1BHd;EA4BA,IAAMK,KAAK,GAAGC,cAAc,KAAA,CAAA,aAAA,GAAIK,KAAK,CAAC8B,MAAV,MAAgB,IAAhB,IAAgB,aAAA,KAAA,KAAA,CAAhB,GAAgB,KAAA,CAAhB,GAAI9B,aAAAA,CAAc+B,OAAlB,CAA5B;EACA,IAAMlC,IAAI,GACR,OAAOC,aAAP,KAAyB,QAAzB,GACIA,aAAa,KAAK,OAAlBA,GACE,EADFA,GAEE,EAHN,GAIIA,aAAa,GACbA,aADa,GAEb,EAPN;EASA,IAAMkC,MAAM,GAAI,KAAKzC,QAAL,GAAiB,IAAjC;EACA,IAAMkC,MAAM,GAAGC,MAAM,CAACO,MAAPP,CAAc,GAAdA,EAAmB,GAAnBA,EAAwB,GAAxBA,EAA6B,GAA7BA,CAAf;EACA,IAAMQ,cAAc,GAAG;IACrBC,KAAK,EAAEtC,IADc;IAErBuC,MAAM,EAAEvC,IAAI,GAAG,CAFM;IAGrBwC,QAAQ,EAAE;EAHW,CAAvB;EAMA,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,QAAA,CAAA;IACH,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBxC,KAAnB;EADJ,CAAA,EAECE,IAFD,EAEK;IACR,UAAU,EAAA,IADF;IAER,iBAAiB,EAAC,aAFV;IAGR,kBAAkB,EAAE;MAAEuC,IAAI,EAAE/C;IAAR;EAHZ,CAFL,CAAL,EAOE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;IACZ,KAAK,EAAE,CAAC;MAAE0C,KAAK,EAAEtC,IAAT;MAAeuC,MAAM,EAAEvC,IAAvB;MAA6B4C,OAAO,EAAElC;IAAtC,CAAD,CADK;IAEZ,WAAW,EAAE;EAFD,CAAd,EAIG,CAAC,CAAD,EAAI,CAAJ,EAAOmC,GAAP,CAAYC,UAAAA,KAAK,EAAK;IAErB,IAAMC,UAAU,GAAGC,KAAK,CAACC,IAAND,CACjB,IAAIA,KAAJ,CAAUb,MAAV,CADiBa,EAEjB,UAACE,CAAD,EAAIC,UAAJ;MAAA,OAAmBA,UAAU,IAAIhB,MAAM,GAAG,CAAb,CAA7B;IAAA,CAFiBa,CAAnB;IAIA,IAAMI,WAAW,GAAGJ,KAAK,CAACC,IAAND,CAAW,IAAIA,KAAJ,CAAUb,MAAV,CAAXa,EAA8B,UAACE,CAAD,EAAIC,UAAJ,EAAmB;MACnE,IAAIE,QAAQ,GAAI,IAAIF,UAAJ,IAAmBhB,MAAM,GAAG,CAA5B,CAAhB;MACA,IAAMxB,QAAQ,GAAGmC,KAAK,GAAG,EAAE,MAAM,EAAR,CAAH,GAAiB,EAAE,MAAM,EAAR,CAAvC;;MAEA,IAAIO,QAAQ,GAAG,GAAf,EAAoB;QAClBA,QAAQ,GAAG,MAAMA,QAAjBA;MACF;;MAEA,IAAMC,SAAS,GAAGR,KAAK,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAhC;MAEA,OAAUQ,SAAS,IAAI,MAAM,EAAV,CAATA,GAAyB1B,MAAM,CAACyB,QAAD,CAA/BC,GAA4C3C,QAAtD;IACD,CAXmBqC,CAApB;IAaA,IAAMO,UAAU,GAAG;MACjBjB,KAAK,EAAEtC,IADU;MAEjBuC,MAAM,EAAEvC,IAFS;MAGjBwD,SAAS,EAAE,CACT;QACEC,MAAM,EAAEnD,KAAK,CAACoD,WAANpD,CAAkB;UACxByC,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADY;UAExBK,WAAW,EAAE,CAAI,IAAI,EAAJ,GAAS,EAAb,UAAyB,IAAI,GAAJ,GAAU,EAAV,GAAe,EAAxC;QAFW,CAAlB9C;MADV,CADS;IAHM,CAAnB;IAaA,IAAMqD,aAAa,GAAG;MACpBrB,KAAK,EAAEtC,IADa;MAEpBuC,MAAM,EAAEvC,IAFY;MAGpBwD,SAAS,EAAE,CACT;QACEI,UAAU,EAAEd,KAAK,GAAG,CAAC9C,IAAD,GAAQ,CAAX,GAAe;MADlC,CADS,EAIT;QACEyD,MAAM,EAAEnD,KAAK,CAACoD,WAANpD,CAAkB;UAAEyC,UAAU,EAAVA,UAAF;UAAcK,WAAAA,EAAAA;QAAd,CAAlB9C;MADV,CAJS;IAHS,CAAtB;IAaA,IAAMuD,WAAW,GAAGf,KAAK,GAAG;MAAEgB,GAAG,EAAE9D,IAAI,GAAG;IAAd,CAAH,GAAuB,IAAhD;IAEA,IAAM+D,SAAS,GAAG;MAChBzB,KAAK,EAAEtC,IADS;MAEhBuC,MAAM,EAAEvC,IAFQ;MAGhBgE,WAAW,EAAEnE,KAHG;MAIhBoE,WAAW,EAAEjE,IAAI,GAAG,EAJJ;MAKhBkE,YAAY,EAAElE,IAAI,GAAG;IALL,CAAlB;IAQA,OACE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;MAAC,GAAG,EAAE8C,KAAN;MAAa,KAAK,EAAE,CAACL,MAAM,CAAC0B,KAAR;IAApB,CAAd,EACE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;MAAC,KAAK,EAAEZ;IAAR,CAAd,EACE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;MACZ,KAAK,EAAE,CAAClB,cAAD,EAAiBwB,WAAjB,CADK;MAEZ,WAAW,EAAE;IAFD,CAAd,EAIE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;MAAC,KAAK,EAAEF;IAAR,CAAd,EACE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;MAAC,KAAK,EAAEtB,cAAR;MAAwB,WAAW,EAAE;IAArC,CAAd,EACE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAV,EAAc;MAAC,KAAK,EAAE0B;IAAR,CAAd,CADF,CADF,CAJF,CADF,CADF,CADF;EAgBD,CAvEA,CAJH,CAPF,CADF;AAuFD,CApLD;;AAsLA,IAAMtB,MAAM,GAAG2B,UAAU,CAACC,MAAXD,CAAkB;EAC/B1B,SAAS,EAAE;IACT4B,cAAc,EAAE,QADP;IAETC,UAAU,EAAE;EAFH,CADoB;EAM/BJ,KAAK,kCACAC,UAAU,CAACI,kBADX;IAGHF,cAAc,EAAE,QAHb;IAIHC,UAAU,EAAE;EAJT;AAN0B,CAAlBH,CAAf;AAcA,eAAe3E,iBAAiB,CAACE,iBAAD,CAAhC","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { InternalTheme } from '../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, MD2Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={MD2Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ActivityIndicator = ({\n  animating = true,\n  color: indicatorColor,\n  hidesWhenStopped = true,\n  size: indicatorSize = 'small',\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(\n    new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)\n  );\n\n  const rotation = React.useRef<Animated.CompositeAnimation | undefined>(\n    undefined\n  );\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  const startRotation = React.useCallback(() => {\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (rotation.current) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  const stopRotation = () => {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(() => {\n    if (rotation.current === undefined) {\n      // Circular animation in loop\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        // Animated.loop does not work if useNativeDriver is true on web\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false,\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      // Hide indicator first and then stop rotation\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n\n  const color = indicatorColor || theme.colors?.primary;\n  const size =\n    typeof indicatorSize === 'string'\n      ? indicatorSize === 'small'\n        ? 24\n        : 48\n      : indicatorSize\n      ? indicatorSize\n      : 24;\n\n  const frames = (60 * DURATION) / 1000;\n  const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  const containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden' as const,\n  };\n\n  return (\n    <View\n      style={[styles.container, style]}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: animating }}\n    >\n      <Animated.View\n        style={[{ width: size, height: size, opacity: fade }]}\n        collapsable={false}\n      >\n        {[0, 1].map((index) => {\n          // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n          const inputRange = Array.from(\n            new Array(frames),\n            (_, frameIndex) => frameIndex / (frames - 1)\n          );\n          const outputRange = Array.from(new Array(frames), (_, frameIndex) => {\n            let progress = (2 * frameIndex) / (frames - 1);\n            const rotation = index ? +(360 - 15) : -(180 - 15);\n\n            if (progress > 1.0) {\n              progress = 2.0 - progress;\n            }\n\n            const direction = index ? -1 : +1;\n\n            return `${direction * (180 - 30) * easing(progress) + rotation}deg`;\n          });\n\n          const layerStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                rotate: timer.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [`${0 + 30 + 15}deg`, `${2 * 360 + 30 + 15}deg`],\n                }),\n              },\n            ],\n          };\n\n          const viewportStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                translateY: index ? -size / 2 : 0,\n              },\n              {\n                rotate: timer.interpolate({ inputRange, outputRange }),\n              },\n            ],\n          };\n\n          const offsetStyle = index ? { top: size / 2 } : null;\n\n          const lineStyle = {\n            width: size,\n            height: size,\n            borderColor: color,\n            borderWidth: size / 10,\n            borderRadius: size / 2,\n          };\n\n          return (\n            <Animated.View key={index} style={[styles.layer]}>\n              <Animated.View style={layerStyle}>\n                <Animated.View\n                  style={[containerStyle, offsetStyle]}\n                  collapsable={false}\n                >\n                  <Animated.View style={viewportStyle}>\n                    <Animated.View style={containerStyle} collapsable={false}>\n                      <Animated.View style={lineStyle} />\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            </Animated.View>\n          );\n        })}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withInternalTheme(ActivityIndicator);\n"]},"metadata":{},"sourceType":"module"}
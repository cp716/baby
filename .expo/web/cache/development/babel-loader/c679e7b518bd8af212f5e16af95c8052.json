{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport setColor from 'color';\nimport { grey400, grey800, grey50, grey700, white, black } from \"../../styles/themes/v2/colors\";\n\nvar getCheckedColor = function getCheckedColor(_ref) {\n  var theme = _ref.theme,\n      color = _ref.color;\n\n  if (color) {\n    return color;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nvar getThumbTintColor = function getThumbTintColor(_ref2) {\n  var theme = _ref2.theme,\n      disabled = _ref2.disabled,\n      value = _ref2.value,\n      checkedColor = _ref2.checkedColor;\n  var isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return undefined;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n\n    return grey400;\n  }\n\n  if (value) {\n    return checkedColor;\n  }\n\n  if (theme.dark) {\n    return grey400;\n  }\n\n  return grey50;\n};\n\nvar getOnTintColor = function getOnTintColor(_ref3) {\n  var theme = _ref3.theme,\n      disabled = _ref3.disabled,\n      value = _ref3.value,\n      checkedColor = _ref3.checkedColor;\n  var isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return checkedColor;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n\n  if (theme.dark) {\n    return grey700;\n  }\n\n  return 'rgb(178, 175, 177)';\n};\n\nexport var getSwitchColor = function getSwitchColor(_ref4) {\n  var theme = _ref4.theme,\n      disabled = _ref4.disabled,\n      value = _ref4.value,\n      color = _ref4.color;\n  var checkedColor = getCheckedColor({\n    theme: theme,\n    color: color\n  });\n  return {\n    onTintColor: getOnTintColor({\n      theme: theme,\n      disabled: disabled,\n      value: value,\n      checkedColor: checkedColor\n    }),\n    thumbTintColor: getThumbTintColor({\n      theme: theme,\n      disabled: disabled,\n      value: value,\n      checkedColor: checkedColor\n    }),\n    checkedColor: checkedColor\n  };\n};","map":{"version":3,"sources":["utils.ts"],"names":["setColor","grey400","grey800","grey50","grey700","white","black","getCheckedColor","theme","color","isV3","colors","primary","accent","getThumbTintColor","disabled","value","checkedColor","isIOS","Platform","OS","undefined","dark","getOnTintColor","alpha","rgb","string","getSwitchColor","onTintColor","thumbTintColor"],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\n\nimport setColor from 'color';\n\nimport {\n  grey400,\n  grey800,\n  grey50,\n  grey700,\n  white,\n  black,\n} from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  value?: boolean;\n};\n\nconst getCheckedColor = ({\n  theme,\n  color,\n}: {\n  theme: InternalTheme;\n  color?: string;\n}) => {\n  if (color) {\n    return color;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getThumbTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return undefined;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n    return grey400;\n  }\n\n  if (value) {\n    return checkedColor;\n  }\n\n  if (theme.dark) {\n    return grey400;\n  }\n  return grey50;\n};\n\nconst getOnTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return checkedColor;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n\n  if (theme.dark) {\n    return grey700;\n  }\n  return 'rgb(178, 175, 177)';\n};\n\nexport const getSwitchColor = ({\n  theme,\n  disabled,\n  value,\n  color,\n}: BaseProps & { color?: string }) => {\n  const checkedColor = getCheckedColor({ theme, color });\n\n  return {\n    onTintColor: getOnTintColor({ theme, disabled, value, checkedColor }),\n    thumbTintColor: getThumbTintColor({ theme, disabled, value, checkedColor }),\n    checkedColor,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
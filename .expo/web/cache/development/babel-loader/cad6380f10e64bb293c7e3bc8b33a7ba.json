{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"size\", \"style\", \"theme\"],\n    _excluded2 = [\"backgroundColor\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withInternalTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/themes/v2/colors\";\nimport getContrastingColor from \"../../utils/getContrastingColor\";\nimport Icon from \"../Icon\";\nvar defaultSize = 64;\n\nvar Avatar = function Avatar(_ref) {\n  var _theme$colors, _rest$color;\n\n  var icon = _ref.icon,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? defaultSize : _ref$size,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _ref2 = StyleSheet.flatten(style) || {},\n      _ref2$backgroundColor = _ref2.backgroundColor,\n      backgroundColor = _ref2$backgroundColor === void 0 ? (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary : _ref2$backgroundColor,\n      restStyle = _objectWithoutProperties(_ref2, _excluded2);\n\n  var textColor = (_rest$color = rest.color) !== null && _rest$color !== void 0 ? _rest$color : getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  return React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: backgroundColor\n    }, styles.container, restStyle]\n  }, rest), React.createElement(Icon, {\n    source: icon,\n    color: textColor,\n    size: size * 0.6\n  }));\n};\n\nAvatar.displayName = 'Avatar.Icon';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default withInternalTheme(Avatar);","map":{"version":3,"sources":["AvatarIcon.tsx"],"names":["React","withInternalTheme","white","getContrastingColor","Icon","defaultSize","Avatar","icon","size","style","theme","rest","backgroundColor","colors","primary","restStyle","StyleSheet","flatten","textColor","color","width","height","borderRadius","styles","container","displayName","create","justifyContent","alignItems"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAGA,SAASC,iBAAT;AACA,SAASC,KAAT;AAEA,OAAOC,mBAAP;AACA,OAAOC,IAAP;AAEA,IAAMC,WAAW,GAAG,EAApB;;AAyCA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAA,IAAA,EAAgE;EAAA,IAAA,aAAA,EAAA,WAAA;;EAA/D,IAAEC,IAAF,GAA0D,IAA1D,CAAEA,IAAF;EAAA,gBAA0D,IAA1D,CAAQC,IAAR;EAAA,IAAQA,IAAR,0BAAeH,WAAf;EAAA,IAA4BI,KAA5B,GAA0D,IAA1D,CAA4BA,KAA5B;EAAA,IAAmCC,KAAnC,GAA0D,IAA1D,CAAmCA,KAAnC;EAAA,IAA6CC,IAA7C,4BAA0D,IAA1D;;EACd,YACEK,UAAU,CAACC,OAAXD,CAAmBP,KAAnBO,KAA6B,EAD/B;EAAA,kCAAQJ,eAAR;EAAA,IAAQA,eAAR,sCAAuB,CAAA,aAAA,GAAGF,KAAK,CAACG,MAAT,MAAe,IAAf,IAAe,aAAA,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAGH,aAAAA,CAAcI,OAAxC;EAAA,IAAoDC,SAApD;;EAEA,IAAMG,SAAS,GAAA,CAAA,WAAA,GACbP,IAAI,CAACQ,KADQ,MACH,IADG,IACH,WAAA,KAAA,KAAA,CADG,GACH,WADG,GAEbhB,mBAAmB,CAACS,eAAD,EAAkBV,KAAlB,EAAyB,oBAAzB,CAFrB;EAIA,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,QAAA,CAAA;IACH,KAAK,EAAE,CACL;MACEkB,KAAK,EAAEZ,IADT;MAEEa,MAAM,EAAEb,IAFV;MAGEc,YAAY,EAAEd,IAAI,GAAG,CAHvB;MAIEI,eAAAA,EAAAA;IAJF,CADK,EAOLW,MAAM,CAACC,SAPF,EAQLT,SARK;EADJ,CAAA,EAWCJ,IAXD,CAAL,EAaE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;IAAC,MAAM,EAAEJ,IAAT;IAAe,KAAK,EAAEW,SAAtB;IAAiC,IAAI,EAAEV,IAAI,GAAG;EAA9C,CAAL,CAbF,CADF;AAiBD,CAxBD;;AA0BAF,MAAM,CAACmB,WAAPnB,GAAqB,aAArBA;AAEA,IAAMiB,MAAM,GAAGP,UAAU,CAACU,MAAXV,CAAkB;EAC/BQ,SAAS,EAAE;IACTG,cAAc,EAAE,QADP;IAETC,UAAU,EAAE;EAFH;AADoB,CAAlBZ,CAAf;AAOA,eAAef,iBAAiB,CAACK,MAAD,CAAhC","sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport Icon, { IconSource } from '../Icon';\n\nconst defaultSize = 64;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = ({ icon, size = defaultSize, style, theme, ...rest }: Props) => {\n  const { backgroundColor = theme.colors?.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    rest.color ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Icon source={icon} color={textColor} size={size * 0.6} />\n    </View>\n  );\n};\n\nAvatar.displayName = 'Avatar.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withInternalTheme(Avatar);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport DrawerButton from \"../components/DrawerButton\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\nimport { useDateTimeContext } from \"../context/DateTimeContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TestScreen(props) {\n  var _useDateTimeContext = useDateTimeContext(),\n      dateTimeState = _useDateTimeContext.dateTimeState;\n\n  var navigation = props.navigation;\n  useEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return _jsx(DrawerButton, {});\n      }\n    });\n  }, []);\n  var today = new Date();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatePickerVisible = _useState2[0],\n      setDatePickerVisibility = _useState2[1];\n\n  var _useState3 = useState(today),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectTime = _useState4[0],\n      setselectTime = _useState4[1];\n\n  var _useState5 = useState(today.getFullYear() + '年' + (today.getMonth() + 1) + '月' + today.getDate() + '日'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      detailTime = _useState6[0],\n      setDetailTime = _useState6[1];\n\n  var getNewDate = function getNewDate(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    setDetailTime(dateTimeState.month + '月' + dateTimeState.day + '日');\n    setselectTime(new Date(dateTimeState.year, dateTimeState.month - 1));\n  };\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var formatDatetime = function formatDatetime(date) {\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var day = date.getDate();\n    setDetailTime(year + '年' + month + '月' + day + '日');\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    setselectTime(date);\n    formatDatetime(date);\n    hideDatePicker();\n  };\n\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: [styles.dateTime, {\n        height: '15%'\n      }],\n      children: [_jsx(Button, {\n        title: String(detailTime),\n        onPress: showDatePicker\n      }), _jsx(DateTimePickerModal, {\n        isVisible: isDatePickerVisible,\n        value: selectTime,\n        onConfirm: handleConfirm,\n        onCancel: hideDatePicker,\n        mode: \"date\",\n        locale: \"ja\",\n        display: \"spinner\",\n        confirmTextIOS: \"\\u6C7A\\u5B9A\",\n        cancelTextIOS: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\",\n        minuteInterval: 5,\n        headerTextIOS: \"\",\n        textColor: \"blue\",\n        date: selectTime\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F0F4F8'\n  },\n  footer: {\n    height: '25%',\n    width: '100%',\n    position: 'absolute',\n    bottom: 0,\n    borderTopWidth: 1,\n    borderTopColor: 'rgba(0, 0, 0, 100)'\n  },\n  dateTime: {\n    justifyContent: 'center'\n  },\n  tableTitle: {\n    flexDirection: 'row'\n  },\n  advertisement: {\n    height: '40%',\n    alignItems: 'center',\n    backgroundColor: '#ffffff'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","DrawerButton","DateTimePickerModal","Table","TableWrapper","Row","Rows","Col","Cols","Cell","useDateTimeContext","TestScreen","props","dateTimeState","navigation","setOptions","headerLeft","today","Date","isDatePickerVisible","setDatePickerVisibility","selectTime","setselectTime","getFullYear","getMonth","getDate","detailTime","setDetailTime","getNewDate","date","hours","getHours","minutes","getMinutes","month","day","year","showDatePicker","hideDatePicker","formatDatetime","handleConfirm","flex","styles","dateTime","height","String","StyleSheet","create","container","backgroundColor","footer","width","position","bottom","borderTopWidth","borderTopColor","justifyContent","tableTitle","flexDirection","advertisement","alignItems"],"sources":["/Users/atsushi/Dev/baby/src/screens/TestScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, Text, StyleSheet, Button } from 'react-native';\nimport DrawerButton from '../components/DrawerButton';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\nimport { useDateTimeContext } from \"../context/DateTimeContext\";\n\nexport default function TestScreen(props) {\n    const { dateTimeState } = useDateTimeContext();\n\n    const { navigation } = props;\n    useEffect(() => {\n        navigation.setOptions({\n            headerLeft: () => <DrawerButton />,\n        });\n    }, []);\n\n    const today = new Date()\n\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n    const [selectTime, setselectTime] = useState(today);\n    const [detailTime, setDetailTime] = useState(today.getFullYear() + '年' + (today.getMonth()+1) + '月' + today.getDate() + '日');\n\n    const getNewDate = (date) => {\n        const hours = date.getHours();\n        const minutes = date.getMinutes();\n        setDetailTime(dateTimeState.month + '月' + dateTimeState.day + '日')\n        setselectTime(new Date(dateTimeState.year, dateTimeState.month-1 ))\n    }\n    \n    //起動\n    const showDatePicker = () => {\n        setDatePickerVisibility(true);\n    };\n\n    //終了\n    const hideDatePicker = () => {\n        setDatePickerVisibility(false);\n    };\n\n    //表示用のstateへ日時を代入\n    const formatDatetime = (date) => {\n        const year = date.getFullYear()\n        const month = (date.getMonth()+1)\n        const day = date.getDate()\n        setDetailTime(year + '年' + month + '月' + day + '日');\n    };\n\n    //決定ボタン押下時の処理\n    const handleConfirm = (date) => {\n        setselectTime(date);\n        formatDatetime(date);\n        hideDatePicker();\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <View style={[styles.dateTime , {height: '15%'}]}>\n                <Button title={String(detailTime)} onPress={showDatePicker} />\n                <DateTimePickerModal\n                                isVisible={isDatePickerVisible}\n                                value={selectTime}\n                                onConfirm={handleConfirm}\n                                onCancel={hideDatePicker}\n                                mode=\"date\"//入力項目\n                                locale='ja'//日本語化\n                                display=\"spinner\"//UIタイプ\n                                confirmTextIOS=\"決定\"//決定ボタンテキスト\n                                cancelTextIOS=\"キャンセル\"//キャンセルボタンテキスト\n                                minuteInterval={5}//分数間隔\n                                headerTextIOS=\"\"//入力欄ヘッダーテキスト\n                                textColor=\"blue\"//ピッカーカラー\n                                date={selectTime}//ピッカー日付デフォルト\n                />\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#F0F4F8',\n    },\n    footer: {\n        height:'25%',\n        width:'100%',\n        position:'absolute',\n        bottom: 0,\n        borderTopWidth: 1,\n        borderTopColor : 'rgba(0, 0, 0, 100)',\n        //paddingBottom: 50,\n    },\n    dateTime: {\n        //backgroundColor: '#ffffff',\n        //flexDirection: 'row',\n        //paddingVertical: 16,\n        //justifyContent: 'center',\n        //borderTopWidth: 0.5,\n        //borderBottomWidth: 0.5,\n        //borderTopColor : 'rgba(0, 0, 0, 100)',\n        //borderBottomColor: 'rgba(0, 0, 0, 100)',\n        //height: 50,\n        //marginBottom:1,\n        //marginBottom:1,\n        //textAlign: 'center',\n        justifyContent: 'center',\n        //alignItems: 'center',\n        //position: 'absolute',\n        //marginTop: 'auto',\n        //marginBottom: 'auto',\n        //fontSize: 30,\n    },\n    tableTitle: {\n        flexDirection: 'row',\n    },\n    advertisement: {\n        height: '40%',\n        //width: '50%',\n        alignItems:'center',\n        backgroundColor: '#ffffff',\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport MilkEditForm from \"../components/EditForm/MilkEditForm\";\nimport FoodEditForm from \"../components/EditForm/FoodEditForm\";\nimport DiseaseEditForm from \"../components/EditForm/DiseaseEditForm\";\nimport ToiletEditForm from \"../components/EditForm/ToiletEditForm\";\nimport FreeEditForm from \"../components/EditForm/FreeEditForm\";\nimport { useDateTimeContext } from \"../context/DateTimeContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DetailScreen(props) {\n  var navigation = props.navigation;\n\n  var _useDateTimeContext = useDateTimeContext(),\n      dateTimeState = _useDateTimeContext.dateTimeState,\n      dateTimeDispatch = _useDateTimeContext.dateTimeDispatch;\n\n  var babyData = props.babyData;\n  var toggleModal = props.toggleModal;\n  var month = babyData.updatedAt.getMonth();\n  var day = babyData.updatedAt.getDate();\n  var hours = babyData.updatedAt.getHours();\n  var minutes = babyData.updatedAt.getMinutes();\n  var mdhm = month + 1 + '月' + day + '日' + hours + '時' + minutes + '分';\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatePickerVisible = _useState2[0],\n      setDatePickerVisibility = _useState2[1];\n\n  var _useState3 = useState(babyData.updatedAt),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectTime = _useState4[0],\n      setselectTime = _useState4[1];\n\n  var _useState5 = useState(mdhm),\n      _useState6 = _slicedToArray(_useState5, 2),\n      detailTime = _useState6[0],\n      setDetailTime = _useState6[1];\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var formatDatetime = function formatDatetime(date) {\n    var month = date.getMonth();\n    var day = date.getDate();\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    setDetailTime(month + 1 + '月' + day + '日' + hours + '時' + minutes + '分');\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    setselectTime(date);\n    formatDatetime(date);\n    dateTimeDispatch({\n      type: \"timeUpdate\",\n      hours: dateTimeState.hours,\n      minutes: dateTimeState.minutes\n    });\n    hideDatePicker();\n  };\n\n  return _jsxs(View, {\n    style: modalStyles.container,\n    children: [_jsx(Text, {\n      style: modalStyles.title,\n      children: \"\\u8A73\\u7D30\\u753B\\u9762\"\n    }), _jsxs(View, {\n      children: [_jsx(Button, {\n        title: String(detailTime),\n        onPress: showDatePicker\n      }), _jsx(DateTimePickerModal, {\n        isVisible: isDatePickerVisible,\n        value: selectTime,\n        onConfirm: handleConfirm,\n        onCancel: hideDatePicker,\n        mode: \"time\",\n        locale: \"ja\",\n        display: \"spinner\",\n        confirmTextIOS: \"\\u6C7A\\u5B9A\",\n        cancelTextIOS: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\",\n        minuteInterval: 5,\n        headerTextIOS: \"\",\n        textColor: \"blue\",\n        date: selectTime\n      })]\n    }), _jsx(View, {\n      children: function () {\n        if (babyData.category == 'JUNYU' || babyData.category == 'MILK' || babyData.category == 'BONYU') {\n          return _jsx(MilkEditForm, {\n            selectTime: selectTime,\n            babyData: babyData,\n            toggleModal: toggleModal\n          });\n        } else if (babyData.category == 'FOOD') {\n          return _jsx(FoodEditForm, {\n            selectTime: selectTime,\n            babyData: babyData,\n            toggleModal: toggleModal\n          });\n        } else if (babyData.category == 'TOILET') {\n          return _jsx(ToiletEditForm, {\n            selectTime: selectTime,\n            babyData: babyData,\n            toggleModal: toggleModal\n          });\n        } else if (babyData.category == 'DISEASE') {\n          return _jsx(DiseaseEditForm, {\n            selectTime: selectTime,\n            babyData: babyData,\n            toggleModal: toggleModal\n          });\n        } else if (babyData.category == 'FREE') {\n          return _jsx(FreeEditForm, {\n            selectTime: selectTime,\n            babyData: babyData,\n            toggleModal: toggleModal\n          });\n        }\n      }()\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  inputTypeContainer: {\n    paddingHorizontal: 27,\n    paddingVertical: 10,\n    height: 50,\n    backgroundColor: '#987652',\n    flexDirection: 'row'\n  },\n  inputContainer: {\n    paddingHorizontal: 27,\n    paddingVertical: 10,\n    height: 150,\n    backgroundColor: '#859602'\n  },\n  input: {\n    flex: 1,\n    textAlignVertical: 'top',\n    fontSize: 16,\n    lineHeight: 24,\n    backgroundColor: '#ffffff'\n  },\n  iconStyle: {\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  }\n});\nvar modalStyles = StyleSheet.create({\n  modalButton: {\n    backgroundColor: '#FFF',\n    borderColor: '#36C1A7',\n    borderWidth: 1,\n    borderRadius: 10\n  },\n  modalButtonText: {\n    color: '#36C1A7',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    padding: 10,\n    fontSize: 20\n  },\n  container: {\n    backgroundColor: '#FFF',\n    padding: '5%',\n    borderColor: '#36C1A7',\n    borderWidth: 3,\n    borderRadius: 20\n  },\n  title: {\n    color: '#36C1A7',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","DateTimePickerModal","MilkEditForm","FoodEditForm","DiseaseEditForm","ToiletEditForm","FreeEditForm","useDateTimeContext","DetailScreen","props","navigation","dateTimeState","dateTimeDispatch","babyData","toggleModal","month","updatedAt","getMonth","day","getDate","hours","getHours","minutes","getMinutes","mdhm","isDatePickerVisible","setDatePickerVisibility","selectTime","setselectTime","detailTime","setDetailTime","showDatePicker","hideDatePicker","formatDatetime","date","handleConfirm","type","modalStyles","container","title","String","category","styles","StyleSheet","create","flex","inputTypeContainer","paddingHorizontal","paddingVertical","height","backgroundColor","flexDirection","inputContainer","input","textAlignVertical","fontSize","lineHeight","iconStyle","marginLeft","marginRight","modalButton","borderColor","borderWidth","borderRadius","modalButtonText","color","fontWeight","textAlign","padding"],"sources":["/Users/atsushi/Dev/baby/src/screens/DetailScreen.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, View, StyleSheet, Text } from \"react-native\";\n\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport MilkEditForm from \"../components/EditForm/MilkEditForm\";\nimport FoodEditForm from \"../components/EditForm/FoodEditForm\";\nimport DiseaseEditForm from \"../components/EditForm/DiseaseEditForm\";\nimport ToiletEditForm from \"../components/EditForm/ToiletEditForm\";\nimport FreeEditForm from \"../components/EditForm/FreeEditForm\";\nimport { useDateTimeContext } from '../context/DateTimeContext';\n\nexport default function DetailScreen(props) {\n    const { navigation } = props;\n    const { dateTimeState, dateTimeDispatch } = useDateTimeContext();\n    const { babyData }  = props;\n    const { toggleModal } = props;\n\n    const month = babyData.updatedAt.getMonth();\n    const day = babyData.updatedAt.getDate();\n    const hours = babyData.updatedAt.getHours();\n    const minutes = babyData.updatedAt.getMinutes();\n    const mdhm =  month + 1 + '月' + day + '日' + hours + '時' + minutes + '分';\n\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n    const [selectTime, setselectTime] = useState(babyData.updatedAt);\n    const [detailTime, setDetailTime] = useState(mdhm);\n    \n    //起動\n    const showDatePicker = () => {\n        setDatePickerVisibility(true);\n    };\n\n    //終了\n    const hideDatePicker = () => {\n        setDatePickerVisibility(false);\n    };\n\n    //表示用のstateへ日時を代入\n    const formatDatetime = (date) => {\n        const month = date.getMonth();\n        const day = date.getDate();\n        const hours = date.getHours();\n        const minutes = date.getMinutes();\n        setDetailTime(month + 1 + '月' + day + '日' + hours + '時' + minutes + '分');\n    };\n\n    //決定ボタン押下時の処理\n    const handleConfirm = (date) => {\n        setselectTime(date);\n        formatDatetime(date);\n        dateTimeDispatch({ type: \"timeUpdate\", hours: dateTimeState.hours, minutes: dateTimeState.minutes });\n        hideDatePicker();\n    };\n\n    return (\n        <View style={modalStyles.container}>\n            <Text style={modalStyles.title}>詳細画面</Text>\n            <View>\n                <Button title={String(detailTime)} onPress={showDatePicker} />\n                <DateTimePickerModal\n                    isVisible={isDatePickerVisible}\n                    value={selectTime}\n                    onConfirm={handleConfirm}\n                    onCancel={hideDatePicker}\n                    mode=\"time\"//入力項目\n                    locale='ja'//日本語化\n                    display=\"spinner\"//UIタイプ\n                    confirmTextIOS=\"決定\"//決定ボタンテキスト\n                    cancelTextIOS=\"キャンセル\"//キャンセルボタンテキスト\n                    minuteInterval={5}//分数間隔\n                    headerTextIOS=\"\"//入力欄ヘッダーテキスト\n                    textColor=\"blue\"//ピッカーカラー\n                    date={selectTime}//ピッカー日付デフォルト\n                />\n            </View>\n            <View>\n                {(() => {\n                    if (babyData.category == 'JUNYU' || babyData.category == 'MILK' || babyData.category == 'BONYU') {\n                        return (\n                            <MilkEditForm selectTime={selectTime} babyData={babyData} toggleModal={toggleModal} />\n                        );\n                    } else if (babyData.category == 'FOOD') {\n                        return (\n                            <FoodEditForm selectTime={selectTime} babyData={babyData} toggleModal={toggleModal} />\n                        );\n                    } else if (babyData.category == 'TOILET') {\n                        return (\n                            <ToiletEditForm selectTime={selectTime} babyData={babyData} toggleModal={toggleModal} />\n                        );\n                    } else if (babyData.category == 'DISEASE') {\n                        return (\n                            <DiseaseEditForm selectTime={selectTime} babyData={babyData} toggleModal={toggleModal} />\n                        );\n                    } else if (babyData.category == 'FREE') {\n                        return (\n                            <FreeEditForm selectTime={selectTime} babyData={babyData} toggleModal={toggleModal} />\n                        );\n                    }\n                })()}\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    inputTypeContainer: {\n        paddingHorizontal: 27,\n        paddingVertical: 10,\n        height: 50,\n        backgroundColor: '#987652',\n        //flex: 1,\n        flexDirection: 'row',\n        //width: 350 ,\n        \n    },\n    inputContainer: {\n        paddingHorizontal: 27,\n        paddingVertical: 10,\n        height: 150,\n        backgroundColor: '#859602'\n        //flex: 1,\n    },\n    input: {\n        flex: 1,\n        textAlignVertical: 'top',\n        fontSize: 16,\n        lineHeight: 24,\n        backgroundColor: '#ffffff'\n    },\n    iconStyle: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n});\n\nconst modalStyles = StyleSheet.create({\n    modalButton : {\n        backgroundColor : '#FFF',\n        borderColor : '#36C1A7',\n        borderWidth : 1,\n        borderRadius : 10,\n    },\n    modalButtonText : {\n        color : '#36C1A7',\n        fontWeight : 'bold',\n        textAlign : 'center',\n        padding: 10,\n        fontSize: 20,\n    },\n    container : {\n        backgroundColor : '#FFF',\n        padding : '5%',\n        borderColor : '#36C1A7',\n        borderWidth : 3,\n        borderRadius : 20,\n    },\n    title : {\n        color : '#36C1A7',\n        fontWeight : 'bold',\n        textAlign: 'center'\n    },\n    //arrow : {\n        //color : '#36C1A7',\n    //},\n});"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAGA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,eAAP;AACA,OAAOC,cAAP;AACA,OAAOC,YAAP;AACA,SAASC,kBAAT;;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EACxC,IAAQC,UAAR,GAAuBD,KAAvB,CAAQC,UAAR;;EACA,0BAA4CH,kBAAkB,EAA9D;EAAA,IAAQI,aAAR,uBAAQA,aAAR;EAAA,IAAuBC,gBAAvB,uBAAuBA,gBAAvB;;EACA,IAAQC,QAAR,GAAsBJ,KAAtB,CAAQI,QAAR;EACA,IAAQC,WAAR,GAAwBL,KAAxB,CAAQK,WAAR;EAEA,IAAMC,KAAK,GAAGF,QAAQ,CAACG,SAAT,CAAmBC,QAAnB,EAAd;EACA,IAAMC,GAAG,GAAGL,QAAQ,CAACG,SAAT,CAAmBG,OAAnB,EAAZ;EACA,IAAMC,KAAK,GAAGP,QAAQ,CAACG,SAAT,CAAmBK,QAAnB,EAAd;EACA,IAAMC,OAAO,GAAGT,QAAQ,CAACG,SAAT,CAAmBO,UAAnB,EAAhB;EACA,IAAMC,IAAI,GAAIT,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkBG,GAAlB,GAAwB,GAAxB,GAA8BE,KAA9B,GAAsC,GAAtC,GAA4CE,OAA5C,GAAsD,GAApE;;EAEA,gBAAuDtB,QAAQ,CAAC,KAAD,CAA/D;EAAA;EAAA,IAAOyB,mBAAP;EAAA,IAA4BC,uBAA5B;;EACA,iBAAoC1B,QAAQ,CAACa,QAAQ,CAACG,SAAV,CAA5C;EAAA;EAAA,IAAOW,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAoC5B,QAAQ,CAACwB,IAAD,CAA5C;EAAA;EAAA,IAAOK,UAAP;EAAA,IAAmBC,aAAnB;;EAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IACzBL,uBAAuB,CAAC,IAAD,CAAvB;EACH,CAFD;;EAKA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IACzBN,uBAAuB,CAAC,KAAD,CAAvB;EACH,CAFD;;EAKA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;IAC7B,IAAMnB,KAAK,GAAGmB,IAAI,CAACjB,QAAL,EAAd;IACA,IAAMC,GAAG,GAAGgB,IAAI,CAACf,OAAL,EAAZ;IACA,IAAMC,KAAK,GAAGc,IAAI,CAACb,QAAL,EAAd;IACA,IAAMC,OAAO,GAAGY,IAAI,CAACX,UAAL,EAAhB;IACAO,aAAa,CAACf,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkBG,GAAlB,GAAwB,GAAxB,GAA8BE,KAA9B,GAAsC,GAAtC,GAA4CE,OAA5C,GAAsD,GAAvD,CAAb;EACH,CAND;;EASA,IAAMa,aAAa,GAAG,SAAhBA,aAAgB,CAACD,IAAD,EAAU;IAC5BN,aAAa,CAACM,IAAD,CAAb;IACAD,cAAc,CAACC,IAAD,CAAd;IACAtB,gBAAgB,CAAC;MAAEwB,IAAI,EAAE,YAAR;MAAsBhB,KAAK,EAAET,aAAa,CAACS,KAA3C;MAAkDE,OAAO,EAAEX,aAAa,CAACW;IAAzE,CAAD,CAAhB;IACAU,cAAc;EACjB,CALD;;EAOA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEK,WAAW,CAACC,SAAzB;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAED,WAAW,CAACE,KAAzB;MAAA,UAAgC;IAAhC,EADJ,EAEI,MAAC,IAAD;MAAA,WACI,KAAC,MAAD;QAAQ,KAAK,EAAEC,MAAM,CAACX,UAAD,CAArB;QAAmC,OAAO,EAAEE;MAA5C,EADJ,EAEI,KAAC,mBAAD;QACI,SAAS,EAAEN,mBADf;QAEI,KAAK,EAAEE,UAFX;QAGI,SAAS,EAAEQ,aAHf;QAII,QAAQ,EAAEH,cAJd;QAKI,IAAI,EAAC,MALT;QAMI,MAAM,EAAC,IANX;QAOI,OAAO,EAAC,SAPZ;QAQI,cAAc,EAAC,cARnB;QASI,aAAa,EAAC,gCATlB;QAUI,cAAc,EAAE,CAVpB;QAWI,aAAa,EAAC,EAXlB;QAYI,SAAS,EAAC,MAZd;QAaI,IAAI,EAAEL;MAbV,EAFJ;IAAA,EAFJ,EAoBI,KAAC,IAAD;MAAA,UACM,YAAM;QACJ,IAAId,QAAQ,CAAC4B,QAAT,IAAqB,OAArB,IAAgC5B,QAAQ,CAAC4B,QAAT,IAAqB,MAArD,IAA+D5B,QAAQ,CAAC4B,QAAT,IAAqB,OAAxF,EAAiG;UAC7F,OACI,KAAC,YAAD;YAAc,UAAU,EAAEd,UAA1B;YAAsC,QAAQ,EAAEd,QAAhD;YAA0D,WAAW,EAAEC;UAAvE,EADJ;QAGH,CAJD,MAIO,IAAID,QAAQ,CAAC4B,QAAT,IAAqB,MAAzB,EAAiC;UACpC,OACI,KAAC,YAAD;YAAc,UAAU,EAAEd,UAA1B;YAAsC,QAAQ,EAAEd,QAAhD;YAA0D,WAAW,EAAEC;UAAvE,EADJ;QAGH,CAJM,MAIA,IAAID,QAAQ,CAAC4B,QAAT,IAAqB,QAAzB,EAAmC;UACtC,OACI,KAAC,cAAD;YAAgB,UAAU,EAAEd,UAA5B;YAAwC,QAAQ,EAAEd,QAAlD;YAA4D,WAAW,EAAEC;UAAzE,EADJ;QAGH,CAJM,MAIA,IAAID,QAAQ,CAAC4B,QAAT,IAAqB,SAAzB,EAAoC;UACvC,OACI,KAAC,eAAD;YAAiB,UAAU,EAAEd,UAA7B;YAAyC,QAAQ,EAAEd,QAAnD;YAA6D,WAAW,EAAEC;UAA1E,EADJ;QAGH,CAJM,MAIA,IAAID,QAAQ,CAAC4B,QAAT,IAAqB,MAAzB,EAAiC;UACpC,OACI,KAAC,YAAD;YAAc,UAAU,EAAEd,UAA1B;YAAsC,QAAQ,EAAEd,QAAhD;YAA0D,WAAW,EAAEC;UAAvE,EADJ;QAGH;MACJ,CAtBA;IADL,EApBJ;EAAA,EADJ;AAgDH;AAED,IAAM4B,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC7BN,SAAS,EAAE;IACPO,IAAI,EAAE;EADC,CADkB;EAI7BC,kBAAkB,EAAE;IAChBC,iBAAiB,EAAE,EADH;IAEhBC,eAAe,EAAE,EAFD;IAGhBC,MAAM,EAAE,EAHQ;IAIhBC,eAAe,EAAE,SAJD;IAMhBC,aAAa,EAAE;EANC,CAJS;EAc7BC,cAAc,EAAE;IACZL,iBAAiB,EAAE,EADP;IAEZC,eAAe,EAAE,EAFL;IAGZC,MAAM,EAAE,GAHI;IAIZC,eAAe,EAAE;EAJL,CAda;EAqB7BG,KAAK,EAAE;IACHR,IAAI,EAAE,CADH;IAEHS,iBAAiB,EAAE,KAFhB;IAGHC,QAAQ,EAAE,EAHP;IAIHC,UAAU,EAAE,EAJT;IAKHN,eAAe,EAAE;EALd,CArBsB;EA4B7BO,SAAS,EAAE;IACPC,UAAU,EAAE,MADL;IAEPC,WAAW,EAAE;EAFN;AA5BkB,CAAlB,CAAf;AAkCA,IAAMtB,WAAW,GAAGM,UAAU,CAACC,MAAX,CAAkB;EAClCgB,WAAW,EAAG;IACVV,eAAe,EAAG,MADR;IAEVW,WAAW,EAAG,SAFJ;IAGVC,WAAW,EAAG,CAHJ;IAIVC,YAAY,EAAG;EAJL,CADoB;EAOlCC,eAAe,EAAG;IACdC,KAAK,EAAG,SADM;IAEdC,UAAU,EAAG,MAFC;IAGdC,SAAS,EAAG,QAHE;IAIdC,OAAO,EAAE,EAJK;IAKdb,QAAQ,EAAE;EALI,CAPgB;EAclCjB,SAAS,EAAG;IACRY,eAAe,EAAG,MADV;IAERkB,OAAO,EAAG,IAFF;IAGRP,WAAW,EAAG,SAHN;IAIRC,WAAW,EAAG,CAJN;IAKRC,YAAY,EAAG;EALP,CAdsB;EAqBlCxB,KAAK,EAAG;IACJ0B,KAAK,EAAG,SADJ;IAEJC,UAAU,EAAG,MAFT;IAGJC,SAAS,EAAE;EAHP;AArB0B,CAAlB,CAApB"},"metadata":{},"sourceType":"module"}
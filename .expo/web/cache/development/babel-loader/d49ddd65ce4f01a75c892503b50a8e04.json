{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useImperativeHandle, useRef, useEffect, useState, useCallback, useMemo } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { extractHeaderProps, extractCalendarProps } from \"../componentUpdater\";\nimport { xdateToData, parseDate, toMarkingFormat } from \"../interface\";\nimport { page, sameDate, sameMonth } from \"../dateutils\";\nimport constants from \"../commons/constants\";\nimport { useDidUpdate } from \"../hooks\";\nimport styleConstructor from \"./style\";\nimport Calendar from \"../calendar\";\nimport CalendarListItem from \"./item\";\nimport CalendarHeader from \"../calendar/header/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CALENDAR_WIDTH = constants.screenWidth;\nvar CALENDAR_HEIGHT = 360;\nvar PAST_SCROLL_RANGE = 50;\nvar FUTURE_SCROLL_RANGE = 50;\n\nvar CalendarList = function CalendarList(props, ref) {\n  useImperativeHandle(ref, function () {\n    return {\n      scrollToDay: function scrollToDay(date, offset, animated) {\n        _scrollToDay(date, offset, animated);\n      },\n      scrollToMonth: function scrollToMonth(date) {\n        _scrollToMonth(date);\n      }\n    };\n  });\n  var theme = props.theme,\n      current = props.current,\n      firstDay = props.firstDay,\n      markedDates = props.markedDates,\n      headerStyle = props.headerStyle,\n      onMonthChange = props.onMonthChange,\n      onVisibleMonthsChange = props.onVisibleMonthsChange,\n      _props$pastScrollRang = props.pastScrollRange,\n      pastScrollRange = _props$pastScrollRang === void 0 ? PAST_SCROLL_RANGE : _props$pastScrollRang,\n      _props$futureScrollRa = props.futureScrollRange,\n      futureScrollRange = _props$futureScrollRa === void 0 ? FUTURE_SCROLL_RANGE : _props$futureScrollRa,\n      _props$calendarHeight = props.calendarHeight,\n      calendarHeight = _props$calendarHeight === void 0 ? CALENDAR_HEIGHT : _props$calendarHeight,\n      _props$calendarWidth = props.calendarWidth,\n      calendarWidth = _props$calendarWidth === void 0 ? CALENDAR_WIDTH : _props$calendarWidth,\n      calendarStyle = props.calendarStyle,\n      _props$animateScroll = props.animateScroll,\n      animateScroll = _props$animateScroll === void 0 ? false : _props$animateScroll,\n      _props$showScrollIndi = props.showScrollIndicator,\n      showScrollIndicator = _props$showScrollIndi === void 0 ? false : _props$showScrollIndi,\n      staticHeader = props.staticHeader,\n      testID = props.testID,\n      propsStyle = props.style,\n      onLayout = props.onLayout,\n      removeClippedSubviews = props.removeClippedSubviews,\n      _props$horizontal = props.horizontal,\n      horizontal = _props$horizontal === void 0 ? false : _props$horizontal,\n      pagingEnabled = props.pagingEnabled,\n      _props$scrollEnabled = props.scrollEnabled,\n      scrollEnabled = _props$scrollEnabled === void 0 ? true : _props$scrollEnabled,\n      _props$nestedScrollEn = props.nestedScrollEnabled,\n      nestedScrollEnabled = _props$nestedScrollEn === void 0 ? true : _props$nestedScrollEn,\n      _props$scrollsToTop = props.scrollsToTop,\n      scrollsToTop = _props$scrollsToTop === void 0 ? false : _props$scrollsToTop,\n      _props$keyExtractor = props.keyExtractor,\n      keyExtractor = _props$keyExtractor === void 0 ? function (_, index) {\n    return String(index);\n  } : _props$keyExtractor,\n      keyboardShouldPersistTaps = props.keyboardShouldPersistTaps,\n      onScrollBeginDrag = props.onScrollBeginDrag,\n      onScrollEndDrag = props.onScrollEndDrag,\n      onMomentumScrollBegin = props.onMomentumScrollBegin,\n      onMomentumScrollEnd = props.onMomentumScrollEnd,\n      onEndReachedThreshold = props.onEndReachedThreshold,\n      onEndReached = props.onEndReached;\n  var calendarProps = extractCalendarProps(props);\n  var headerProps = extractHeaderProps(props);\n  var calendarSize = horizontal ? calendarWidth : calendarHeight;\n\n  var _useState = useState(parseDate(current)),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMonth = _useState2[0],\n      setCurrentMonth = _useState2[1];\n\n  var style = useRef(styleConstructor(theme));\n  var list = useRef();\n  var range = useRef(horizontal ? 1 : 3);\n  var initialDate = useRef(parseDate(current) || new XDate());\n  var visibleMonth = useRef(currentMonth);\n  var items = useMemo(function () {\n    var months = [];\n\n    for (var i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n      var _initialDate$current;\n\n      var rangeDate = (_initialDate$current = initialDate.current) == null ? void 0 : _initialDate$current.clone().addMonths(i - pastScrollRange, true);\n      months.push(rangeDate);\n    }\n\n    return months;\n  }, [pastScrollRange, futureScrollRange]);\n  var staticHeaderStyle = useMemo(function () {\n    return [style.current.staticHeader, headerStyle];\n  }, [headerStyle]);\n  var listStyle = useMemo(function () {\n    return [style.current.container, propsStyle];\n  }, [propsStyle]);\n  var initialDateIndex = useMemo(function () {\n    return findIndex(items, function (item) {\n      var _initialDate$current2;\n\n      return item.toString() === ((_initialDate$current2 = initialDate.current) == null ? void 0 : _initialDate$current2.toString());\n    });\n  }, [items]);\n  var getDateIndex = useCallback(function (date) {\n    return findIndex(items, function (item) {\n      return item.toString() === date.toString();\n    });\n  }, [items]);\n  useEffect(function () {\n    if (current) {\n      _scrollToMonth(new XDate(current));\n    }\n  }, [current]);\n  useDidUpdate(function () {\n    var currMont = currentMonth == null ? void 0 : currentMonth.clone();\n\n    if (currMont) {\n      var data = xdateToData(currMont);\n      onMonthChange == null ? void 0 : onMonthChange(data);\n      onVisibleMonthsChange == null ? void 0 : onVisibleMonthsChange([data]);\n    }\n  }, [currentMonth]);\n\n  var _scrollToDay = function _scrollToDay(date, offset, animated) {\n    var _initialDate$current3;\n\n    var scrollTo = parseDate(date);\n    var diffMonths = Math.round(initialDate == null ? void 0 : (_initialDate$current3 = initialDate.current) == null ? void 0 : _initialDate$current3.clone().setDate(1).diffMonths(scrollTo == null ? void 0 : scrollTo.clone().setDate(1)));\n    var scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n\n    if (!horizontal) {\n      var week = 0;\n      var days = page(scrollTo, firstDay);\n\n      for (var i = 0; i < days.length; i++) {\n        week = Math.floor(i / 7);\n\n        if (sameDate(days[i], scrollTo)) {\n          scrollAmount += 46 * week;\n          break;\n        }\n      }\n    }\n\n    if (scrollAmount !== 0) {\n      var _list$current;\n\n      list == null ? void 0 : (_list$current = list.current) == null ? void 0 : _list$current.scrollToOffset({\n        offset: scrollAmount,\n        animated: animated\n      });\n    }\n  };\n\n  var _scrollToMonth = useCallback(function (date) {\n    var _initialDate$current4;\n\n    var scrollTo = parseDate(date);\n    var diffMonths = Math.round(initialDate == null ? void 0 : (_initialDate$current4 = initialDate.current) == null ? void 0 : _initialDate$current4.clone().setDate(1).diffMonths(scrollTo == null ? void 0 : scrollTo.clone().setDate(1)));\n    var scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize;\n\n    if (scrollAmount !== 0) {\n      var _list$current2;\n\n      list == null ? void 0 : (_list$current2 = list.current) == null ? void 0 : _list$current2.scrollToOffset({\n        offset: scrollAmount,\n        animated: animateScroll\n      });\n    }\n  }, [calendarSize]);\n\n  var addMonth = useCallback(function (count) {\n    var day = currentMonth == null ? void 0 : currentMonth.clone().addMonths(count, true);\n\n    if (sameMonth(day, currentMonth) || getDateIndex(day) === -1) {\n      return;\n    }\n\n    _scrollToMonth(day);\n\n    setCurrentMonth(day);\n  }, [currentMonth, _scrollToMonth]);\n  var getMarkedDatesForItem = useCallback(function (item) {\n    if (markedDates && item) {\n      for (var _ref3 of Object.entries(markedDates)) {\n        var _ref2 = _slicedToArray(_ref3, 2);\n\n        var key = _ref2[0];\n        var _ = _ref2[1];\n\n        if (sameMonth(new XDate(key), new XDate(item))) {\n          return markedDates;\n        }\n      }\n    }\n  }, [markedDates]);\n  var getItemLayout = useCallback(function (_, index) {\n    return {\n      length: calendarSize,\n      offset: calendarSize * index,\n      index: index\n    };\n  }, []);\n  var isDateInRange = useCallback(function (date) {\n    for (var i = -range.current; i <= range.current; i++) {\n      var newMonth = currentMonth == null ? void 0 : currentMonth.clone().addMonths(i, true);\n\n      if (sameMonth(date, newMonth)) {\n        return true;\n      }\n    }\n\n    return false;\n  }, [currentMonth]);\n  var renderItem = useCallback(function (_ref4) {\n    var item = _ref4.item;\n    var dateString = toMarkingFormat(item);\n\n    var _dateString$split = dateString.split('-'),\n        _dateString$split2 = _slicedToArray(_dateString$split, 2),\n        year = _dateString$split2[0],\n        month = _dateString$split2[1];\n\n    var testId = `${testID}.item_${year}-${month}`;\n    return _jsx(CalendarListItem, _objectSpread(_objectSpread({}, calendarProps), {}, {\n      testID: testId,\n      markedDates: getMarkedDatesForItem(item),\n      item: item,\n      style: calendarStyle,\n      horizontal: horizontal,\n      calendarWidth: calendarWidth,\n      calendarHeight: calendarHeight,\n      scrollToMonth: _scrollToMonth,\n      visible: isDateInRange(item)\n    }));\n  }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n\n  var renderStaticHeader = function renderStaticHeader() {\n    if (staticHeader && horizontal) {\n      return _jsx(CalendarHeader, _objectSpread(_objectSpread({}, headerProps), {}, {\n        testID: `${testID}.staticHeader`,\n        style: staticHeaderStyle,\n        month: currentMonth,\n        addMonth: addMonth,\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants'\n      }));\n    }\n  };\n\n  var viewabilityConfig = useRef({\n    viewAreaCoveragePercentThreshold: 20\n  });\n  var onViewableItemsChanged = useCallback(function (_ref5) {\n    var _viewableItems$;\n\n    var viewableItems = _ref5.viewableItems;\n    var newVisibleMonth = parseDate((_viewableItems$ = viewableItems[0]) == null ? void 0 : _viewableItems$.item);\n\n    if (!sameDate(visibleMonth == null ? void 0 : visibleMonth.current, newVisibleMonth)) {\n      visibleMonth.current = newVisibleMonth;\n      setCurrentMonth(visibleMonth.current);\n    }\n  }, []);\n  var viewabilityConfigCallbackPairs = useRef([{\n    viewabilityConfig: viewabilityConfig.current,\n    onViewableItemsChanged: onViewableItemsChanged\n  }]);\n  return _jsxs(View, {\n    style: style.current.flatListContainer,\n    testID: testID,\n    children: [_jsx(FlatList, {\n      ref: list,\n      style: listStyle,\n      showsVerticalScrollIndicator: showScrollIndicator,\n      showsHorizontalScrollIndicator: showScrollIndicator,\n      data: items,\n      renderItem: renderItem,\n      getItemLayout: getItemLayout,\n      initialNumToRender: range.current,\n      initialScrollIndex: initialDateIndex,\n      viewabilityConfigCallbackPairs: viewabilityConfigCallbackPairs.current,\n      testID: `${testID}.list`,\n      onLayout: onLayout,\n      removeClippedSubviews: removeClippedSubviews,\n      pagingEnabled: pagingEnabled,\n      scrollEnabled: scrollEnabled,\n      scrollsToTop: scrollsToTop,\n      horizontal: horizontal,\n      keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n      keyExtractor: keyExtractor,\n      onEndReachedThreshold: onEndReachedThreshold,\n      onEndReached: onEndReached,\n      nestedScrollEnabled: nestedScrollEnabled,\n      onMomentumScrollBegin: onMomentumScrollBegin,\n      onMomentumScrollEnd: onMomentumScrollEnd,\n      onScrollBeginDrag: onScrollBeginDrag,\n      onScrollEndDrag: onScrollEndDrag\n    }), renderStaticHeader()]\n  });\n};\n\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = _objectSpread(_objectSpread({}, Calendar.propTypes), {}, {\n  pastScrollRange: PropTypes.number,\n  futureScrollRange: PropTypes.number,\n  calendarWidth: PropTypes.number,\n  calendarHeight: PropTypes.number,\n  calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticHeader: PropTypes.bool,\n  showScrollIndicator: PropTypes.bool,\n  animateScroll: PropTypes.bool,\n  scrollEnabled: PropTypes.bool,\n  scrollsToTop: PropTypes.bool,\n  pagingEnabled: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  keyExtractor: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onEndReached: PropTypes.func,\n  nestedScrollEnabled: PropTypes.bool\n});","map":{"version":3,"names":["findIndex","PropTypes","XDate","React","forwardRef","useImperativeHandle","useRef","useEffect","useState","useCallback","useMemo","extractHeaderProps","extractCalendarProps","xdateToData","parseDate","toMarkingFormat","page","sameDate","sameMonth","constants","useDidUpdate","styleConstructor","Calendar","CalendarListItem","CalendarHeader","CALENDAR_WIDTH","screenWidth","CALENDAR_HEIGHT","PAST_SCROLL_RANGE","FUTURE_SCROLL_RANGE","CalendarList","props","ref","scrollToDay","date","offset","animated","scrollToMonth","theme","current","firstDay","markedDates","headerStyle","onMonthChange","onVisibleMonthsChange","pastScrollRange","futureScrollRange","calendarHeight","calendarWidth","calendarStyle","animateScroll","showScrollIndicator","staticHeader","testID","propsStyle","style","onLayout","removeClippedSubviews","horizontal","pagingEnabled","scrollEnabled","nestedScrollEnabled","scrollsToTop","keyExtractor","_","index","String","keyboardShouldPersistTaps","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","onEndReachedThreshold","onEndReached","calendarProps","headerProps","calendarSize","currentMonth","setCurrentMonth","list","range","initialDate","visibleMonth","items","months","i","rangeDate","clone","addMonths","push","staticHeaderStyle","listStyle","container","initialDateIndex","item","toString","getDateIndex","currMont","data","scrollTo","diffMonths","Math","round","setDate","scrollAmount","week","days","length","floor","scrollToOffset","addMonth","count","day","getMarkedDatesForItem","Object","entries","key","getItemLayout","isDateInRange","newMonth","renderItem","dateString","split","year","month","testId","renderStaticHeader","viewabilityConfig","viewAreaCoveragePercentThreshold","onViewableItemsChanged","viewableItems","newVisibleMonth","viewabilityConfigCallbackPairs","flatListContainer","displayName","propTypes","number","oneOfType","object","array","bool","oneOf","func"],"sources":["/Users/atsushi/Dev/baby/node_modules/react-native-calendars/src/calendar-list/index.js"],"sourcesContent":["import findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useImperativeHandle, useRef, useEffect, useState, useCallback, useMemo } from 'react';\nimport { FlatList, View } from 'react-native';\nimport { extractHeaderProps, extractCalendarProps } from '../componentUpdater';\nimport { xdateToData, parseDate, toMarkingFormat } from '../interface';\nimport { page, sameDate, sameMonth } from '../dateutils';\nimport constants from '../commons/constants';\nimport { useDidUpdate } from '../hooks';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nconst CALENDAR_WIDTH = constants.screenWidth;\nconst CALENDAR_HEIGHT = 360;\nconst PAST_SCROLL_RANGE = 50;\nconst FUTURE_SCROLL_RANGE = 50;\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar-list.gif\n */\nconst CalendarList = (props, ref) => {\n    useImperativeHandle(ref, () => ({\n        scrollToDay: (date, offset, animated) => {\n            scrollToDay(date, offset, animated);\n        },\n        scrollToMonth: (date) => {\n            scrollToMonth(date);\n        }\n    }));\n    const { \n    /** Calendar props */\n    theme, current, firstDay, markedDates, headerStyle, onMonthChange, onVisibleMonthsChange, \n    /** CalendarList props */\n    pastScrollRange = PAST_SCROLL_RANGE, futureScrollRange = FUTURE_SCROLL_RANGE, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, calendarStyle, animateScroll = false, showScrollIndicator = false, staticHeader, \n    /** View props */\n    testID, style: propsStyle, onLayout, removeClippedSubviews, \n    /** ScrollView props */\n    horizontal = false, pagingEnabled, scrollEnabled = true, nestedScrollEnabled = true, scrollsToTop = false, keyExtractor = (_, index) => String(index), keyboardShouldPersistTaps, onScrollBeginDrag, onScrollEndDrag, onMomentumScrollBegin, onMomentumScrollEnd, \n    /** FlatList props */\n    onEndReachedThreshold, onEndReached } = props;\n    const calendarProps = extractCalendarProps(props);\n    const headerProps = extractHeaderProps(props);\n    const calendarSize = horizontal ? calendarWidth : calendarHeight;\n    const [currentMonth, setCurrentMonth] = useState(parseDate(current));\n    const style = useRef(styleConstructor(theme));\n    const list = useRef();\n    const range = useRef(horizontal ? 1 : 3);\n    const initialDate = useRef(parseDate(current) || new XDate());\n    const visibleMonth = useRef(currentMonth);\n    const items = useMemo(() => {\n        const months = [];\n        for (let i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n            const rangeDate = initialDate.current?.clone().addMonths(i - pastScrollRange, true);\n            months.push(rangeDate);\n        }\n        return months;\n    }, [pastScrollRange, futureScrollRange]);\n    const staticHeaderStyle = useMemo(() => {\n        return [style.current.staticHeader, headerStyle];\n    }, [headerStyle]);\n    const listStyle = useMemo(() => {\n        return [style.current.container, propsStyle];\n    }, [propsStyle]);\n    const initialDateIndex = useMemo(() => {\n        return findIndex(items, function (item) {\n            return item.toString() === initialDate.current?.toString();\n        });\n    }, [items]);\n    const getDateIndex = useCallback((date) => {\n        return findIndex(items, function (item) {\n            return item.toString() === date.toString();\n        });\n    }, [items]);\n    useEffect(() => {\n        if (current) {\n            scrollToMonth(new XDate(current));\n        }\n    }, [current]);\n    useDidUpdate(() => {\n        const currMont = currentMonth?.clone();\n        if (currMont) {\n            const data = xdateToData(currMont);\n            onMonthChange?.(data);\n            onVisibleMonthsChange?.([data]);\n        }\n    }, [currentMonth]);\n    const scrollToDay = (date, offset, animated) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        let scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n        if (!horizontal) {\n            let week = 0;\n            const days = page(scrollTo, firstDay);\n            for (let i = 0; i < days.length; i++) {\n                week = Math.floor(i / 7);\n                if (sameDate(days[i], scrollTo)) {\n                    scrollAmount += 46 * week;\n                    break;\n                }\n            }\n        }\n        if (scrollAmount !== 0) {\n            // @ts-expect-error\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated });\n        }\n    };\n    const scrollToMonth = useCallback((date) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        const scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize;\n        if (scrollAmount !== 0) {\n            // @ts-expect-error\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated: animateScroll });\n        }\n    }, [calendarSize]);\n    const addMonth = useCallback((count) => {\n        const day = currentMonth?.clone().addMonths(count, true);\n        if (sameMonth(day, currentMonth) || getDateIndex(day) === -1) {\n            return;\n        }\n        scrollToMonth(day);\n        setCurrentMonth(day);\n    }, [currentMonth, scrollToMonth]);\n    const getMarkedDatesForItem = useCallback((item) => {\n        if (markedDates && item) {\n            for (const [key, _] of Object.entries(markedDates)) {\n                if (sameMonth(new XDate(key), new XDate(item))) {\n                    return markedDates;\n                }\n            }\n        }\n    }, [markedDates]);\n    const getItemLayout = useCallback((_, index) => {\n        return {\n            length: calendarSize,\n            offset: calendarSize * index,\n            index\n        };\n    }, []);\n    const isDateInRange = useCallback((date) => {\n        for (let i = -range.current; i <= range.current; i++) {\n            const newMonth = currentMonth?.clone().addMonths(i, true);\n            if (sameMonth(date, newMonth)) {\n                return true;\n            }\n        }\n        return false;\n    }, [currentMonth]);\n    const renderItem = useCallback(({ item }) => {\n        const dateString = toMarkingFormat(item);\n        const [year, month] = dateString.split('-');\n        const testId = `${testID}.item_${year}-${month}`;\n        return (<CalendarListItem {...calendarProps} testID={testId} markedDates={getMarkedDatesForItem(item)} item={item} style={calendarStyle} \n        // @ts-expect-error - type mismatch - ScrollView's 'horizontal' is nullable\n        horizontal={horizontal} calendarWidth={calendarWidth} calendarHeight={calendarHeight} scrollToMonth={scrollToMonth} visible={isDateInRange(item)}/>);\n    }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n    const renderStaticHeader = () => {\n        if (staticHeader && horizontal) {\n            return (<CalendarHeader {...headerProps} testID={`${testID}.staticHeader`} style={staticHeaderStyle} month={currentMonth} addMonth={addMonth} accessibilityElementsHidden={true} // iOS\n             importantForAccessibility={'no-hide-descendants'} // Android\n            />);\n        }\n    };\n    /** Viewable month */\n    const viewabilityConfig = useRef({\n        viewAreaCoveragePercentThreshold: 20\n    });\n    const onViewableItemsChanged = useCallback(({ viewableItems }) => {\n        const newVisibleMonth = parseDate(viewableItems[0]?.item);\n        if (!sameDate(visibleMonth?.current, newVisibleMonth)) {\n            visibleMonth.current = newVisibleMonth;\n            setCurrentMonth(visibleMonth.current);\n        }\n    }, []);\n    const viewabilityConfigCallbackPairs = useRef([\n        {\n            viewabilityConfig: viewabilityConfig.current,\n            onViewableItemsChanged\n        },\n    ]);\n    return (<View style={style.current.flatListContainer} testID={testID}>\n      <FlatList \n    // @ts-expect-error\n    ref={list} style={listStyle} showsVerticalScrollIndicator={showScrollIndicator} showsHorizontalScrollIndicator={showScrollIndicator} data={items} renderItem={renderItem} getItemLayout={getItemLayout} initialNumToRender={range.current} initialScrollIndex={initialDateIndex} viewabilityConfigCallbackPairs={viewabilityConfigCallbackPairs.current} testID={`${testID}.list`} onLayout={onLayout} removeClippedSubviews={removeClippedSubviews} pagingEnabled={pagingEnabled} scrollEnabled={scrollEnabled} scrollsToTop={scrollsToTop} horizontal={horizontal} keyboardShouldPersistTaps={keyboardShouldPersistTaps} keyExtractor={keyExtractor} onEndReachedThreshold={onEndReachedThreshold} onEndReached={onEndReached} nestedScrollEnabled={nestedScrollEnabled} onMomentumScrollBegin={onMomentumScrollBegin} onMomentumScrollEnd={onMomentumScrollEnd} onScrollBeginDrag={onScrollBeginDrag} onScrollEndDrag={onScrollEndDrag}/>\n      {renderStaticHeader()}\n    </View>);\n};\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = {\n    ...Calendar.propTypes,\n    pastScrollRange: PropTypes.number,\n    futureScrollRange: PropTypes.number,\n    calendarWidth: PropTypes.number,\n    calendarHeight: PropTypes.number,\n    calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    staticHeader: PropTypes.bool,\n    showScrollIndicator: PropTypes.bool,\n    animateScroll: PropTypes.bool,\n    scrollEnabled: PropTypes.bool,\n    scrollsToTop: PropTypes.bool,\n    pagingEnabled: PropTypes.bool,\n    horizontal: PropTypes.bool,\n    keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n    keyExtractor: PropTypes.func,\n    onEndReachedThreshold: PropTypes.number,\n    onEndReached: PropTypes.func,\n    nestedScrollEnabled: PropTypes.bool\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
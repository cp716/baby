{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useReducer, useContext } from 'react';\nimport storage from \"./Storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar BabyRecordContext = createContext();\nexport function useBabyRecordContext() {\n  return useContext(BabyRecordContext);\n}\nexport function BabyRecordProvider(_ref) {\n  var children = _ref.children;\n  var initialState = {\n    babyData: ''\n  };\n\n  var reducer = function reducer(state, action) {\n    if (action.type == \"return\") {\n      state.babyData = action.data;\n      return {\n        babyData: state.babyData\n      };\n    }\n\n    ;\n  };\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      babyRecordState = _useReducer2[0],\n      babyRecordDispatch = _useReducer2[1];\n\n  return _jsx(BabyRecordContext.Provider, {\n    value: {\n      babyRecordState: babyRecordState,\n      babyRecordDispatch: babyRecordDispatch\n    },\n    children: children\n  });\n}","map":{"version":3,"names":["React","createContext","useReducer","useContext","storage","BabyRecordContext","useBabyRecordContext","BabyRecordProvider","children","initialState","babyData","reducer","state","action","type","data","babyRecordState","babyRecordDispatch"],"sources":["/Users/atsushi/Dev/baby/src/context/BabyRecordContext.jsx"],"sourcesContent":["import React, { createContext, useReducer, useContext }  from 'react';\nimport storage from './Storage';\n\n//＝＝＝＝＝＝＝＝\n// Context\n//＝＝＝＝＝＝＝＝\nconst BabyRecordContext = createContext();\n\nexport function useBabyRecordContext() {\n    return useContext(BabyRecordContext);\n}\n\nexport function BabyRecordProvider({ children }) {\n    \n    //＝＝＝＝＝＝＝＝\n    // 初期値設定\n    //＝＝＝＝＝＝＝＝\n        const initialState = {\n        babyData: '',\n    };\n\n    const reducer = (state, action) => {\n\n        //＝＝＝＝＝＝＝＝\n        // 赤ちゃんの記録を返す\n        //＝＝＝＝＝＝＝＝\n        if (action.type == \"return\") {\n        \n            state.babyData = action.data\n        \n        return { babyData: state.babyData };\n        };\n    };\n    \n    const [babyRecordState, babyRecordDispatch] = useReducer(reducer, initialState);\n\n    return (\n        <BabyRecordContext.Provider value={{babyRecordState, babyRecordDispatch}}>\n        {children}\n        </BabyRecordContext.Provider>\n    );\n    \n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA8D,OAA9D;AACA,OAAOC,OAAP;;AAKA,IAAMC,iBAAiB,GAAGJ,aAAa,EAAvC;AAEA,OAAO,SAASK,oBAAT,GAAgC;EACnC,OAAOH,UAAU,CAACE,iBAAD,CAAjB;AACH;AAED,OAAO,SAASE,kBAAT,OAA0C;EAAA,IAAZC,QAAY,QAAZA,QAAY;EAKzC,IAAMC,YAAY,GAAG;IACrBC,QAAQ,EAAE;EADW,CAArB;;EAIJ,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;IAK/B,IAAIA,MAAM,CAACC,IAAP,IAAe,QAAnB,EAA6B;MAEzBF,KAAK,CAACF,QAAN,GAAiBG,MAAM,CAACE,IAAxB;MAEJ,OAAO;QAAEL,QAAQ,EAAEE,KAAK,CAACF;MAAlB,CAAP;IACC;;IAAA;EACJ,CAXD;;EAaA,kBAA8CR,UAAU,CAACS,OAAD,EAAUF,YAAV,CAAxD;EAAA;EAAA,IAAOO,eAAP;EAAA,IAAwBC,kBAAxB;;EAEA,OACI,KAAC,iBAAD,CAAmB,QAAnB;IAA4B,KAAK,EAAE;MAACD,eAAe,EAAfA,eAAD;MAAkBC,kBAAkB,EAAlBA;IAAlB,CAAnC;IAAA,UACCT;EADD,EADJ;AAMH"},"metadata":{},"sourceType":"module"}
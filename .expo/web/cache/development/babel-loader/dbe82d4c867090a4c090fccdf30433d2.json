{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { useCurrentBabyContext } from \"../../context/CurrentBabyContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function BabyInputForm(props) {\n  var navigation = props.navigation;\n  var toggleModal = props.toggleModal;\n\n  var _useCurrentBabyContex = useCurrentBabyContext(),\n      currentBabyState = _useCurrentBabyContex.currentBabyState,\n      currentBabyDispatch = _useCurrentBabyContex.currentBabyDispatch;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatePickerVisible = _useState2[0],\n      setDatePickerVisibility = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      birthday = _useState4[0],\n      setBirthday = _useState4[1];\n\n  var _useState5 = useState('誕生日を選択'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      detailTime = _useState6[0],\n      setDetailTime = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      babyName = _useState8[0],\n      setBabyName = _useState8[1];\n\n  function handlePress() {\n    if (babyName !== \"\" && birthday !== undefined) {\n      var db = firebase.firestore();\n\n      var _firebase$auth = firebase.auth(),\n          currentUser = _firebase$auth.currentUser;\n\n      var ref = db.collection(\"users/\" + currentUser.uid + \"/babyData\");\n      Alert.alert('「' + babyName + '」を登録します', 'よろしいですか？', [{\n        text: 'キャンセル',\n        onPress: function onPress() {}\n      }, {\n        text: '登録する',\n        onPress: function onPress() {\n          toggleModal();\n          ref.add({\n            babyName: babyName,\n            birthday: birthday\n          }).then(function (docRef) {\n            currentBabyDispatch({\n              type: \"addBaby\",\n              babyName: babyName,\n              babyBirthday: birthday,\n              babyId: docRef.id\n            });\n          }).catch(function (error) {\n            console.log('失敗しました', error);\n          });\n        }\n      }]);\n    } else {\n      Alert.alert(\"未入力です\");\n    }\n  }\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var formatDatetime = function formatDatetime(date) {\n    setDetailTime(date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日');\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    setBirthday(date);\n    formatDatetime(date);\n    hideDatePicker();\n  };\n\n  return _jsxs(ScrollView, {\n    scrollEnabled: false,\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        children: \"\\u540D\\u524D\"\n      }), _jsx(TextInput, {\n        keyboardType: \"web-search\",\n        value: babyName,\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          setBabyName(text);\n        },\n        placeholder: \"\\u8D64\\u3061\\u3083\\u3093\\u306E\\u540D\\u524D\\u3092\\u5165\\u529B\"\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Button, {\n        title: String(detailTime),\n        onPress: showDatePicker\n      }), _jsx(DateTimePickerModal, {\n        isVisible: isDatePickerVisible,\n        value: birthday,\n        onConfirm: handleConfirm,\n        onCancel: hideDatePicker,\n        mode: \"date\",\n        locale: \"ja\",\n        display: \"spinner\",\n        confirmTextIOS: \"\\u6C7A\\u5B9A\",\n        cancelTextIOS: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\",\n        minuteInterval: 5,\n        headerTextIOS: \"\",\n        textColor: \"blue\",\n        date: birthday\n      })]\n    }), _jsxs(View, {\n      style: modalStyles.container,\n      children: [_jsx(TouchableOpacity, {\n        style: modalStyles.confirmButton,\n        onPress: toggleModal,\n        children: _jsx(Text, {\n          style: modalStyles.confirmButtonText,\n          children: \"close\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: modalStyles.confirmButton,\n        onPress: handlePress,\n        children: _jsx(Text, {\n          style: modalStyles.confirmButtonText,\n          children: \"\\u767B\\u9332\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  inputTypeContainer: {\n    paddingHorizontal: 27,\n    paddingVertical: 10\n  },\n  inputContainer: {\n    paddingHorizontal: 27,\n    paddingVertical: 10,\n    height: 75,\n    backgroundColor: '#859602'\n  },\n  input: {\n    flex: 1,\n    textAlignVertical: 'top',\n    fontSize: 16,\n    lineHeight: 25,\n    backgroundColor: '#ffffff'\n  }\n});\nvar modalStyles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  confirmButton: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: '5%',\n    backgroundColor: '#FFF',\n    borderColor: '#36C1A7',\n    borderWidth: 1,\n    borderRadius: 10,\n    width: \"40%\"\n  },\n  confirmButtonText: {\n    color: '#36C1A7',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    padding: 10,\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","firebase","DateTimePickerModal","useCurrentBabyContext","BabyInputForm","props","navigation","toggleModal","currentBabyState","currentBabyDispatch","isDatePickerVisible","setDatePickerVisibility","birthday","setBirthday","detailTime","setDetailTime","babyName","setBabyName","handlePress","undefined","db","firestore","auth","currentUser","ref","collection","uid","Alert","alert","text","onPress","add","then","docRef","type","babyBirthday","babyId","id","catch","error","console","log","showDatePicker","hideDatePicker","formatDatetime","date","getFullYear","getMonth","getDate","handleConfirm","styles","inputContainer","input","String","modalStyles","container","confirmButton","confirmButtonText","StyleSheet","create","inputTypeContainer","paddingHorizontal","paddingVertical","height","backgroundColor","flex","textAlignVertical","fontSize","lineHeight","flexDirection","marginLeft","marginRight","marginTop","borderColor","borderWidth","borderRadius","width","color","fontWeight","textAlign","padding"],"sources":["/Users/atsushi/Dev/baby/src/components/AddButton/BabyInputForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, StyleSheet, Alert, TouchableOpacity, ScrollView, Button } from 'react-native';\nimport firebase from 'firebase';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { useCurrentBabyContext } from '../../context/CurrentBabyContext';\n\nexport default function BabyInputForm(props) {\n    const { navigation } = props;\n    const { toggleModal } = props;\n\n    const { currentBabyState, currentBabyDispatch } = useCurrentBabyContext();\n\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n    const [birthday, setBirthday] = useState();\n    const [detailTime, setDetailTime] = useState('誕生日を選択');\n    \n    const [babyName, setBabyName] = useState('');\n\n    function handlePress() {\n        if( babyName !== \"\" && birthday !== undefined) {\n            const db = firebase.firestore();\n            const { currentUser } = firebase.auth();\n            const ref = db.collection(`users/${currentUser.uid}/babyData`)\n            Alert.alert('「' + babyName + '」を登録します', 'よろしいですか？', [\n                {\n                    text: 'キャンセル',\n                    onPress: () => {},\n                },\n                {\n                    text: '登録する',\n                    //style: 'destructive',\n                    onPress: () => {\n                        //navigation.jumpTo('Home');\n                        toggleModal()\n                        ref.add({\n                            babyName,\n                            birthday,\n                        })\n                        .then((docRef) => {\n                            currentBabyDispatch({ \n                                type: \"addBaby\",\n                                babyName: babyName,\n                                babyBirthday: birthday,\n                                babyId: docRef.id,\n                            })\n                        })\n                        .catch((error) => {\n                            console.log('失敗しました', error);\n                        });\n                    },\n                },\n            ]);\n        } else {\n            Alert.alert(\"未入力です\");\n        }\n    }\n    \n    //起動\n    const showDatePicker = () => {\n        setDatePickerVisibility(true);\n    };\n\n    //終了\n    const hideDatePicker = () => {\n        setDatePickerVisibility(false);\n    };\n\n    //表示用のstateへ日時を代入\n    const formatDatetime = (date) => {\n        setDetailTime(date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日');\n    };\n\n    //決定ボタン押下時の処理\n    const handleConfirm = (date) => {\n        setBirthday(date);\n        formatDatetime(date);\n        hideDatePicker();\n    };\n\n    return (\n        <ScrollView scrollEnabled={false}>\n            <View style={styles.inputContainer}>\n                <Text>名前</Text>\n                <TextInput\n                        keyboardType=\"web-search\"\n                        value={babyName}\n                        style={styles.input}\n                        onChangeText={(text) => { setBabyName(text); }}\n                        //autoFocus\n                        placeholder = \"赤ちゃんの名前を入力\"\n                />\n            </View>\n            <View>\n                        <Button title={String(detailTime)} onPress={showDatePicker} />\n                        <DateTimePickerModal\n                            isVisible={isDatePickerVisible}\n                            value={birthday}\n                            onConfirm={handleConfirm}\n                            onCancel={hideDatePicker}\n                            mode=\"date\"//入力項目\n                            locale='ja'//日本語化\n                            display=\"spinner\"//UIタイプ\n                            confirmTextIOS=\"決定\"//決定ボタンテキスト\n                            cancelTextIOS=\"キャンセル\"//キャンセルボタンテキスト\n                            minuteInterval={5}//分数間隔\n                            headerTextIOS=\"\"//入力欄ヘッダーテキスト\n                            textColor=\"blue\"//ピッカーカラー\n                            date={birthday}//ピッカー日付デフォルト\n                        />\n                    </View>\n            <View style={modalStyles.container}>\n                <TouchableOpacity style={modalStyles.confirmButton} onPress={toggleModal} >\n                    <Text style={modalStyles.confirmButtonText}>close</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={modalStyles.confirmButton} onPress={handlePress} >\n                    <Text style={modalStyles.confirmButtonText}>登録</Text>\n                </TouchableOpacity>\n            </View>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    inputTypeContainer: {\n        paddingHorizontal: 27,\n        paddingVertical: 10,\n        //height: 50,\n        //backgroundColor: '#987652',\n        //flex: 1,\n        //flexDirection: 'row',\n        //width: 350 ,\n    },\n    inputContainer: {\n        paddingHorizontal: 27,\n        paddingVertical: 10,\n        height: 75,\n        backgroundColor: '#859602'\n        //flex: 1,\n    },\n    input: {\n        flex: 1,\n        textAlignVertical: 'top',\n        fontSize: 16,\n        lineHeight: 25,\n        backgroundColor: '#ffffff'\n    },\n});\n\nconst modalStyles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n    },\n    confirmButton : {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop : '5%',\n        backgroundColor : '#FFF',\n        borderColor : '#36C1A7',\n        borderWidth : 1,\n        borderRadius : 10,\n        width: \"40%\",\n    },\n    confirmButtonText : {\n        color : '#36C1A7',\n        fontWeight : 'bold',\n        textAlign : 'center',\n        padding: 10,\n        fontSize: 16,\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}
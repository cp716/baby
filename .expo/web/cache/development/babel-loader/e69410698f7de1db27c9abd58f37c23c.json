{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"enterTouchDelay\", \"leaveTouchDelay\", \"title\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport { addEventListener } from \"../../utils/addEventListener\";\nimport Portal from \"../Portal/Portal\";\nimport Text from \"../Typography/Text\";\nimport { getTooltipPosition } from \"./utils\";\n\nvar Tooltip = function Tooltip(_ref) {\n  var children = _ref.children,\n      _ref$enterTouchDelay = _ref.enterTouchDelay,\n      enterTouchDelay = _ref$enterTouchDelay === void 0 ? 500 : _ref$enterTouchDelay,\n      _ref$leaveTouchDelay = _ref.leaveTouchDelay,\n      leaveTouchDelay = _ref$leaveTouchDelay === void 0 ? 1500 : _ref$leaveTouchDelay,\n      title = _ref.title,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var theme = useInternalTheme();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    children: {},\n    tooltip: {},\n    measured: false\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      measurement = _React$useState4[0],\n      setMeasurement = _React$useState4[1];\n\n  var showTooltipTimer = React.useRef();\n  var hideTooltipTimer = React.useRef();\n  var childrenWrapperRef = React.useRef();\n  var touched = React.useRef(false);\n  var isWeb = Platform.OS === 'web';\n  React.useEffect(function () {\n    return function () {\n      if (showTooltipTimer.current) {\n        clearTimeout(showTooltipTimer.current);\n      }\n\n      if (hideTooltipTimer.current) {\n        clearTimeout(hideTooltipTimer.current);\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    var subscription = addEventListener(Dimensions, 'change', function () {\n      return setVisible(false);\n    });\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n\n  var handleOnLayout = function handleOnLayout(_ref2) {\n    var layout = _ref2.nativeEvent.layout;\n    childrenWrapperRef.current.measure(function (_x, _y, width, height, pageX, pageY) {\n      setMeasurement({\n        children: {\n          pageX: pageX,\n          pageY: pageY,\n          height: height,\n          width: width\n        },\n        tooltip: _objectSpread({}, layout),\n        measured: true\n      });\n    });\n  };\n\n  var handleTouchStart = function handleTouchStart() {\n    if (hideTooltipTimer.current) {\n      clearTimeout(hideTooltipTimer.current);\n    }\n\n    showTooltipTimer.current = setTimeout(function () {\n      touched.current = true;\n      setVisible(true);\n    }, enterTouchDelay);\n  };\n\n  var handleTouchEnd = function handleTouchEnd() {\n    touched.current = false;\n\n    if (showTooltipTimer.current) {\n      clearTimeout(showTooltipTimer.current);\n    }\n\n    hideTooltipTimer.current = setTimeout(function () {\n      setVisible(false);\n      setMeasurement({\n        children: {},\n        tooltip: {},\n        measured: false\n      });\n    }, leaveTouchDelay);\n  };\n\n  var mobilePressProps = {\n    onPress: React.useCallback(function () {\n      if (touched.current) {\n        return null;\n      } else {\n        var _children$props$onPre, _children$props;\n\n        return (_children$props$onPre = (_children$props = children.props).onPress) === null || _children$props$onPre === void 0 ? void 0 : _children$props$onPre.call(_children$props);\n      }\n    }, [children.props])\n  };\n  var webPressProps = {\n    onHoverIn: function onHoverIn() {\n      var _children$props$onHov, _children$props2;\n\n      handleTouchStart();\n      (_children$props$onHov = (_children$props2 = children.props).onHoverIn) === null || _children$props$onHov === void 0 ? void 0 : _children$props$onHov.call(_children$props2);\n    },\n    onHoverOut: function onHoverOut() {\n      var _children$props$onHov2, _children$props3;\n\n      handleTouchEnd();\n      (_children$props$onHov2 = (_children$props3 = children.props).onHoverOut) === null || _children$props$onHov2 === void 0 ? void 0 : _children$props$onHov2.call(_children$props3);\n    }\n  };\n  return React.createElement(React.Fragment, null, visible && React.createElement(Portal, null, React.createElement(View, {\n    onLayout: handleOnLayout,\n    style: [styles.tooltip, _objectSpread(_objectSpread({\n      backgroundColor: theme.isV3 ? theme.colors.onSurface : theme.colors.tooltip\n    }, getTooltipPosition(measurement)), {}, {\n      borderRadius: theme.roundness\n    }, measurement.measured ? styles.visible : styles.hidden)],\n    testID: \"tooltip-container\"\n  }, React.createElement(Text, {\n    accessibilityLiveRegion: \"polite\",\n    numberOfLines: 1,\n    selectable: false,\n    variant: \"labelLarge\",\n    style: {\n      color: theme.colors.surface\n    }\n  }, title))), React.createElement(View, {\n    onTouchStart: handleTouchStart,\n    onTouchEnd: handleTouchEnd,\n    onTouchCancel: handleTouchEnd\n  }, React.cloneElement(children, _objectSpread(_objectSpread({}, rest), {}, {\n    ref: childrenWrapperRef\n  }, isWeb ? webPressProps : mobilePressProps))));\n};\n\nvar styles = StyleSheet.create({\n  tooltip: {\n    alignSelf: 'flex-start',\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    height: 32,\n    maxHeight: 32\n  },\n  visible: {\n    opacity: 1\n  },\n  hidden: {\n    opacity: 0\n  }\n});\nexport default Tooltip;","map":{"version":3,"sources":["Tooltip.tsx"],"names":["React","useInternalTheme","addEventListener","Portal","Text","getTooltipPosition","Tooltip","children","enterTouchDelay","leaveTouchDelay","title","rest","theme","visible","setVisible","useState","measurement","setMeasurement","tooltip","measured","showTooltipTimer","useRef","hideTooltipTimer","childrenWrapperRef","touched","isWeb","Platform","OS","useEffect","current","clearTimeout","subscription","Dimensions","remove","handleOnLayout","nativeEvent","layout","measure","_x","_y","width","height","pageX","pageY","handleTouchStart","setTimeout","handleTouchEnd","mobilePressProps","onPress","useCallback","props","webPressProps","onHoverIn","onHoverOut","styles","backgroundColor","isV3","colors","onSurface","borderRadius","roundness","hidden","color","surface","cloneElement","ref","StyleSheet","create","alignSelf","justifyContent","paddingHorizontal","maxHeight","opacity"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Dimensions,\n  View,\n  LayoutChangeEvent,\n  StyleSheet,\n  Platform,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { addEventListener } from '../../utils/addEventListener';\nimport Portal from '../Portal/Portal';\nimport Text from '../Typography/Text';\nimport { getTooltipPosition, Measurement } from './utils';\n\nexport type Props = {\n  /**\n   * Tooltip reference element. Needs to be able to hold a ref.\n   */\n  children: React.ReactElement;\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay?: number;\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay?: number;\n  /**\n   * Tooltip title\n   */\n  title: string;\n};\n\n/**\n * Tooltips display informative text when users hover over, focus on, or tap an element.\n *\n * Plain tooltips, when activated, display a text label identifying an element, such as a description of its function. Tooltips should include only short, descriptive text and avoid restating visible UI text.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/tooltip.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { IconButton, Tooltip } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Tooltip title=\"Selected Camera\">\n *     <IconButton icon=\"camera\" selected size={24} onPress={() => {}} />\n *   </Tooltip>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Tooltip = ({\n  children,\n  enterTouchDelay = 500,\n  leaveTouchDelay = 1500,\n  title,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme();\n  const [visible, setVisible] = React.useState(false);\n\n  const [measurement, setMeasurement] = React.useState({\n    children: {},\n    tooltip: {},\n    measured: false,\n  });\n  const showTooltipTimer = React.useRef<NodeJS.Timeout>();\n  const hideTooltipTimer = React.useRef<NodeJS.Timeout>();\n  const childrenWrapperRef = React.useRef() as React.MutableRefObject<View>;\n  const touched = React.useRef(false);\n\n  const isWeb = Platform.OS === 'web';\n\n  React.useEffect(() => {\n    return () => {\n      if (showTooltipTimer.current) {\n        clearTimeout(showTooltipTimer.current);\n      }\n\n      if (hideTooltipTimer.current) {\n        clearTimeout(hideTooltipTimer.current);\n      }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const subscription = addEventListener(Dimensions, 'change', () =>\n      setVisible(false)\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  const handleOnLayout = ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n    childrenWrapperRef.current.measure(\n      (_x, _y, width, height, pageX, pageY) => {\n        setMeasurement({\n          children: { pageX, pageY, height, width },\n          tooltip: { ...layout },\n          measured: true,\n        });\n      }\n    );\n  };\n\n  const handleTouchStart = () => {\n    if (hideTooltipTimer.current) {\n      clearTimeout(hideTooltipTimer.current);\n    }\n\n    showTooltipTimer.current = setTimeout(() => {\n      touched.current = true;\n      setVisible(true);\n    }, enterTouchDelay) as unknown as NodeJS.Timeout;\n  };\n\n  const handleTouchEnd = () => {\n    touched.current = false;\n    if (showTooltipTimer.current) {\n      clearTimeout(showTooltipTimer.current);\n    }\n\n    hideTooltipTimer.current = setTimeout(() => {\n      setVisible(false);\n      setMeasurement({ children: {}, tooltip: {}, measured: false });\n    }, leaveTouchDelay) as unknown as NodeJS.Timeout;\n  };\n\n  const mobilePressProps = {\n    onPress: React.useCallback(() => {\n      if (touched.current) {\n        return null;\n      } else {\n        return children.props.onPress?.();\n      }\n    }, [children.props]),\n  };\n\n  const webPressProps = {\n    onHoverIn: () => {\n      handleTouchStart();\n      children.props.onHoverIn?.();\n    },\n    onHoverOut: () => {\n      handleTouchEnd();\n      children.props.onHoverOut?.();\n    },\n  };\n\n  return (\n    <>\n      {visible && (\n        <Portal>\n          <View\n            onLayout={handleOnLayout}\n            style={[\n              styles.tooltip,\n              {\n                backgroundColor: theme.isV3\n                  ? theme.colors.onSurface\n                  : theme.colors.tooltip,\n                ...getTooltipPosition(measurement as Measurement),\n                borderRadius: theme.roundness,\n                ...(measurement.measured ? styles.visible : styles.hidden),\n              },\n            ]}\n            testID=\"tooltip-container\"\n          >\n            <Text\n              accessibilityLiveRegion=\"polite\"\n              numberOfLines={1}\n              selectable={false}\n              variant=\"labelLarge\"\n              style={{ color: theme.colors.surface }}\n            >\n              {title}\n            </Text>\n          </View>\n        </Portal>\n      )}\n      <View\n        onTouchStart={handleTouchStart}\n        onTouchEnd={handleTouchEnd}\n        onTouchCancel={handleTouchEnd}\n      >\n        {React.cloneElement(children, {\n          ...rest,\n          ref: childrenWrapperRef,\n          ...(isWeb ? webPressProps : mobilePressProps),\n        })}\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tooltip: {\n    alignSelf: 'flex-start',\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    height: 32,\n    maxHeight: 32,\n  },\n  visible: {\n    opacity: 1,\n  },\n  hidden: {\n    opacity: 0,\n  },\n});\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}
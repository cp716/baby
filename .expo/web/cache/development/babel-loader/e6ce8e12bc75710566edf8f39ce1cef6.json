{"ast":null,"code":"import Storage from 'react-native-storage';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar storage = new Storage({\n  size: 1000,\n  storageBackend: AsyncStorage,\n  defaultExpires: 1000 * 3600 * 24,\n  enableCache: true,\n  sync: {}\n});\nexport default storage;","map":{"version":3,"names":["Storage","AsyncStorage","storage","size","storageBackend","defaultExpires","enableCache","sync"],"sources":["/Users/atsushi/Dev/baby/src/context/Storage.jsx"],"sourcesContent":["import Storage from 'react-native-storage';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst storage = new Storage({\n    // maximum capacity, default 1000 key-ids\n    size: 1000,\n\n    // Use AsyncStorage for RN apps, or window.localStorage for web apps.\n    // If storageBackend is not set, data will be lost after reload.\n    storageBackend: AsyncStorage, // for web: window.localStorage\n\n    // expire time, default: 1 day (1000 * 3600 * 24 milliseconds).\n    // can be null, which means never expire.\n    defaultExpires: 1000 * 3600 * 24,\n\n    // cache data in the memory. default is true.\n    enableCache: true,\n\n    // if data was not found in storage or expired data was found,\n    // the corresponding sync method will be invoked returning\n    // the latest data.\n    sync: {\n        // we'll talk about the details later.\n    }\n});\n\nexport default storage;"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,IAAMC,OAAO,GAAG,IAAIF,OAAJ,CAAY;EAExBG,IAAI,EAAE,IAFkB;EAMxBC,cAAc,EAAEH,YANQ;EAUxBI,cAAc,EAAE,OAAO,IAAP,GAAc,EAVN;EAaxBC,WAAW,EAAE,IAbW;EAkBxBC,IAAI,EAAE;AAlBkB,CAAZ,CAAhB;AAuBA,eAAeL,OAAf"},"metadata":{},"sourceType":"module"}
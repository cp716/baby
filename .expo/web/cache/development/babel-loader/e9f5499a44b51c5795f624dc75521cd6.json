{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport isEmpty from 'lodash/isEmpty';\nimport React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport constants from \"../commons/constants\";\nimport { page, isGTE, isLTE, sameMonth } from \"../dateutils\";\nimport { xdateToData, parseDate, toMarkingFormat } from \"../interface\";\nimport { getState } from \"../day-state-manager\";\nimport { extractHeaderProps, extractDayProps } from \"../componentUpdater\";\nimport { useDidUpdate } from \"../hooks\";\nimport styleConstructor from \"./style\";\nimport CalendarHeader from \"./header\";\nimport Day from \"./day/index\";\nimport BasicDay from \"./day/basic\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Calendar = function Calendar(props) {\n  var initialDate = props.initialDate,\n      current = props.current,\n      theme = props.theme,\n      markedDates = props.markedDates,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      allowSelectionOutOfRange = props.allowSelectionOutOfRange,\n      onDayPress = props.onDayPress,\n      onDayLongPress = props.onDayLongPress,\n      onMonthChange = props.onMonthChange,\n      onVisibleMonthsChange = props.onVisibleMonthsChange,\n      disableMonthChange = props.disableMonthChange,\n      enableSwipeMonths = props.enableSwipeMonths,\n      hideExtraDays = props.hideExtraDays,\n      firstDay = props.firstDay,\n      showSixWeeks = props.showSixWeeks,\n      displayLoadingIndicator = props.displayLoadingIndicator,\n      customHeader = props.customHeader,\n      headerStyle = props.headerStyle,\n      accessibilityElementsHidden = props.accessibilityElementsHidden,\n      importantForAccessibility = props.importantForAccessibility,\n      testID = props.testID,\n      propsStyle = props.style;\n\n  var _useState = useState(current || initialDate ? parseDate(current || initialDate) : new XDate()),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMonth = _useState2[0],\n      setCurrentMonth = _useState2[1];\n\n  var style = useRef(styleConstructor(theme));\n  var header = useRef();\n  var weekNumberMarking = useRef({\n    disabled: true,\n    disableTouchEvent: true\n  });\n  useEffect(function () {\n    if (initialDate) {\n      setCurrentMonth(parseDate(initialDate));\n    }\n  }, [initialDate]);\n  useDidUpdate(function () {\n    var _currentMonth = currentMonth.clone();\n\n    onMonthChange == null ? void 0 : onMonthChange(xdateToData(_currentMonth));\n    onVisibleMonthsChange == null ? void 0 : onVisibleMonthsChange([xdateToData(_currentMonth)]);\n  }, [currentMonth]);\n  var updateMonth = useCallback(function (newMonth) {\n    if (sameMonth(newMonth, currentMonth)) {\n      return;\n    }\n\n    setCurrentMonth(newMonth);\n  }, [currentMonth]);\n  var addMonth = useCallback(function (count) {\n    var newMonth = currentMonth.clone().addMonths(count, true);\n    updateMonth(newMonth);\n  }, [currentMonth, updateMonth]);\n  var handleDayInteraction = useCallback(function (date, interaction) {\n    var day = new XDate(date.dateString);\n\n    if (allowSelectionOutOfRange || !(minDate && !isGTE(day, new XDate(minDate))) && !(maxDate && !isLTE(day, new XDate(maxDate)))) {\n      if (!disableMonthChange) {\n        updateMonth(day);\n      }\n\n      if (interaction) {\n        interaction(date);\n      }\n    }\n  }, [minDate, maxDate, allowSelectionOutOfRange, disableMonthChange, updateMonth]);\n\n  var _onDayPress = useCallback(function (date) {\n    if (date) handleDayInteraction(date, onDayPress);\n  }, [handleDayInteraction, onDayPress]);\n\n  var onLongPressDay = useCallback(function (date) {\n    if (date) handleDayInteraction(date, onDayLongPress);\n  }, [handleDayInteraction, onDayLongPress]);\n  var onSwipeLeft = useCallback(function () {\n    var _header$current;\n\n    (_header$current = header.current) == null ? void 0 : _header$current.onPressRight();\n  }, [header]);\n  var onSwipeRight = useCallback(function () {\n    var _header$current2;\n\n    (_header$current2 = header.current) == null ? void 0 : _header$current2.onPressLeft();\n  }, [header]);\n\n  var _onSwipe = useCallback(function (gestureName) {\n    var SWIPE_UP = swipeDirections.SWIPE_UP,\n        SWIPE_DOWN = swipeDirections.SWIPE_DOWN,\n        SWIPE_LEFT = swipeDirections.SWIPE_LEFT,\n        SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT;\n\n    switch (gestureName) {\n      case SWIPE_UP:\n      case SWIPE_DOWN:\n        break;\n\n      case SWIPE_LEFT:\n        constants.isRTL ? onSwipeRight() : onSwipeLeft();\n        break;\n\n      case SWIPE_RIGHT:\n        constants.isRTL ? onSwipeLeft() : onSwipeRight();\n        break;\n    }\n  }, [onSwipeLeft, onSwipeRight]);\n\n  var renderWeekNumber = function renderWeekNumber(weekNumber) {\n    return _jsx(View, {\n      style: style.current.dayContainer,\n      children: _jsx(BasicDay, {\n        marking: weekNumberMarking.current,\n        theme: theme,\n        testID: testID + \".weekNumber_\" + weekNumber,\n        children: weekNumber\n      }, \"week-\" + weekNumber)\n    }, \"week-container-\" + weekNumber);\n  };\n\n  var renderDay = function renderDay(day, id) {\n    var dayProps = extractDayProps(props);\n\n    if (!sameMonth(day, currentMonth) && hideExtraDays) {\n      return _jsx(View, {\n        style: style.current.emptyDayContainer\n      }, id);\n    }\n\n    var dateString = toMarkingFormat(day);\n    var isControlled = isEmpty(props.context);\n    return _jsx(View, {\n      style: style.current.dayContainer,\n      children: _jsx(Day, _objectSpread(_objectSpread({}, dayProps), {}, {\n        testID: testID + \".day_\" + dateString,\n        date: dateString,\n        state: getState(day, currentMonth, props, isControlled),\n        marking: markedDates == null ? void 0 : markedDates[dateString],\n        onPress: _onDayPress,\n        onLongPress: onLongPressDay\n      }))\n    }, id);\n  };\n\n  var renderWeek = function renderWeek(days, id) {\n    var week = [];\n    days.forEach(function (day, id2) {\n      week.push(renderDay(day, id2));\n    }, _this);\n\n    if (props.showWeekNumbers) {\n      week.unshift(renderWeekNumber(days[days.length - 1].getWeek()));\n    }\n\n    return _jsx(View, {\n      style: style.current.week,\n      children: week\n    }, id);\n  };\n\n  var renderMonth = function renderMonth() {\n    var shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n    var days = page(currentMonth, firstDay, shouldShowSixWeeks);\n    var weeks = [];\n\n    while (days.length) {\n      weeks.push(renderWeek(days.splice(0, 7), weeks.length));\n    }\n\n    return _jsx(View, {\n      style: style.current.monthView,\n      children: weeks\n    });\n  };\n\n  var shouldDisplayIndicator = useMemo(function () {\n    if (currentMonth) {\n      var lastMonthOfDay = toMarkingFormat(currentMonth.clone().addMonths(1, true).setDate(1).addDays(-1));\n\n      if (displayLoadingIndicator && !(markedDates != null && markedDates[lastMonthOfDay])) {\n        return true;\n      }\n    }\n\n    return false;\n  }, [currentMonth, displayLoadingIndicator, markedDates]);\n\n  var renderHeader = function renderHeader() {\n    var headerProps = extractHeaderProps(props);\n    var ref = customHeader ? undefined : header;\n    var CustomHeader = customHeader;\n    var HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n    return _jsx(HeaderComponent, _objectSpread(_objectSpread({}, headerProps), {}, {\n      testID: testID + \".header\",\n      style: headerStyle,\n      ref: ref,\n      month: currentMonth,\n      addMonth: addMonth,\n      displayLoadingIndicator: shouldDisplayIndicator\n    }));\n  };\n\n  var GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n  var swipeProps = {\n    onSwipe: function onSwipe(direction) {\n      return _onSwipe(direction);\n    }\n  };\n  var gestureProps = enableSwipeMonths ? swipeProps : undefined;\n  return _jsx(GestureComponent, _objectSpread(_objectSpread({}, gestureProps), {}, {\n    children: _jsxs(View, {\n      style: [style.current.container, propsStyle],\n      testID: testID,\n      accessibilityElementsHidden: accessibilityElementsHidden,\n      importantForAccessibility: importantForAccessibility,\n      children: [renderHeader(), renderMonth()]\n    })\n  }));\n};\n\nexport default Calendar;\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarHeader.propTypes), Day.propTypes), {}, {\n  theme: PropTypes.object,\n  firstDay: PropTypes.number,\n  displayLoadingIndicator: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n  current: PropTypes.string,\n  initialDate: PropTypes.string,\n  minDate: PropTypes.string,\n  maxDate: PropTypes.string,\n  markedDates: PropTypes.object,\n  hideExtraDays: PropTypes.bool,\n  showSixWeeks: PropTypes.bool,\n  onDayPress: PropTypes.func,\n  onDayLongPress: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  onVisibleMonthsChange: PropTypes.func,\n  disableMonthChange: PropTypes.bool,\n  enableSwipeMonths: PropTypes.bool,\n  disabledByDefault: PropTypes.bool,\n  headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  customHeader: PropTypes.any,\n  allowSelectionOutOfRange: PropTypes.bool\n});","map":{"version":3,"names":["PropTypes","XDate","isEmpty","React","useRef","useState","useEffect","useCallback","useMemo","GestureRecognizer","swipeDirections","constants","page","isGTE","isLTE","sameMonth","xdateToData","parseDate","toMarkingFormat","getState","extractHeaderProps","extractDayProps","useDidUpdate","styleConstructor","CalendarHeader","Day","BasicDay","Calendar","props","initialDate","current","theme","markedDates","minDate","maxDate","allowSelectionOutOfRange","onDayPress","onDayLongPress","onMonthChange","onVisibleMonthsChange","disableMonthChange","enableSwipeMonths","hideExtraDays","firstDay","showSixWeeks","displayLoadingIndicator","customHeader","headerStyle","accessibilityElementsHidden","importantForAccessibility","testID","propsStyle","style","currentMonth","setCurrentMonth","header","weekNumberMarking","disabled","disableTouchEvent","_currentMonth","clone","updateMonth","newMonth","addMonth","count","addMonths","handleDayInteraction","date","interaction","day","dateString","_onDayPress","onLongPressDay","onSwipeLeft","onPressRight","onSwipeRight","onPressLeft","onSwipe","gestureName","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","isRTL","renderWeekNumber","weekNumber","dayContainer","renderDay","id","dayProps","emptyDayContainer","isControlled","context","renderWeek","days","week","forEach","id2","push","showWeekNumbers","unshift","length","getWeek","renderMonth","shouldShowSixWeeks","weeks","splice","monthView","shouldDisplayIndicator","lastMonthOfDay","setDate","addDays","renderHeader","headerProps","ref","undefined","CustomHeader","HeaderComponent","GestureComponent","View","swipeProps","direction","gestureProps","container","displayName","propTypes","object","number","bool","oneOfType","array","string","func","disabledByDefault","any"],"sources":["/Users/atsushi/Dev/baby/node_modules/react-native-calendars/src/calendar/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport isEmpty from 'lodash/isEmpty';\nimport React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { View } from 'react-native';\n// @ts-expect-error\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport constants from '../commons/constants';\nimport { page, isGTE, isLTE, sameMonth } from '../dateutils';\nimport { xdateToData, parseDate, toMarkingFormat } from '../interface';\nimport { getState } from '../day-state-manager';\nimport { extractHeaderProps, extractDayProps } from '../componentUpdater';\nimport { useDidUpdate } from '../hooks';\nimport styleConstructor from './style';\nimport CalendarHeader from './header';\nimport Day from './day/index';\nimport BasicDay from './day/basic';\n/**\n * @description: Calendar component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar.gif\n */\nconst Calendar = (props) => {\n    const { initialDate, current, theme, markedDates, minDate, maxDate, allowSelectionOutOfRange, onDayPress, onDayLongPress, onMonthChange, onVisibleMonthsChange, disableMonthChange, enableSwipeMonths, hideExtraDays, firstDay, showSixWeeks, displayLoadingIndicator, customHeader, headerStyle, accessibilityElementsHidden, importantForAccessibility, testID, style: propsStyle } = props;\n    const [currentMonth, setCurrentMonth] = useState(current || initialDate ? parseDate(current || initialDate) : new XDate());\n    const style = useRef(styleConstructor(theme));\n    const header = useRef();\n    const weekNumberMarking = useRef({ disabled: true, disableTouchEvent: true });\n    useEffect(() => {\n        if (initialDate) {\n            setCurrentMonth(parseDate(initialDate));\n        }\n    }, [initialDate]);\n    useDidUpdate(() => {\n        const _currentMonth = currentMonth.clone();\n        onMonthChange?.(xdateToData(_currentMonth));\n        onVisibleMonthsChange?.([xdateToData(_currentMonth)]);\n    }, [currentMonth]);\n    const updateMonth = useCallback((newMonth) => {\n        if (sameMonth(newMonth, currentMonth)) {\n            return;\n        }\n        setCurrentMonth(newMonth);\n    }, [currentMonth]);\n    const addMonth = useCallback((count) => {\n        const newMonth = currentMonth.clone().addMonths(count, true);\n        updateMonth(newMonth);\n    }, [currentMonth, updateMonth]);\n    const handleDayInteraction = useCallback((date, interaction) => {\n        const day = new XDate(date.dateString);\n        if (allowSelectionOutOfRange || !(minDate && !isGTE(day, new XDate(minDate))) && !(maxDate && !isLTE(day, new XDate(maxDate)))) {\n            if (!disableMonthChange) {\n                updateMonth(day);\n            }\n            if (interaction) {\n                interaction(date);\n            }\n        }\n    }, [minDate, maxDate, allowSelectionOutOfRange, disableMonthChange, updateMonth]);\n    const _onDayPress = useCallback((date) => {\n        if (date)\n            handleDayInteraction(date, onDayPress);\n    }, [handleDayInteraction, onDayPress]);\n    const onLongPressDay = useCallback((date) => {\n        if (date)\n            handleDayInteraction(date, onDayLongPress);\n    }, [handleDayInteraction, onDayLongPress]);\n    const onSwipeLeft = useCallback(() => {\n        // @ts-expect-error\n        header.current?.onPressRight();\n    }, [header]);\n    const onSwipeRight = useCallback(() => {\n        // @ts-expect-error\n        header.current?.onPressLeft();\n    }, [header]);\n    const onSwipe = useCallback((gestureName) => {\n        const { SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT } = swipeDirections;\n        switch (gestureName) {\n            case SWIPE_UP:\n            case SWIPE_DOWN:\n                break;\n            case SWIPE_LEFT:\n                constants.isRTL ? onSwipeRight() : onSwipeLeft();\n                break;\n            case SWIPE_RIGHT:\n                constants.isRTL ? onSwipeLeft() : onSwipeRight();\n                break;\n        }\n    }, [onSwipeLeft, onSwipeRight]);\n    const renderWeekNumber = (weekNumber) => {\n        return (<View style={style.current.dayContainer} key={`week-container-${weekNumber}`}>\n        <BasicDay key={`week-${weekNumber}`} marking={weekNumberMarking.current} \n        // state='disabled'\n        theme={theme} testID={`${testID}.weekNumber_${weekNumber}`}>\n          {weekNumber}\n        </BasicDay>\n      </View>);\n    };\n    const renderDay = (day, id) => {\n        const dayProps = extractDayProps(props);\n        if (!sameMonth(day, currentMonth) && hideExtraDays) {\n            return <View key={id} style={style.current.emptyDayContainer}/>;\n        }\n        const dateString = toMarkingFormat(day);\n        const isControlled = isEmpty(props.context);\n        return (<View style={style.current.dayContainer} key={id}>\n        <Day {...dayProps} testID={`${testID}.day_${dateString}`} date={dateString} state={getState(day, currentMonth, props, isControlled)} marking={markedDates?.[dateString]} onPress={_onDayPress} onLongPress={onLongPressDay}/>\n      </View>);\n    };\n    const renderWeek = (days, id) => {\n        const week = [];\n        days.forEach((day, id2) => {\n            week.push(renderDay(day, id2));\n        }, this);\n        if (props.showWeekNumbers) {\n            week.unshift(renderWeekNumber(days[days.length - 1].getWeek()));\n        }\n        return (<View style={style.current.week} key={id}>\n        {week}\n      </View>);\n    };\n    const renderMonth = () => {\n        const shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n        const days = page(currentMonth, firstDay, shouldShowSixWeeks);\n        const weeks = [];\n        while (days.length) {\n            weeks.push(renderWeek(days.splice(0, 7), weeks.length));\n        }\n        return <View style={style.current.monthView}>{weeks}</View>;\n    };\n    const shouldDisplayIndicator = useMemo(() => {\n        if (currentMonth) {\n            const lastMonthOfDay = toMarkingFormat(currentMonth.clone().addMonths(1, true).setDate(1).addDays(-1));\n            if (displayLoadingIndicator && !markedDates?.[lastMonthOfDay]) {\n                return true;\n            }\n        }\n        return false;\n    }, [currentMonth, displayLoadingIndicator, markedDates]);\n    const renderHeader = () => {\n        const headerProps = extractHeaderProps(props);\n        const ref = customHeader ? undefined : header;\n        const CustomHeader = customHeader;\n        const HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n        return (<HeaderComponent {...headerProps} testID={`${testID}.header`} style={headerStyle} ref={ref} month={currentMonth} addMonth={addMonth} displayLoadingIndicator={shouldDisplayIndicator}/>);\n    };\n    const GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n    const swipeProps = {\n        onSwipe: (direction) => onSwipe(direction)\n    };\n    const gestureProps = enableSwipeMonths ? swipeProps : undefined;\n    return (<GestureComponent {...gestureProps}>\n      <View style={[style.current.container, propsStyle]} testID={testID} accessibilityElementsHidden={accessibilityElementsHidden} // iOS\n     importantForAccessibility={importantForAccessibility} // Android\n    >\n        {renderHeader()}\n        {renderMonth()}\n      </View>\n    </GestureComponent>);\n};\nexport default Calendar;\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = {\n    ...CalendarHeader.propTypes,\n    ...Day.propTypes,\n    theme: PropTypes.object,\n    firstDay: PropTypes.number,\n    displayLoadingIndicator: PropTypes.bool,\n    showWeekNumbers: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n    current: PropTypes.string,\n    initialDate: PropTypes.string,\n    minDate: PropTypes.string,\n    maxDate: PropTypes.string,\n    markedDates: PropTypes.object,\n    hideExtraDays: PropTypes.bool,\n    showSixWeeks: PropTypes.bool,\n    onDayPress: PropTypes.func,\n    onDayLongPress: PropTypes.func,\n    onMonthChange: PropTypes.func,\n    onVisibleMonthsChange: PropTypes.func,\n    disableMonthChange: PropTypes.bool,\n    enableSwipeMonths: PropTypes.bool,\n    disabledByDefault: PropTypes.bool,\n    headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    customHeader: PropTypes.any,\n    allowSelectionOutOfRange: PropTypes.bool\n};\n"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,WAA7C,EAA0DC,OAA1D,QAAyE,OAAzE;;AAGA,OAAOC,iBAAP,IAA4BC,eAA5B,QAAmD,6BAAnD;AACA,OAAOC,SAAP;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,SAA7B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,eAAjC;AACA,SAASC,QAAT;AACA,SAASC,kBAAT,EAA6BC,eAA7B;AACA,SAASC,YAAT;AACA,OAAOC,gBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,GAAP;AACA,OAAOC,QAAP;;;;AAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;EACxB,IAAQC,WAAR,GAAwXD,KAAxX,CAAQC,WAAR;EAAA,IAAqBC,OAArB,GAAwXF,KAAxX,CAAqBE,OAArB;EAAA,IAA8BC,KAA9B,GAAwXH,KAAxX,CAA8BG,KAA9B;EAAA,IAAqCC,WAArC,GAAwXJ,KAAxX,CAAqCI,WAArC;EAAA,IAAkDC,OAAlD,GAAwXL,KAAxX,CAAkDK,OAAlD;EAAA,IAA2DC,OAA3D,GAAwXN,KAAxX,CAA2DM,OAA3D;EAAA,IAAoEC,wBAApE,GAAwXP,KAAxX,CAAoEO,wBAApE;EAAA,IAA8FC,UAA9F,GAAwXR,KAAxX,CAA8FQ,UAA9F;EAAA,IAA0GC,cAA1G,GAAwXT,KAAxX,CAA0GS,cAA1G;EAAA,IAA0HC,aAA1H,GAAwXV,KAAxX,CAA0HU,aAA1H;EAAA,IAAyIC,qBAAzI,GAAwXX,KAAxX,CAAyIW,qBAAzI;EAAA,IAAgKC,kBAAhK,GAAwXZ,KAAxX,CAAgKY,kBAAhK;EAAA,IAAoLC,iBAApL,GAAwXb,KAAxX,CAAoLa,iBAApL;EAAA,IAAuMC,aAAvM,GAAwXd,KAAxX,CAAuMc,aAAvM;EAAA,IAAsNC,QAAtN,GAAwXf,KAAxX,CAAsNe,QAAtN;EAAA,IAAgOC,YAAhO,GAAwXhB,KAAxX,CAAgOgB,YAAhO;EAAA,IAA8OC,uBAA9O,GAAwXjB,KAAxX,CAA8OiB,uBAA9O;EAAA,IAAuQC,YAAvQ,GAAwXlB,KAAxX,CAAuQkB,YAAvQ;EAAA,IAAqRC,WAArR,GAAwXnB,KAAxX,CAAqRmB,WAArR;EAAA,IAAkSC,2BAAlS,GAAwXpB,KAAxX,CAAkSoB,2BAAlS;EAAA,IAA+TC,yBAA/T,GAAwXrB,KAAxX,CAA+TqB,yBAA/T;EAAA,IAA0VC,MAA1V,GAAwXtB,KAAxX,CAA0VsB,MAA1V;EAAA,IAAyWC,UAAzW,GAAwXvB,KAAxX,CAAkWwB,KAAlW;;EACA,gBAAwC/C,QAAQ,CAACyB,OAAO,IAAID,WAAX,GAAyBZ,SAAS,CAACa,OAAO,IAAID,WAAZ,CAAlC,GAA6D,IAAI5B,KAAJ,EAA9D,CAAhD;EAAA;EAAA,IAAOoD,YAAP;EAAA,IAAqBC,eAArB;;EACA,IAAMF,KAAK,GAAGhD,MAAM,CAACmB,gBAAgB,CAACQ,KAAD,CAAjB,CAApB;EACA,IAAMwB,MAAM,GAAGnD,MAAM,EAArB;EACA,IAAMoD,iBAAiB,GAAGpD,MAAM,CAAC;IAAEqD,QAAQ,EAAE,IAAZ;IAAkBC,iBAAiB,EAAE;EAArC,CAAD,CAAhC;EACApD,SAAS,CAAC,YAAM;IACZ,IAAIuB,WAAJ,EAAiB;MACbyB,eAAe,CAACrC,SAAS,CAACY,WAAD,CAAV,CAAf;IACH;EACJ,CAJQ,EAIN,CAACA,WAAD,CAJM,CAAT;EAKAP,YAAY,CAAC,YAAM;IACf,IAAMqC,aAAa,GAAGN,YAAY,CAACO,KAAb,EAAtB;;IACAtB,aAAa,QAAb,YAAAA,aAAa,CAAGtB,WAAW,CAAC2C,aAAD,CAAd,CAAb;IACApB,qBAAqB,QAArB,YAAAA,qBAAqB,CAAG,CAACvB,WAAW,CAAC2C,aAAD,CAAZ,CAAH,CAArB;EACH,CAJW,EAIT,CAACN,YAAD,CAJS,CAAZ;EAKA,IAAMQ,WAAW,GAAGtD,WAAW,CAAC,UAACuD,QAAD,EAAc;IAC1C,IAAI/C,SAAS,CAAC+C,QAAD,EAAWT,YAAX,CAAb,EAAuC;MACnC;IACH;;IACDC,eAAe,CAACQ,QAAD,CAAf;EACH,CAL8B,EAK5B,CAACT,YAAD,CAL4B,CAA/B;EAMA,IAAMU,QAAQ,GAAGxD,WAAW,CAAC,UAACyD,KAAD,EAAW;IACpC,IAAMF,QAAQ,GAAGT,YAAY,CAACO,KAAb,GAAqBK,SAArB,CAA+BD,KAA/B,EAAsC,IAAtC,CAAjB;IACAH,WAAW,CAACC,QAAD,CAAX;EACH,CAH2B,EAGzB,CAACT,YAAD,EAAeQ,WAAf,CAHyB,CAA5B;EAIA,IAAMK,oBAAoB,GAAG3D,WAAW,CAAC,UAAC4D,IAAD,EAAOC,WAAP,EAAuB;IAC5D,IAAMC,GAAG,GAAG,IAAIpE,KAAJ,CAAUkE,IAAI,CAACG,UAAf,CAAZ;;IACA,IAAInC,wBAAwB,IAAI,EAAEF,OAAO,IAAI,CAACpB,KAAK,CAACwD,GAAD,EAAM,IAAIpE,KAAJ,CAAUgC,OAAV,CAAN,CAAnB,KAAiD,EAAEC,OAAO,IAAI,CAACpB,KAAK,CAACuD,GAAD,EAAM,IAAIpE,KAAJ,CAAUiC,OAAV,CAAN,CAAnB,CAAjF,EAAgI;MAC5H,IAAI,CAACM,kBAAL,EAAyB;QACrBqB,WAAW,CAACQ,GAAD,CAAX;MACH;;MACD,IAAID,WAAJ,EAAiB;QACbA,WAAW,CAACD,IAAD,CAAX;MACH;IACJ;EACJ,CAVuC,EAUrC,CAAClC,OAAD,EAAUC,OAAV,EAAmBC,wBAAnB,EAA6CK,kBAA7C,EAAiEqB,WAAjE,CAVqC,CAAxC;;EAWA,IAAMU,WAAW,GAAGhE,WAAW,CAAC,UAAC4D,IAAD,EAAU;IACtC,IAAIA,IAAJ,EACID,oBAAoB,CAACC,IAAD,EAAO/B,UAAP,CAApB;EACP,CAH8B,EAG5B,CAAC8B,oBAAD,EAAuB9B,UAAvB,CAH4B,CAA/B;;EAIA,IAAMoC,cAAc,GAAGjE,WAAW,CAAC,UAAC4D,IAAD,EAAU;IACzC,IAAIA,IAAJ,EACID,oBAAoB,CAACC,IAAD,EAAO9B,cAAP,CAApB;EACP,CAHiC,EAG/B,CAAC6B,oBAAD,EAAuB7B,cAAvB,CAH+B,CAAlC;EAIA,IAAMoC,WAAW,GAAGlE,WAAW,CAAC,YAAM;IAAA;;IAElC,mBAAAgD,MAAM,CAACzB,OAAP,qCAAgB4C,YAAhB;EACH,CAH8B,EAG5B,CAACnB,MAAD,CAH4B,CAA/B;EAIA,IAAMoB,YAAY,GAAGpE,WAAW,CAAC,YAAM;IAAA;;IAEnC,oBAAAgD,MAAM,CAACzB,OAAP,sCAAgB8C,WAAhB;EACH,CAH+B,EAG7B,CAACrB,MAAD,CAH6B,CAAhC;;EAIA,IAAMsB,QAAO,GAAGtE,WAAW,CAAC,UAACuE,WAAD,EAAiB;IACzC,IAAQC,QAAR,GAA0DrE,eAA1D,CAAQqE,QAAR;IAAA,IAAkBC,UAAlB,GAA0DtE,eAA1D,CAAkBsE,UAAlB;IAAA,IAA8BC,UAA9B,GAA0DvE,eAA1D,CAA8BuE,UAA9B;IAAA,IAA0CC,WAA1C,GAA0DxE,eAA1D,CAA0CwE,WAA1C;;IACA,QAAQJ,WAAR;MACI,KAAKC,QAAL;MACA,KAAKC,UAAL;QACI;;MACJ,KAAKC,UAAL;QACItE,SAAS,CAACwE,KAAV,GAAkBR,YAAY,EAA9B,GAAmCF,WAAW,EAA9C;QACA;;MACJ,KAAKS,WAAL;QACIvE,SAAS,CAACwE,KAAV,GAAkBV,WAAW,EAA7B,GAAkCE,YAAY,EAA9C;QACA;IATR;EAWH,CAb0B,EAaxB,CAACF,WAAD,EAAcE,YAAd,CAbwB,CAA3B;;EAcA,IAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAgB;IACrC,OAAQ,KAAC,IAAD;MAAM,KAAK,EAAEjC,KAAK,CAACtB,OAAN,CAAcwD,YAA3B;MAAA,UACR,KAAC,QAAD;QAAqC,OAAO,EAAE9B,iBAAiB,CAAC1B,OAAhE;QAEA,KAAK,EAAEC,KAFP;QAEc,MAAM,EAAKmB,MAAL,oBAA0BmC,UAF9C;QAAA,UAGGA;MAHH,aAAuBA,UAAvB;IADQ,uBAAgEA,UAAhE,CAAR;EAOH,CARD;;EASA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAClB,GAAD,EAAMmB,EAAN,EAAa;IAC3B,IAAMC,QAAQ,GAAGpE,eAAe,CAACO,KAAD,CAAhC;;IACA,IAAI,CAACb,SAAS,CAACsD,GAAD,EAAMhB,YAAN,CAAV,IAAiCX,aAArC,EAAoD;MAChD,OAAO,KAAC,IAAD;QAAe,KAAK,EAAEU,KAAK,CAACtB,OAAN,CAAc4D;MAApC,GAAWF,EAAX,CAAP;IACH;;IACD,IAAMlB,UAAU,GAAGpD,eAAe,CAACmD,GAAD,CAAlC;IACA,IAAMsB,YAAY,GAAGzF,OAAO,CAAC0B,KAAK,CAACgE,OAAP,CAA5B;IACA,OAAQ,KAAC,IAAD;MAAM,KAAK,EAAExC,KAAK,CAACtB,OAAN,CAAcwD,YAA3B;MAAA,UACR,KAAC,GAAD,kCAASG,QAAT;QAAmB,MAAM,EAAKvC,MAAL,aAAmBoB,UAA5C;QAA0D,IAAI,EAAEA,UAAhE;QAA4E,KAAK,EAAEnD,QAAQ,CAACkD,GAAD,EAAMhB,YAAN,EAAoBzB,KAApB,EAA2B+D,YAA3B,CAA3F;QAAqI,OAAO,EAAE3D,WAAF,oBAAEA,WAAW,CAAGsC,UAAH,CAAzJ;QAAyK,OAAO,EAAEC,WAAlL;QAA+L,WAAW,EAAEC;MAA5M;IADQ,GAA8CgB,EAA9C,CAAR;EAGH,CAVD;;EAWA,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAON,EAAP,EAAc;IAC7B,IAAMO,IAAI,GAAG,EAAb;IACAD,IAAI,CAACE,OAAL,CAAa,UAAC3B,GAAD,EAAM4B,GAAN,EAAc;MACvBF,IAAI,CAACG,IAAL,CAAUX,SAAS,CAAClB,GAAD,EAAM4B,GAAN,CAAnB;IACH,CAFD,EAEG,KAFH;;IAGA,IAAIrE,KAAK,CAACuE,eAAV,EAA2B;MACvBJ,IAAI,CAACK,OAAL,CAAahB,gBAAgB,CAACU,IAAI,CAACA,IAAI,CAACO,MAAL,GAAc,CAAf,CAAJ,CAAsBC,OAAtB,EAAD,CAA7B;IACH;;IACD,OAAQ,KAAC,IAAD;MAAM,KAAK,EAAElD,KAAK,CAACtB,OAAN,CAAciE,IAA3B;MAAA,UACPA;IADO,GAAsCP,EAAtC,CAAR;EAGH,CAXD;;EAYA,IAAMe,WAAW,GAAG,SAAdA,WAAc,GAAM;IACtB,IAAMC,kBAAkB,GAAG5D,YAAY,IAAI,CAACF,aAA5C;IACA,IAAMoD,IAAI,GAAGlF,IAAI,CAACyC,YAAD,EAAeV,QAAf,EAAyB6D,kBAAzB,CAAjB;IACA,IAAMC,KAAK,GAAG,EAAd;;IACA,OAAOX,IAAI,CAACO,MAAZ,EAAoB;MAChBI,KAAK,CAACP,IAAN,CAAWL,UAAU,CAACC,IAAI,CAACY,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoBD,KAAK,CAACJ,MAA1B,CAArB;IACH;;IACD,OAAO,KAAC,IAAD;MAAM,KAAK,EAAEjD,KAAK,CAACtB,OAAN,CAAc6E,SAA3B;MAAA,UAAuCF;IAAvC,EAAP;EACH,CARD;;EASA,IAAMG,sBAAsB,GAAGpG,OAAO,CAAC,YAAM;IACzC,IAAI6C,YAAJ,EAAkB;MACd,IAAMwD,cAAc,GAAG3F,eAAe,CAACmC,YAAY,CAACO,KAAb,GAAqBK,SAArB,CAA+B,CAA/B,EAAkC,IAAlC,EAAwC6C,OAAxC,CAAgD,CAAhD,EAAmDC,OAAnD,CAA2D,CAAC,CAA5D,CAAD,CAAtC;;MACA,IAAIlE,uBAAuB,IAAI,EAACb,WAAD,YAACA,WAAW,CAAG6E,cAAH,CAAZ,CAA/B,EAA+D;QAC3D,OAAO,IAAP;MACH;IACJ;;IACD,OAAO,KAAP;EACH,CARqC,EAQnC,CAACxD,YAAD,EAAeR,uBAAf,EAAwCb,WAAxC,CARmC,CAAtC;;EASA,IAAMgF,YAAY,GAAG,SAAfA,YAAe,GAAM;IACvB,IAAMC,WAAW,GAAG7F,kBAAkB,CAACQ,KAAD,CAAtC;IACA,IAAMsF,GAAG,GAAGpE,YAAY,GAAGqE,SAAH,GAAe5D,MAAvC;IACA,IAAM6D,YAAY,GAAGtE,YAArB;IACA,IAAMuE,eAAe,GAAGvE,YAAY,GAAGsE,YAAH,GAAkB5F,cAAtD;IACA,OAAQ,KAAC,eAAD,kCAAqByF,WAArB;MAAkC,MAAM,EAAK/D,MAAL,YAAxC;MAA8D,KAAK,EAAEH,WAArE;MAAkF,GAAG,EAAEmE,GAAvF;MAA4F,KAAK,EAAE7D,YAAnG;MAAiH,QAAQ,EAAEU,QAA3H;MAAqI,uBAAuB,EAAE6C;IAA9J,GAAR;EACH,CAND;;EAOA,IAAMU,gBAAgB,GAAG7E,iBAAiB,GAAGhC,iBAAH,GAAuB8G,IAAjE;EACA,IAAMC,UAAU,GAAG;IACf3C,OAAO,EAAE,iBAAC4C,SAAD;MAAA,OAAe5C,QAAO,CAAC4C,SAAD,CAAtB;IAAA;EADM,CAAnB;EAGA,IAAMC,YAAY,GAAGjF,iBAAiB,GAAG+E,UAAH,GAAgBL,SAAtD;EACA,OAAQ,KAAC,gBAAD,kCAAsBO,YAAtB;IAAA,UACN,MAAC,IAAD;MAAM,KAAK,EAAE,CAACtE,KAAK,CAACtB,OAAN,CAAc6F,SAAf,EAA0BxE,UAA1B,CAAb;MAAoD,MAAM,EAAED,MAA5D;MAAoE,2BAA2B,EAAEF,2BAAjG;MACD,yBAAyB,EAAEC,yBAD1B;MAAA,WAGG+D,YAAY,EAHf,EAIGT,WAAW,EAJd;IAAA;EADM,GAAR;AAQH,CAzID;;AA0IA,eAAe5E,QAAf;AACAA,QAAQ,CAACiG,WAAT,GAAuB,UAAvB;AACAjG,QAAQ,CAACkG,SAAT,iDACOrG,cAAc,CAACqG,SADtB,GAEOpG,GAAG,CAACoG,SAFX;EAGI9F,KAAK,EAAE/B,SAAS,CAAC8H,MAHrB;EAIInF,QAAQ,EAAE3C,SAAS,CAAC+H,MAJxB;EAKIlF,uBAAuB,EAAE7C,SAAS,CAACgI,IALvC;EAMI7B,eAAe,EAAEnG,SAAS,CAACgI,IAN/B;EAOI5E,KAAK,EAAEpD,SAAS,CAACiI,SAAV,CAAoB,CAACjI,SAAS,CAAC8H,MAAX,EAAmB9H,SAAS,CAACkI,KAA7B,EAAoClI,SAAS,CAAC+H,MAA9C,CAApB,CAPX;EAQIjG,OAAO,EAAE9B,SAAS,CAACmI,MARvB;EASItG,WAAW,EAAE7B,SAAS,CAACmI,MAT3B;EAUIlG,OAAO,EAAEjC,SAAS,CAACmI,MAVvB;EAWIjG,OAAO,EAAElC,SAAS,CAACmI,MAXvB;EAYInG,WAAW,EAAEhC,SAAS,CAAC8H,MAZ3B;EAaIpF,aAAa,EAAE1C,SAAS,CAACgI,IAb7B;EAcIpF,YAAY,EAAE5C,SAAS,CAACgI,IAd5B;EAeI5F,UAAU,EAAEpC,SAAS,CAACoI,IAf1B;EAgBI/F,cAAc,EAAErC,SAAS,CAACoI,IAhB9B;EAiBI9F,aAAa,EAAEtC,SAAS,CAACoI,IAjB7B;EAkBI7F,qBAAqB,EAAEvC,SAAS,CAACoI,IAlBrC;EAmBI5F,kBAAkB,EAAExC,SAAS,CAACgI,IAnBlC;EAoBIvF,iBAAiB,EAAEzC,SAAS,CAACgI,IApBjC;EAqBIK,iBAAiB,EAAErI,SAAS,CAACgI,IArBjC;EAsBIjF,WAAW,EAAE/C,SAAS,CAACiI,SAAV,CAAoB,CAACjI,SAAS,CAAC8H,MAAX,EAAmB9H,SAAS,CAAC+H,MAA7B,EAAqC/H,SAAS,CAACkI,KAA/C,CAApB,CAtBjB;EAuBIpF,YAAY,EAAE9C,SAAS,CAACsI,GAvB5B;EAwBInG,wBAAwB,EAAEnC,SAAS,CAACgI;AAxBxC"},"metadata":{},"sourceType":"module"}
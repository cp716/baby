{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"textStyle\", \"style\", \"numeric\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\n\nvar DataTableCell = function DataTableCell(_ref) {\n  var children = _ref.children,\n      textStyle = _ref.textStyle,\n      style = _ref.style,\n      numeric = _ref.numeric,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    style: [styles.container, numeric && styles.right, style]\n  }), React.createElement(Text, {\n    style: textStyle,\n    numberOfLines: 1\n  }, children));\n};\n\nDataTableCell.displayName = 'DataTable.Cell';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  }\n});\nexport default DataTableCell;","map":{"version":3,"sources":["DataTableCell.tsx"],"names":["React","TouchableRipple","Text","DataTableCell","children","textStyle","style","numeric","rest","styles","container","right","displayName","StyleSheet","create","flex","flexDirection","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAUA,OAAOC,eAAP;AACA,OAAOC,IAAP;;AAqDA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAA;EAAA,IACpBC,QADoB,GAMd,IANc,CACpBA,QADoB;EAAA,IAEpBC,SAFoB,GAMd,IANc,CAEpBA,SAFoB;EAAA,IAGpBC,KAHoB,GAMd,IANc,CAGpBA,KAHoB;EAAA,IAIpBC,OAJoB,GAMd,IANc,CAIpBA,OAJoB;EAAA,IAKjBC,IALiB,4BAMd,IANc;;EAMd,OACN,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,QAAA,CAAA,EAAA,EACVA,IADU,EACN;IACR,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBH,OAAO,IAAIE,MAAM,CAACE,KAArC,EAA4CL,KAA5C;EADC,CADM,CAAhB,EAIE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;IAAC,KAAK,EAAED,SAAR;IAAmB,aAAa,EAAE;EAAlC,CAAL,EACGD,QADH,CAJF,CADM;AASP,CAfD;;AAiBAD,aAAa,CAACS,WAAdT,GAA4B,gBAA5BA;AAEA,IAAMM,MAAM,GAAGI,UAAU,CAACC,MAAXD,CAAkB;EAC/BH,SAAS,EAAE;IACTK,IAAI,EAAE,CADG;IAETC,aAAa,EAAE,KAFN;IAGTC,UAAU,EAAE;EAHH,CADoB;EAO/BN,KAAK,EAAE;IACLO,cAAc,EAAE;EADX;AAPwB,CAAlBL,CAAf;AAYA,eAAeV,aAAf","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  GestureResponderEvent,\n} from 'react-native';\n\nimport type { $RemoveChildren } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableCell`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n */\n\nconst DataTableCell = ({\n  children,\n  textStyle,\n  style,\n  numeric,\n  ...rest\n}: Props) => (\n  <TouchableRipple\n    {...rest}\n    style={[styles.container, numeric && styles.right, style]}\n  >\n    <Text style={textStyle} numberOfLines={1}>\n      {children}\n    </Text>\n  </TouchableRipple>\n);\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n"]},"metadata":{},"sourceType":"module"}